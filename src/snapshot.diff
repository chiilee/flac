Flags used to compile the code:
   CXX=g++ debug=0 openmp=1
   PATH=/home/chiilee/git-flac/flac/src
   LD_LIBRARY_PATH=/home/chiilee/git-flac/flac/src


==== Summary of the code ====
commit dab1914766f697482523d365cb727737bb8598a2
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 16:15:13 2019 +0800

    Set the element for melting as a constant
    
    Avoid sudden generation of basalt due to mesh moving up
    <src/newphase2marker> set the element for melting as a constant

commit 03ea71ee6cbe0aa06de43813d579bf034ceb9f30
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 16:07:45 2019 +0800

    Add a new phase (OC3)
    
    to separate the overriding crust, downgoing crust and crust of back-arc basin
    <src/phase.inc> new phase: ocean3
    <src/newphase2markers><src/init_stress> adjustment related to new phase (ocean3)

commit d9c5d1f77cdb21ac5c46f54afa4072151e02be8e
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 14:53:56 2019 +0800

    Consider partial melting caused by eclogites and sediments
    
    <src/newphase2marker> partial melting caused by eclogites (Yaxley and Green, 1994)
                          partial melting caused by sediments (Nichols et al., 1994)
                          print out the position of melting markers
    <src/phase.inc> new phase: sediment3, dehydrated eclogite

commit 2e555b1806c5bc37d20e5250260b5be548ebf33d
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 14:12:51 2019 +0800

    Fixed bugs of reading parameters & yield stress decrease according to melt vol.
    
    <src/rh_plastic> yield stress decrease according to melt vol.
    <src/params.inc><src/read_params> read new parameter: weaken_max, weaken_launch, weaken_saturated, ys_weaken_launch, ys_weaken_ratio

commit ec93779480556830584136bfb9f48d2627f08a6f
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 13:57:29 2019 +0800

    Viscosity decrease according to melt vol.
    
    <src/matprop>  viscosity decrease according to melt vol.

commit c557d25b18149eab47ef7f76177b9524ea5d47b9
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 12:05:30 2019 +0800

    Calculate the melting markers and melting vol. of rocks
    
    <src/newphase2marker> find melting markers based on the melting conditions of hydrated mantle
                          print out the position of melting markers
    <src/fl_therm> calculate the volume melting ratio in each elements
                   melting vol. decay
    <src/arrays> new arrays: chamber(melting vol.), meltingmarker, countmarker
    <src/matprop> marker will not be melted below 200km
    <src/params.inc><src/read_params> read new parameter: LVW width, melting vol. decay
    <src/remesh> do chamber remesh
    <src/outflac><src/saveflac><src/rsflac> save/read data melting marker and melt vol.
    <util/flac> functions for reading new arrays
    <util/flac2vtk> make vtk data for new arrays
    <util/flac_interpolate> do chamber interploate

commit 89669f030dd2388b8cfa151b1ba3196fff0808f4
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Fri Oct 25 17:22:48 2019 +0800

    Add new boundary condition & MOR on the right
    
    <src/fl_therm> MOR: high temperature on the right side
    <src/matprops> MOR: low viscosity on the right side
                   Calculation method of mantle viscosity for 410 and 660
    <src/init_bc> Allow velocity to occur in the middle of the model

commit d21e63ebbccca41124cf8f5278292855c1bf78b6
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Fri Oct 25 15:47:53 2019 +0800

    Sysment adjusments from Eh Tan
    
    src/.. & util/..

commit 89ab0eaa26ecdd95faa7f1a5cccb7d243a71d35f
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Thu Oct 24 16:32:04 2019 +0800

    Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)

== Code modification (not checked-in) ==
diff --git a/src/newphase2marker.f90 b/src/newphase2marker.f90
index c16db0d..1da9810 100644
--- a/src/newphase2marker.f90
+++ b/src/newphase2marker.f90
@@ -263,8 +263,8 @@ do kk = 1 , nmarkers
         !$OMP end critical (change_phase1)
         mark(kk)%phase = kmetased
         !record the data for melting element(chii)
-        meltingmarker(j,i)=meltingmarker(j,i)+1
-        write(2,*) mark(kk)%ID, mark(kk)%x, mark(kk)%y, time/sec_year/1.e6,i,j, '2',depth
+        !#meltingmarker(j,i)=meltingmarker(j,i)+1
+        !#write(2,*) mark(kk)%ID, mark(kk)%x, mark(kk)%y, time/sec_year/1.e6,i,j, '2',depth
     case (khydmant)
         if (depth < 87.e3) then
             tshydmant=(1100.-760.)*(depth-87.e3)/(0.e3-87.e3)+760.-(depth*3e-4)
diff --git a/src/snapshot.diff b/src/snapshot.diff
index 9976c7c..46a8c79 100644
--- a/src/snapshot.diff
+++ b/src/snapshot.diff
@@ -5,3728 +5,25 @@ Flags used to compile the code:
 
 
 ==== Summary of the code ====
-commit d9c5d1f77cdb21ac5c46f54afa4072151e02be8e
+commit dab1914766f697482523d365cb727737bb8598a2
 Author: chiilee <blackdeviljuliet@gmail.com>
-Date:   Mon Oct 28 14:53:56 2019 +0800
+Date:   Mon Oct 28 16:15:13 2019 +0800
 
-    Consider partial melting caused by eclogites and sediments
+    Set the element for melting as a constant
     
-    <src/newphase2marker> partial melting caused by eclogites (Yaxley and Green, 1994)
-                          partial melting caused by sediments (Nichols et al., 1994)
-                          print out the position of melting markers
-    <src/phase.inc> new phase: sediment3, dehydrated eclogite
+    Avoid sudden generation of basalt due to mesh moving up
+    <src/newphase2marker> set the element for melting as a constant
 
-commit 2e555b1806c5bc37d20e5250260b5be548ebf33d
+commit 03ea71ee6cbe0aa06de43813d579bf034ceb9f30
 Author: chiilee <blackdeviljuliet@gmail.com>
-Date:   Mon Oct 28 14:12:51 2019 +0800
+Date:   Mon Oct 28 16:07:45 2019 +0800
 
-    Fixed bugs of reading parameters & yield stress decrease according to melt vol.
+    Add a new phase (OC3)
     
-    <src/rh_plastic> yield stress decrease according to melt vol.
-    <src/params.inc><src/read_params> read new parameter: weaken_max, weaken_launch, weaken_saturated, ys_weaken_launch, ys_weaken_ratio
+    to separate the overriding crust, downgoing crust and crust of back-arc basin
+    <src/phase.inc> new phase: ocean3
+    <src/newphase2markers><src/init_stress> adjustment related to new phase (ocean3)
 
-commit ec93779480556830584136bfb9f48d2627f08a6f
-Author: chiilee <blackdeviljuliet@gmail.com>
-Date:   Mon Oct 28 13:57:29 2019 +0800
-
-    Viscosity decrease according to melt vol.
-    
-    <src/matprop>  viscosity decrease according to melt vol.
-
-commit c557d25b18149eab47ef7f76177b9524ea5d47b9
-Author: chiilee <blackdeviljuliet@gmail.com>
-Date:   Mon Oct 28 12:05:30 2019 +0800
-
-    Calculate the melting markers and melting vol. of rocks
-    
-    <src/newphase2marker> find melting markers based on the melting conditions of hydrated mantle
-                          print out the position of melting markers
-    <src/fl_therm> calculate the volume melting ratio in each elements
-                   melting vol. decay
-    <src/arrays> new arrays: chamber(melting vol.), meltingmarker, countmarker
-    <src/matprop> marker will not be melted below 200km
-    <src/params.inc><src/read_params> read new parameter: LVW width, melting vol. decay
-    <src/remesh> do chamber remesh
-    <src/outflac><src/saveflac><src/rsflac> save/read data melting marker and melt vol.
-    <util/flac> functions for reading new arrays
-    <util/flac2vtk> make vtk data for new arrays
-    <util/flac_interpolate> do chamber interploate
-
-commit 89669f030dd2388b8cfa151b1ba3196fff0808f4
-Author: chiilee <blackdeviljuliet@gmail.com>
-Date:   Fri Oct 25 17:22:48 2019 +0800
-
-    Add new boundary condition & MOR on the right
-    
-    <src/fl_therm> MOR: high temperature on the right side
-    <src/matprops> MOR: low viscosity on the right side
-                   Calculation method of mantle viscosity for 410 and 660
-    <src/init_bc> Allow velocity to occur in the middle of the model
-
-commit d21e63ebbccca41124cf8f5278292855c1bf78b6
-Author: chiilee <blackdeviljuliet@gmail.com>
-Date:   Fri Oct 25 15:47:53 2019 +0800
-
-    Sysment adjusments from Eh Tan
-    
-    src/.. & util/..
-
-commit 89ab0eaa26ecdd95faa7f1a5cccb7d243a71d35f
-Author: chiilee <blackdeviljuliet@gmail.com>
-Date:   Thu Oct 24 16:32:04 2019 +0800
-
-    Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
-
-== Code modification (not checked-in) ==
-diff --git a/src/init_stress.f90 b/src/init_stress.f90
-index 560da26..843c073 100644
---- a/src/init_stress.f90
-+++ b/src/init_stress.f90
-@@ -14,7 +14,7 @@ degrad = pi/180.
- 
- n = 0
- do 51 i = 1,nx-1
--    if(iphase(1,i) == kocean1 .or. iphase(1,i) == kocean2) then
-+    if(iphase(1,i) == kocean1 .or. iphase(1,i) == kocean2 .or. iphase(1,i) == kocean3) then
-         ! oceanic crust under 8000 meter of ocean (density = 1030)
-         rogh = -1030. * g * 8.e3
-     else
-diff --git a/src/newphase2marker.f90 b/src/newphase2marker.f90
-index a73547b..6eff349 100644
---- a/src/newphase2marker.f90
-+++ b/src/newphase2marker.f90
-@@ -139,6 +139,7 @@ do kk = 1 , nmarkers
-         do jbelow = min(j+1,nz-1), min(j+3,nz-1)
-             if(phase_ratio(kocean1,jbelow,i) > 0.8 .or. &
-                  phase_ratio(kocean2,jbelow,i) > 0.8 .or. &
-+                 phase_ratio(kocean3,jbelow,i) > 0.8 .or. &
-                  phase_ratio(karc1,jbelow,i) > 0.8 .or. &
-                  phase_ratio(ksed1,jbelow,i) > 0.8) then
-                 !$OMP critical (change_phase1)
-@@ -180,6 +181,7 @@ do kk = 1 , nmarkers
-         do jbelow = min(j+1,nz-1), min(j+nelem_serp,nz-1)
-             if(phase_ratio(kocean1,jbelow,i) > 0.8 .or. &
-                 phase_ratio(kocean2,jbelow,i) > 0.8 .or. &
-+                phase_ratio(kocean3,jbelow,i) > 0.8 .or. &
-                 phase_ratio(ksed1,jbelow,i) > 0.8) then
-                 !$OMP critical (change_phase1)
-                 nphase_counter(iph,j,i) = nphase_counter(iph,j,i) - 1
-@@ -192,7 +194,7 @@ do kk = 1 , nmarkers
-                 exit
-             endif
-         enddo
--    case (kocean0, kocean1, kocean2)
-+    case (kocean0, kocean1, kocean2, kocean3)
-         ! basalt -> eclogite
-         ! phase change pressure
-         trpres = -0.3e9 + 2.2e6*tmpr
-@@ -246,7 +248,7 @@ do kk = 1 , nmarkers
-         jchanged(nchanged) = j
-         !$OMP end critical (change_phase1)
-         mark(kk)%phase = khydmant
--    case (ksed1, ksed2)
-+    case (ksed1, ksed2, ksed3)
-         ! dehydration, sediment -> schist/gneiss
-         ! from sediment solidus in Nichols et al., Nature, 1994
-         if (tmpr < 650 .or. depth < 20e3) cycle
-diff --git a/src/phases.inc b/src/phases.inc
-index 224a4ce..72ee556 100644
---- a/src/phases.inc
-+++ b/src/phases.inc
-@@ -20,4 +20,4 @@ integer, parameter :: kweakmc = 15
- integer, parameter :: khydmant = 16
- integer, parameter :: ksed3 = 17
- integer, parameter :: kdehyeclg = 18
--
-+integer, parameter :: kocean3 = 19
-diff --git a/src/snapshot.diff b/src/snapshot.diff
-index 05d804f..3ef09e5 100644
---- a/src/snapshot.diff
-+++ b/src/snapshot.diff
-@@ -5,3568 +5,17 @@ Flags used to compile the code:
- 
- 
- ==== Summary of the code ====
--commit 2e555b1806c5bc37d20e5250260b5be548ebf33d
--Author: chiilee <blackdeviljuliet@gmail.com>
--Date:   Mon Oct 28 14:12:51 2019 +0800
--
--    Fixed bugs of reading parameters & yield stress decrease according to melt vol.
--    
--    <src/rh_plastic> yield stress decrease according to melt vol.
--    <src/params.inc><src/read_params> read new parameter: weaken_max, weaken_launch, weaken_saturated, ys_weaken_launch, ys_weaken_ratio
--
--commit ec93779480556830584136bfb9f48d2627f08a6f
-+commit d9c5d1f77cdb21ac5c46f54afa4072151e02be8e
- Author: chiilee <blackdeviljuliet@gmail.com>
--Date:   Mon Oct 28 13:57:29 2019 +0800
-+Date:   Mon Oct 28 14:53:56 2019 +0800
- 
--    Viscosity decrease according to melt vol.
-+    Consider partial melting caused by eclogites and sediments
-     
--    <src/matprop>  viscosity decrease according to melt vol.
--
--commit c557d25b18149eab47ef7f76177b9524ea5d47b9
--Author: chiilee <blackdeviljuliet@gmail.com>
--Date:   Mon Oct 28 12:05:30 2019 +0800
--
--    Calculate the melting markers and melting vol. of rocks
--    
--    <src/newphase2marker> find melting markers based on the melting conditions of hydrated mantle
-+    <src/newphase2marker> partial melting caused by eclogites (Yaxley and Green, 1994)
-+                          partial melting caused by sediments (Nichols et al., 1994)
-                           print out the position of melting markers
--    <src/fl_therm> calculate the volume melting ratio in each elements
--                   melting vol. decay
--    <src/arrays> new arrays: chamber(melting vol.), meltingmarker, countmarker
--    <src/matprop> marker will not be melted below 200km
--    <src/params.inc><src/read_params> read new parameter: LVW width, melting vol. decay
--    <src/remesh> do chamber remesh
--    <src/outflac><src/saveflac><src/rsflac> save/read data melting marker and melt vol.
--    <util/flac> functions for reading new arrays
--    <util/flac2vtk> make vtk data for new arrays
--    <util/flac_interpolate> do chamber interploate
-+    <src/phase.inc> new phase: sediment3, dehydrated eclogite
- 
--commit 89669f030dd2388b8cfa151b1ba3196fff0808f4
--Author: chiilee <blackdeviljuliet@gmail.com>
--Date:   Fri Oct 25 17:22:48 2019 +0800
--
--    Add new boundary condition & MOR on the right
--    
--    <src/fl_therm> MOR: high temperature on the right side
--    <src/matprops> MOR: low viscosity on the right side
--                   Calculation method of mantle viscosity for 410 and 660
--    <src/init_bc> Allow velocity to occur in the middle of the model
--
--commit d21e63ebbccca41124cf8f5278292855c1bf78b6
--Author: chiilee <blackdeviljuliet@gmail.com>
--Date:   Fri Oct 25 15:47:53 2019 +0800
--
--    Sysment adjusments from Eh Tan
--    
--    src/.. & util/..
--
--commit 89ab0eaa26ecdd95faa7f1a5cccb7d243a71d35f
--Author: chiilee <blackdeviljuliet@gmail.com>
--Date:   Thu Oct 24 16:32:04 2019 +0800
--
--    Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
--
--== Code modification (not checked-in) ==
--diff --git a/src/snapshot.diff b/src/snapshot.diff
--index e4a5f88..7132d12 100644
----- a/src/snapshot.diff
--+++ b/src/snapshot.diff
--@@ -5,3481 +5,15 @@ Flags used to compile the code:
-- 
-- 
-- ==== Summary of the code ====
---commit ec93779480556830584136bfb9f48d2627f08a6f
---Author: chiilee <blackdeviljuliet@gmail.com>
---Date:   Mon Oct 28 13:57:29 2019 +0800
---
---    Viscosity decrease according to melt vol.
---    
---    <src/matprop>  viscosity decrease according to melt vol.
---
---commit c557d25b18149eab47ef7f76177b9524ea5d47b9
--+commit 2e555b1806c5bc37d20e5250260b5be548ebf33d
-- Author: chiilee <blackdeviljuliet@gmail.com>
---Date:   Mon Oct 28 12:05:30 2019 +0800
--+Date:   Mon Oct 28 14:12:51 2019 +0800
-- 
---    Calculate the melting markers and melting vol. of rocks
--+    Fixed bugs of reading parameters & yield stress decrease according to melt vol.
--     
---    <src/newphase2marker> find melting markers based on the melting conditions of hydrated mantle
---                          print out the position of melting markers
---    <src/fl_therm> calculate the volume melting ratio in each elements
---                   melting vol. decay
---    <src/arrays> new arrays: chamber(melting vol.), meltingmarker, countmarker
---    <src/matprop> marker will not be melted below 200km
---    <src/params.inc><src/read_params> read new parameter: LVW width, melting vol. decay
---    <src/remesh> do chamber remesh
---    <src/outflac><src/saveflac><src/rsflac> save/read data melting marker and melt vol.
---    <util/flac> functions for reading new arrays
---    <util/flac2vtk> make vtk data for new arrays
---    <util/flac_interpolate> do chamber interploate
---
---commit 89669f030dd2388b8cfa151b1ba3196fff0808f4
---Author: chiilee <blackdeviljuliet@gmail.com>
---Date:   Fri Oct 25 17:22:48 2019 +0800
--+    <src/rh_plastic> yield stress decrease according to melt vol.
--+    <src/params.inc><src/read_params> read new parameter: weaken_max, weaken_launch, weaken_saturated, ys_weaken_launch, ys_weaken_ratio
-- 
---    Add new boundary condition & MOR on the right
---    
---    <src/fl_therm> MOR: high temperature on the right side
---    <src/matprops> MOR: low viscosity on the right side
---                   Calculation method of mantle viscosity for 410 and 660
---    <src/init_bc> Allow velocity to occur in the middle of the model
---
---commit d21e63ebbccca41124cf8f5278292855c1bf78b6
---Author: chiilee <blackdeviljuliet@gmail.com>
---Date:   Fri Oct 25 15:47:53 2019 +0800
---
---    Sysment adjusments from Eh Tan
---    
---    src/.. & util/..
---
---commit 89ab0eaa26ecdd95faa7f1a5cccb7d243a71d35f
---Author: chiilee <blackdeviljuliet@gmail.com>
---Date:   Thu Oct 24 16:32:04 2019 +0800
---
---    Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
---
---== Code modification (not checked-in) ==
---diff --git a/src/params.inc b/src/params.inc
---index 66d4231..ce98854 100644
------ a/src/params.inc
---+++ b/src/params.inc
---@@ -36,7 +36,8 @@ common /rheol/ visc(20),den(20),alfa(20),beta(20),pln(20),acoef(20),eactiv(20),r
---      imx1(20),imx2(20),imy1(20),imy2(20), &
---      itx1(20),itx2(20),ity1(20),ity2(20), &
---      nphasl,nzone_marker,nmarkers, iint_marker,iint_tracer,nzone_tracer, &
----     weaken_width, weaken_decay
---+     weaken_width, weaken_max, weaken_launch, weaken_saturated, &
---+     ys_weaken_launch, ys_weaken_ratio, weaken_decay
--- 
--- common /inhomog/ ix1(50),ix2(50),iy1(50),iy2(50),inphase(50),igeom(50), &
---      xinitaps(50), inhom
---diff --git a/src/read_params.f90 b/src/read_params.f90
---index ef1c398..3a2eab1 100644
------ a/src/read_params.f90
---+++ b/src/read_params.f90
---@@ -245,6 +245,10 @@ read(4,*) ny_inject, nelem_inject, rate_inject
--- call AdvanceToNextInputLine( 4 )
--- read(4,*) weaken_width
--- call AdvanceToNextInputLine( 4 )
---+read(4,*) weaken_max, weaken_launch, weaken_saturated
---+call AdvanceToNextInputLine( 4 )
---+read(4,*) ys_weaken_launch, ys_weaken_ratio
---+call AdvanceToNextInputLine( 4 )
--- read(4,*) weaken_decay
--- 
--- ! REMESHING
---diff --git a/src/rh_plastic.f90 b/src/rh_plastic.f90
---index 2b465a7..1f9a518 100644
------ a/src/rh_plastic.f90
---+++ b/src/rh_plastic.f90
---@@ -254,6 +254,7 @@ use arrays
--- include 'precision.inc'
--- include 'params.inc'
--- include 'arrays.inc'
---+real:: pi= 3.141592654
--- 
--- pls_curr = aps(j,i)
--- 
---@@ -267,25 +268,55 @@ hardn = 0
--- do iph = 1, nphase
---     if(phase_ratio(iph,j,i) .lt. 0.01) cycle
--- 
----    if(pls_curr < plstrain1(iph)) then
----        ! no weakening yet
----        f = fric1(iph)
----        c = cohesion1(iph)
----        d = dilat1(iph)
----        h = 0
----    else if (pls_curr < plstrain2(iph)) then
----        ! Find current properties from linear interpolation
----        dpl = (pls_curr - plstrain1(iph)) / (plstrain2(iph) - plstrain1(iph))
----        f =  fric1(iph) + (fric2(iph) - fric1(iph)) * dpl
----        d = dilat1(iph) + (dilat2(iph) - dilat1(iph)) * dpl
----        c = cohesion1(iph) + (cohesion2(iph) - cohesion1(iph)) * dpl
----        h = (cohesion2(iph) - cohesion1(iph)) / (plstrain2(iph) - plstrain1(iph))
---+    if (chamber(j,i) < ys_weaken_launch .or. time/sec_year/1.e6 < 3.) then
---+        if(pls_curr < plstrain1(iph)) then
---+            ! no weakening yet
---+            f = fric1(iph)
---+            c = cohesion1(iph)
---+            d = dilat1(iph)
---+            h = 0
---+        else if (pls_curr < plstrain2(iph)) then
---+            ! Find current properties from linear interpolation
---+            dpl = (pls_curr - plstrain1(iph)) / (plstrain2(iph) - plstrain1(iph))
---+            f = fric1(iph) + (fric2(iph) - fric1(iph)) * dpl
---+            d = dilat1(iph) + (dilat2(iph) - dilat1(iph)) * dpl
---+            c = cohesion1(iph) + (cohesion2(iph) - cohesion1(iph)) * dpl
---+            h = (cohesion2(iph) - cohesion1(iph)) / (plstrain2(iph) - plstrain1(iph))
---+        else
---+            ! saturated weakening
---+            f = fric2(iph)
---+            c = cohesion2(iph)
---+            d = dilat2(iph)
---+            h = 0
---+        endif
---+    !weakening due to melting (chii)
---     else
----        ! saturated weakening
----        f = fric2(iph)
----        c = cohesion2(iph)
----        d = dilat2(iph)
----        h = 0
---+        f1 = atan(tan(fric1(iph)*pi/180)*ys_weaken_ratio)*180/pi
---+        f2 = atan(tan(fric2(iph)*pi/180)*ys_weaken_ratio)*180/pi
---+        c1=cohesion1(iph)
---+        c2=cohesion2(iph)
---+
---+        if(pls_curr < plstrain1(iph)) then
---+            ! no weakening yet
---+            f = f1
---+            c = c1
---+            d = dilat1(iph)
---+            h = 0
---+        else if (pls_curr < plstrain2(iph)) then
---+            ! Find current properties from linear interpolation
---+            dpl = (pls_curr - plstrain1(iph)) / (plstrain2(iph) - plstrain1(iph))
---+            f =  f1 + f2 - f1 * dpl
---+            d = dilat1(iph) + (dilat2(iph) - dilat1(iph)) * dpl
---+            c = c1 + (c2 - c1)* dpl
---+            h = (c2 - c1) / (plstrain2(iph) -plstrain1(iph))
---+        else
---+            ! saturated weakening
---+            f = f2
---+            c = c2
---+            d = dilat2(iph)
---+            h = 0
---+
---+        endif
---     endif
--- 
---     ! using harmonic mean on friction and cohesion
---@@ -295,6 +326,8 @@ do iph = 1, nphase
---     psi = psi + phase_ratio(iph,j,i) * d
---     hardn = hardn + phase_ratio(iph,j,i) * h
--- 
---+
---+
--- enddo
--- 
--- phi = 1 / phi
---diff --git a/src/snapshot.diff b/src/snapshot.diff
---index 630283d..4e96f28 100644
------ a/src/snapshot.diff
---+++ b/src/snapshot.diff
---@@ -5,6 +5,14 @@ Flags used to compile the code:
--- 
--- 
--- ==== Summary of the code ====
---+commit ec93779480556830584136bfb9f48d2627f08a6f
---+Author: chiilee <blackdeviljuliet@gmail.com>
---+Date:   Mon Oct 28 13:57:29 2019 +0800
---+
---+    Viscosity decrease according to melt vol.
---+    
---+    <src/matprop>  viscosity decrease according to melt vol.
---+
--- commit c557d25b18149eab47ef7f76177b9524ea5d47b9
--- Author: chiilee <blackdeviljuliet@gmail.com>
--- Date:   Mon Oct 28 12:05:30 2019 +0800
---@@ -50,3171 +58,112 @@ Date:   Thu Oct 24 16:32:04 2019 +0800
---     Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
--- 
--- == Code modification (not checked-in) ==
----diff --git a/src/snapshot.diff b/src/snapshot.diff
----index bbbfb5c..81e4ed5 100644
------- a/src/snapshot.diff
----+++ b/src/snapshot.diff
----@@ -5,3096 +5,25 @@ Flags used to compile the code:
---+diff --git a/src/params.inc b/src/params.inc
---+index 66d4231..ce98854 100644
---+--- a/src/params.inc
---++++ b/src/params.inc
---+@@ -36,7 +36,8 @@ common /rheol/ visc(20),den(20),alfa(20),beta(20),pln(20),acoef(20),eactiv(20),r
---+      imx1(20),imx2(20),imy1(20),imy2(20), &
---+      itx1(20),itx2(20),ity1(20),ity2(20), &
---+      nphasl,nzone_marker,nmarkers, iint_marker,iint_tracer,nzone_tracer, &
---+-     weaken_width, weaken_decay
---++     weaken_width, weaken_max, weaken_launch, weaken_saturated, &
---++     ys_weaken_launch, ys_weaken_ratio, weaken_decay
---  
---+ common /inhomog/ ix1(50),ix2(50),iy1(50),iy2(50),inphase(50),igeom(50), &
---+      xinitaps(50), inhom
---+diff --git a/src/read_params.f90 b/src/read_params.f90
---+index ef1c398..3a2eab1 100644
---+--- a/src/read_params.f90
---++++ b/src/read_params.f90
---+@@ -245,6 +245,10 @@ read(4,*) ny_inject, nelem_inject, rate_inject
---+ call AdvanceToNextInputLine( 4 )
---+ read(4,*) weaken_width
---+ call AdvanceToNextInputLine( 4 )
---++read(4,*) weaken_max, weaken_launch, weaken_saturated
---++call AdvanceToNextInputLine( 4 )
---++read(4,*) ys_weaken_launch, ys_weaken_ratio
---++call AdvanceToNextInputLine( 4 )
---+ read(4,*) weaken_decay
---  
---- ==== Summary of the code ====
-----commit 89669f030dd2388b8cfa151b1ba3196fff0808f4
----+commit c557d25b18149eab47ef7f76177b9524ea5d47b9
---- Author: chiilee <blackdeviljuliet@gmail.com>
-----Date:   Fri Oct 25 17:22:48 2019 +0800
-----
-----    Add new boundary condition & MOR on the right
-----    
-----    <src/fl_therm> MOR: high temperature on the right side
-----    <src/matprops> MOR: low viscosity on the right side
-----                   Calculation method of mantle viscosity for 410 and 660
-----    <src/init_bc> Allow velocity to occur in the middle of the model
-----
-----commit d21e63ebbccca41124cf8f5278292855c1bf78b6
-----Author: chiilee <blackdeviljuliet@gmail.com>
-----Date:   Fri Oct 25 15:47:53 2019 +0800
----+Date:   Mon Oct 28 12:05:30 2019 +0800
---+ ! REMESHING
---+diff --git a/src/rh_plastic.f90 b/src/rh_plastic.f90
---+index 2b465a7..1f9a518 100644
---+--- a/src/rh_plastic.f90
---++++ b/src/rh_plastic.f90
---+@@ -254,6 +254,7 @@ use arrays
---+ include 'precision.inc'
---+ include 'params.inc'
---+ include 'arrays.inc'
---++real:: pi= 3.141592654
---  
-----    Sysment adjusments from Eh Tan
----+    Calculate the melting markers and melting vol. of rocks
----     
-----    src/.. & util/..
----+    <src/newphase2marker> find melting markers based on the melting conditions of hydrated mantle
----+                          print out the position of melting markers
----+    <src/fl_therm> calculate the volume melting ratio in each elements
----+                   melting vol. decay
----+    <src/arrays> new arrays: chamber(melting vol.), meltingmarker, countmarker
----+    <src/matprop> marker will not be melted below 200km
----+    <src/params.inc><src/read_params> read new parameter: LVW width, melting vol. decay
----+    <src/remesh> do chamber remesh
----+    <src/outflac><src/saveflac><src/rsflac> save/read data melting marker and melt vol.
----+    <util/flac> functions for reading new arrays
----+    <util/flac2vtk> make vtk data for new arrays
----+    <util/flac_interpolate> do chamber interploate
---+ pls_curr = aps(j,i)
---  
-----commit 89ab0eaa26ecdd95faa7f1a5cccb7d243a71d35f
-----Author: chiilee <blackdeviljuliet@gmail.com>
-----Date:   Thu Oct 24 16:32:04 2019 +0800
-----
-----    Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
-----
-----== Code modification (not checked-in) ==
-----diff --git a/src/arrays.f90 b/src/arrays.f90
-----index 3b80cc8..3ecb5fe 100644
-------- a/src/arrays.f90
-----+++ b/src/arrays.f90
-----@@ -13,6 +13,10 @@ module arrays
-----   ! temporary array
-----   real*8, pointer, save :: junk2(:,:)
----- 
-----+  ! array for arc melting
-----+  integer, pointer, save :: meltingmarker(:,:)
-----+  integer, pointer, save :: countmarker(:,:)
-----+  real*8, pointer, save :: chamber(:,:)
----- 
----- contains
----- 
-----@@ -38,6 +42,10 @@ contains
----- 
-----     allocate(junk2(nz, nx))
----- 
-----+    allocate(meltingmarker(nz-1, nx-1))
-----+    allocate(countmarker(nz-1, nx-1))
-----+    allocate(chamber(nz-1, nx-1))
-----+
-----   end subroutine allocate_arrays
----- 
----- end module arrays
-----diff --git a/src/fl_therm.f90 b/src/fl_therm.f90
-----index d15f58a..d22faed 100644
-------- a/src/fl_therm.f90
-----+++ b/src/fl_therm.f90
-----@@ -8,8 +8,11 @@ include 'params.inc'
----- include 'arrays.inc'
----- 
----- dimension flux(mnz,mnx,2,2), add_source(mnz,mnx)
-----+real moho(nx)
-----+real M_ratio, M_value
----- 
------heat_latent_magma = 4.2d5  ! J/kg, latent heat of freezing magma
-----+
-----+heat_latent_magma = 0. !4.2d5  ! J/kg, latent heat of freezing magma
----- 
----- ! real_area = 0.5* (1./area(n,t))
----- ! Calculate Fluxes in every triangle
-----@@ -271,6 +274,123 @@ end do
----- !$OMP end do
----- !$OMP end parallel
----- 
-----+! Attenuation of the array of heating history (chii)
-----+!   N(t)= N*exp(-lamda*dt)
-----+!   exp(-lamda*dt)~ 1-lamda*dt
-----+weaken = 1- weaken_decay*dt
-----+
-----+!   no attenuation after just restart
-----+if (nloop .eq. nloop_restarted) weaken=1
-----+
-----+do j = 1,nz
-----+  do i = 1,nx
-----+       chamber(j,i)=chamber(j,i)*weaken
-----+       if (chamber(j,i)>=1) chamber(j,i)=0.99
-----+  enddo
-----+enddo
-----+
-----+! Record the histroy of partial melting on different positions of the
-----+! mantle wedge --> chamber (chii)
-----+!                              (j1,i)
-----+! ---------------------------------------------------sufrace
-----+!         /\                   /\
-----+!        /  \                 / |\
-----+!       /    \               /  | \
-----+!       \    /              /   |  \
-----+!        \  /              /    |   \
-----+!         \/              /     |    \
-----+!         * partial      /      |     \
-----+!           melting     /       |      \
-----+!                      /      (jm,i)    \ (i2,jm)
-----+! ----------------------------------------------------moho
-----+!               (i1,jm)\        |       /
-----+!                        \      |      /
-----+!                         \     |    /
-----+!                           \   |   /
-----+!                            \  | /
-----+!                              \|/
-----+!                               * partial metiling
-----+!                                 (j,i)
-----+!
-----+!                     |---wedge width---|
-----+! Two case:
-----+!  1.partial melting takes place above moho:
-----+!    diamond shape symmetry, jm=(j1+j2)/2
-----+!  2.partial melting takes place below moho:
-----+!    the maximum width of the diamond occurs on the moho surface
-----+
-----+dis = weaken_width*0.5*1.e+3
-----+
-----+!   find the z-index representing Moho in the x-direction
-----+do i = 1,nx
-----+  j=1
-----+  do while (iphase(j,i).eq.1 .or. iphase(j,i).eq.2 .or. &
-----+            iphase(j,i).eq.3 .or. iphase(j,i).eq.6 .or. &
-----+            iphase(j,i).eq.7 .or. iphase(j,i).eq.14)
-----+    moho(i)=j
-----+    j=j+1
-----+  end do
-----+end do
-----+
-----+do j = 1,nz-1
-----+do i = 1,nx-1
-----+    if (meltingmarker(j,i) .ne. 0) then
-----+
-----+      jm = (moho(i)+moho(i+1))/2
-----+      j1 = 1 ! diamond top is at the surface
-----+      j2 = j ! diamond bottom is at where the partial melting ouccred
-----+      if (jm .ge. j2-1) jm = int((j1+j2)/2) !distingush case 1 & 2
-----+      if (jm .le. 3) jm = 3
-----+
-----+!   find the i1,i2 based on the wedge width which is from inputfile
-----+      do ii=1,nx
-----+        dis2 = cord(jm,i,1) - cord(jm,ii,1)
-----+        if (dis2 >= dis)then
-----+            i1 = ii-1
-----+        else if (dis2 >= (-1*dis)) then
-----+            i2 = ii+1
-----+        end if
-----+      end do
-----+
-----+! find the total area(A) of LVW (km^2)
-----+! fluid effert = 1 * fliud_ratio/area ; fluid_ratio = 200
-----+        !find the area of this element
-----+        x1 = cord(j,i,1)
-----+        y1 = cord(j,i,2)
-----+        x2 = cord(j+1,i,1)   !xmesh[x_index,z_index+1]
-----+        y2 = cord(j+1,i,2)   !zmesh[x_index,z_index+1]
-----+        x3 = cord(j+1,i+1,1) !xmesh[x_index+1,z_index+1]
-----+        y3 = cord(j+1,i+1,2) !zmesh[x_index+1,z_index+1]
-----+        x4 = cord(j,i+1,1)   !xmesh[x_index+1,z_index]
-----+        y4 = cord(j,i+1,2)   !zmesh[x_index+1,z_index]
-----+        area_ele=1./(area(j,i,1)+area(j,i,2))
-----+        area_LVW=(cord(j1,i,2)-cord(j2,i,2))*(cord(jm,i2,1)-cord(jm,i1,1))*0.5
-----+
-----+        M_value=1
-----+        if( countmarker(j,i).eq.0) countmarker(j,i)=1
-----+        M_ratio =(countmarker(j,i)*area_LVW)/(meltingmarker(j,i)*area_ele*(1-rate_inject))!M_ratio=(1/ratio)
-----+        Mt=M_value/M_ratio
-----+
-----+!  make a record of the chamber value in the wedge range
-----+      if (modulo((j1+j2),2).eq.0) then
-----+        do jj=1,j
-----+        do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
-----+              min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
-----+             chamber(jj,ii)=chamber(jj,ii)+M_value/M_ratio
-----+        end do
-----+        end do
-----+
-----+      else
-----+        do jj=1,j
-----+        do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
-----+              min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
-----+             chamber(jj,ii)=chamber(jj,ii)+M_value/M_ratio
-----+        end do
-----+        end do
-----+      end if
-----+   endif
-----+end do
-----+end do
----- 
----- time_t = time
----- 
-----diff --git a/src/matprops.f90 b/src/matprops.f90
-----index 960757c..b6cf432 100644
-------- a/src/matprops.f90
-----+++ b/src/matprops.f90
-----@@ -240,6 +240,10 @@ elseif (i .ge.nx-4) then
-----     return
----- endif
----- 
-----+if (zcord < -200e3) then
-----+    chamber(j,i)=0
-----+endif
-----+
----- srat = e2sr(j,i)
----- if( srat .eq. 0 ) srat = vbc/rxbo
----- 
-----diff --git a/src/newphase2marker.f90 b/src/newphase2marker.f90
-----index 8e2be58..c3308c6 100644
-------- a/src/newphase2marker.f90
-----+++ b/src/newphase2marker.f90
-----@@ -57,6 +57,14 @@ real*8, parameter :: partial_melt_temp = 600.
----- ! thickness of new crust
----- real*8, parameter :: new_crust_thickness = 7.e3
----- 
-----+! open the file which recorded the location of partial melting
-----+open(2, file='D_melt.txt',status='unknown',access='append')
-----+
-----+do jj = 1,nz-1
-----+do ii = 1,nx-1
-----+        countmarker(jj,ii) = sum(nphase_counter(:,jj,ii))
-----+enddo
-----+enddo
----- 
----- ! search the element for melting
----- do jj = 1, nz-1
-----@@ -74,8 +82,10 @@ do i = 1, nx-1
-----       call newphase2marker(1,j-1,i,i,kocean1)
-----     end if
-----   end if
------end do
----- 
-----+end do
-----+! data of melting element(chii)
-----+meltingmarker(:,:)=0
----- 
----- ! nelem_inject was used for magma injection, reused here for serpentization
----- nelem_serp = nelem_inject
-----@@ -226,11 +236,15 @@ do kk = 1 , nmarkers
-----         !$OMP end critical (change_phase1)
-----         mark(kk)%phase = kmetased
-----     case (khydmant)
------        if (tmpr > ts(khydmant)) then
-----+        if (depth < 87.e3) then
-----+            tshydmant=(1100.-760.)*(depth-87.e3)/(0.e3-87.e3)+760.-(depth*3e-4)
-----+        else
-----+            tshydmant=(760.-875.)*(depth-175.e3)/(87.e3-175.e3)+875.-(depth*3e-4)
-----+        endif
-----+        if (tmpr > tshydmant) then
-----             ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
-----             quad_area = 1./(area(j,i,1)+area(j,i,2))
-----             andesitic_melt_vol(i) = andesitic_melt_vol(i) + quad_area * vol_frac_melt / kinc
------
-----             !$OMP critical (change_phase1)
-----             nphase_counter(iph,j,i) = nphase_counter(iph,j,i) - 1
-----             nphase_counter(kmant1,j,i) = nphase_counter(kmant1,j,i) + 1
-----@@ -239,6 +253,9 @@ do kk = 1 , nmarkers
-----             jchanged(nchanged) = j
-----             !$OMP end critical (change_phase1)
-----             mark(kk)%phase = kmant2
-----+            !record the data for melting element(chii)
-----+            meltingmarker(j,i)=meltingmarker(j,i)+1
-----+            write(2,*) mark(kk)%ID, mark(kk)%x,mark(kk)%y,time/sec_year/1.e6,i,j,'3',depth
-----         endif
-----     end select
----- 
-----@@ -274,5 +291,8 @@ do k = 1, nchanged
----- 
----- enddo
----- 
-----+close(2)
-----+
-----+
----- return
----- end subroutine change_phase
-----diff --git a/src/outflac.f90 b/src/outflac.f90
-----index 10860b4..d185fe2 100644
-------- a/src/outflac.f90
-----+++ b/src/outflac.f90
-----@@ -98,20 +98,48 @@ if( io_eII.eq.1 ) then
-----             De(j,i) = real(strainII(j,i))
-----         end do
-----     end do
------    open (1,file='eII.0',access='direct',recl=nwords*kindr) 
-----+    open (1,file='eII.0',access='direct',recl=nwords*kindr)
-----     write (1,rec=nrec) De
-----     close (1)
------endif
----- 
-----     do i = 1, nx-1
-----         do j = 1, nz-1
-----             De(j,i) = real(strainI(j,i))
-----         end do
-----     end do
------    open (1,file='eI.0',access='direct',recl=nwords*kindr) 
-----+    open (1,file='eI.0',access='direct',recl=nwords*kindr)
-----     write (1,rec=nrec) De
-----     close (1)
----- 
-----+    do i = 1, nx-1
-----+        do j = 1, nz-1
-----+            De(j,i) = real(strain(j,i,1))
-----+        end do
-----+    end do
-----+    open (1,file='exx.0',access='direct',recl=nwords*kindr)
-----+    write (1,rec=nrec) De
-----+    close (1)
-----+
-----+    do i = 1, nx-1
-----+        do j = 1, nz-1
-----+            De(j,i) = real(strain(j,i,2))
-----+        end do
-----+    end do
-----+    open (1,file='ezz.0',access='direct',recl=nwords*kindr)
-----+    write (1,rec=nrec) De
-----+    close (1)
-----+
-----+    do i = 1, nx-1
-----+        do j = 1, nz-1
-----+            De(j,i) = real(strain(j,i,3))
-----+        end do
-----+    end do
-----+    open (1,file='exz.0',access='direct',recl=nwords*kindr)
-----+    write (1,rec=nrec) De
-----+    close (1)
-----+
-----+endif
-----+
----- ! Density 
----- if( io_mark.eq.1 ) then
-----    do i = 1, nx-1
-----@@ -124,6 +152,41 @@ if( io_mark.eq.1 ) then
-----     close (1)
----- endif
----- 
-----+! Chamber (chii)
-----+if( io_mark.eq.1 ) then
-----+   do i = 1, nx-1
-----+   do j = 1, nz-1
-----+          De(j,i) = real(chamber(j,i))
-----+   enddo
-----+   enddo
-----+    open (1,file='chamber.0',access='direct',recl=nwords*kindr)
-----+    write (1,rec=nrec) De
-----+    close (1)
-----+endif
-----+
-----+! Countmarker (chii)
-----+if( io_mark.eq.1 ) then
-----+   do i = 1, nx-1
-----+   do j = 1, nz-1
-----+          De(j,i) = real(countmarker(j,i))
-----+   enddo
-----+   enddo
-----+    open (1,file='countmarker.0',access='direct',recl=nwords*kindr)
-----+    write (1,rec=nrec) De
-----+    close (1)
-----+endif
-----+
-----+! Meltingmarker (chii)
-----+if( io_mark.eq.1 ) then
-----+   do i = 1, nx-1
-----+   do j = 1, nz-1
-----+          De(j,i) = real(meltingmarker(j,i))
-----+   enddo
-----+   enddo
-----+    open (1,file='meltingmarker.0',access='direct',recl=nwords*kindr)
-----+    write (1,rec=nrec) De
-----+    close (1)
-----+endif
----- 
----- ! APS
----- if( io_aps.eq.1 ) then
-----diff --git a/src/params.inc b/src/params.inc
-----index cfde873..66d4231 100644
-------- a/src/params.inc
-----+++ b/src/params.inc
-----@@ -35,7 +35,8 @@ common /rheol/ visc(20),den(20),alfa(20),beta(20),pln(20),acoef(20),eactiv(20),r
-----      ltop(20),lbottom(20),lphase(20), &
-----      imx1(20),imx2(20),imy1(20),imy2(20), &
-----      itx1(20),itx2(20),ity1(20),ity2(20), &
------     nphasl,nzone_marker,nmarkers, iint_marker,iint_tracer,nzone_tracer
-----+     nphasl,nzone_marker,nmarkers, iint_marker,iint_tracer,nzone_tracer, &
-----+     weaken_width, weaken_decay
----- 
----- common /inhomog/ ix1(50),ix2(50),iy1(50),iy2(50),inphase(50),igeom(50), &
-----      xinitaps(50), inhom
-----diff --git a/src/read_params.f90 b/src/read_params.f90
-----index 7b1ca95..ef1c398 100644
-------- a/src/read_params.f90
-----+++ b/src/read_params.f90
-----@@ -242,6 +242,10 @@ call AdvanceToNextInputLine( 4 )
----- read(4,*)igeotherm,g_x0,g_y0c, g_amplitude,g_width 
----- call AdvanceToNextInputLine( 4 )
----- read(4,*) ny_inject, nelem_inject, rate_inject 
-----+call AdvanceToNextInputLine( 4 )
-----+read(4,*) weaken_width
-----+call AdvanceToNextInputLine( 4 )
-----+read(4,*) weaken_decay
----- 
----- ! REMESHING
----- call AdvanceToNextInputLine( 4 )
-----diff --git a/src/remesh.f90 b/src/remesh.f90
-----index 8dd75d7..f851446 100644
-------- a/src/remesh.f90
-----+++ b/src/remesh.f90
-----@@ -241,6 +241,12 @@ end do
----- dummy(1:nzt,1:nxt) = temp(1:nzt,1:nxt)
----- call rem_interpolate( dummy )
----- temp(1:nzt,1:nxt) = dummy(1:nzt,1:nxt)
-----+
-----+! Melting history (in nodes)(chii)
-----+dummy(1:nzt,1:nxt) = chamber(1:nzt,1:nxt)
-----+call rem_interpolate( dummy )
-----+chamber(1:nzt,1:nxt) = dummy(1:nzt,1:nxt)
-----+
----- deallocate( dummy )
----- 
----- ! Changing the temperature of left-/right- most elements
-----diff --git a/src/rsflac.f90 b/src/rsflac.f90
-----index 57aee3a..038c7a1 100644
-------- a/src/rsflac.f90
-----+++ b/src/rsflac.f90
-----@@ -80,6 +80,10 @@ open (1,file='temp.rs',access='direct',recl=nwords*kindr)
----- read (1,rec=nrec) temp
----- close (1)
----- 
-----+!melting history (chii)
-----+open (1,file='chamber.rs',access='direct',recl=nwords*kindr)
-----+read (1,rec=nrec) chamber
-----+close (1)
----- 
----- ! 2-D (nx-1)*(nz-1) arrays - elements defined
----- allocate( dum2(nz-1,nx-1) )
-----diff --git a/src/saveflac.f90 b/src/saveflac.f90
-----index 47da06b..8bc634b 100644
-------- a/src/saveflac.f90
-----+++ b/src/saveflac.f90
-----@@ -72,6 +72,10 @@ open (1,file='temp.rs',access='direct',recl=nwords*kindr)
----- write (1,rec=nrec) temp
----- close (1)
----- 
-----+!melting history(chii)
-----+open (1,file='chamber.rs',access='direct',recl=nwords*kindr)
-----+write (1,rec=nrec) chamber
-----+close (1)
----- 
----- ! 2-D (nx-1)*(nz-1) arrays - elements defined
----- allocate( dum2(nz-1,nx-1) )
-----diff --git a/src/snapshot.diff b/src/snapshot.diff
-----index a588ec2..6ac30d8 100644
-------- a/src/snapshot.diff
-----+++ b/src/snapshot.diff
-----@@ -5,6 +5,17 @@ Flags used to compile the code:
----- 
----- 
----- ==== Summary of the code ====
-----+commit 89669f030dd2388b8cfa151b1ba3196fff0808f4
-----+Author: chiilee <blackdeviljuliet@gmail.com>
-----+Date:   Fri Oct 25 17:22:48 2019 +0800
-----+
-----+    Add new boundary condition & MOR on the right
-----+    
-----+    <src/fl_therm> MOR: high temperature on the right side
-----+    <src/matprops> MOR: low viscosity on the right side
-----+                   Calculation method of mantle viscosity for 410 and 660
-----+    <src/init_bc> Allow velocity to occur in the middle of the model
-----+
----- commit d21e63ebbccca41124cf8f5278292855c1bf78b6
----- Author: chiilee <blackdeviljuliet@gmail.com>
----- Date:   Fri Oct 25 15:47:53 2019 +0800
-----@@ -20,2135 +31,417 @@ Date:   Thu Oct 24 16:32:04 2019 +0800
-----     Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
----- 
----- == Code modification (not checked-in) ==
------diff --git a/src/snapshot.diff b/src/snapshot.diff
------index 13b9491..d359612 100644
--------- a/src/snapshot.diff
------+++ b/src/snapshot.diff
------@@ -5,2104 +5,18 @@ Flags used to compile the code:
-----+diff --git a/src/arrays.f90 b/src/arrays.f90
-----+index 3b80cc8..3ecb5fe 100644
-----+--- a/src/arrays.f90
-----++++ b/src/arrays.f90
-----+@@ -13,6 +13,10 @@ module arrays
-----+   ! temporary array
-----+   real*8, pointer, save :: junk2(:,:)
-----  
-----++  ! array for arc melting
-----++  integer, pointer, save :: meltingmarker(:,:)
-----++  integer, pointer, save :: countmarker(:,:)
-----++  real*8, pointer, save :: chamber(:,:)
-----  
------ ==== Summary of the code ====
-------commit 89ab0eaa26ecdd95faa7f1a5cccb7d243a71d35f
------+commit d21e63ebbccca41124cf8f5278292855c1bf78b6
------ Author: chiilee <blackdeviljuliet@gmail.com>
-------Date:   Thu Oct 24 16:32:04 2019 +0800
-------
-------    Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
-----+ contains
-----+ 
-----+@@ -38,6 +42,10 @@ contains
-----+ 
-----+     allocate(junk2(nz, nx))
-----+ 
-----++    allocate(meltingmarker(nz-1, nx-1))
-----++    allocate(countmarker(nz-1, nx-1))
-----++    allocate(chamber(nz-1, nx-1))
-----++
-----+   end subroutine allocate_arrays
-----+ 
-----+ end module arrays
-----+diff --git a/src/fl_therm.f90 b/src/fl_therm.f90
-----+index d15f58a..d22faed 100644
-----+--- a/src/fl_therm.f90
-----++++ b/src/fl_therm.f90
-----+@@ -8,8 +8,11 @@ include 'params.inc'
-----+ include 'arrays.inc'
-----+ 
-----+ dimension flux(mnz,mnx,2,2), add_source(mnz,mnx)
-----++real moho(nx)
-----++real M_ratio, M_value
-----+ 
-----+-heat_latent_magma = 4.2d5  ! J/kg, latent heat of freezing magma
-----++
-----++heat_latent_magma = 0. !4.2d5  ! J/kg, latent heat of freezing magma
-----+ 
-----+ ! real_area = 0.5* (1./area(n,t))
-----+ ! Calculate Fluxes in every triangle
-----+@@ -271,6 +274,123 @@ end do
-----+ !$OMP end do
-----+ !$OMP end parallel
-----+ 
-----++! Attenuation of the array of heating history (chii)
-----++!   N(t)= N*exp(-lamda*dt)
-----++!   exp(-lamda*dt)~ 1-lamda*dt
-----++weaken = 1- weaken_decay*dt
-----++
-----++!   no attenuation after just restart
-----++if (nloop .eq. nloop_restarted) weaken=1
-----++
-----++do j = 1,nz
-----++  do i = 1,nx
-----++       chamber(j,i)=chamber(j,i)*weaken
-----++       if (chamber(j,i)>=1) chamber(j,i)=0.99
-----++  enddo
-----++enddo
-----++
-----++! Record the histroy of partial melting on different positions of the
-----++! mantle wedge --> chamber (chii)
-----++!                              (j1,i)
-----++! ---------------------------------------------------sufrace
-----++!         /\                   /\
-----++!        /  \                 / |\
-----++!       /    \               /  | \
-----++!       \    /              /   |  \
-----++!        \  /              /    |   \
-----++!         \/              /     |    \
-----++!         * partial      /      |     \
-----++!           melting     /       |      \
-----++!                      /      (jm,i)    \ (i2,jm)
-----++! ----------------------------------------------------moho
-----++!               (i1,jm)\        |       /
-----++!                        \      |      /
-----++!                         \     |    /
-----++!                           \   |   /
-----++!                            \  | /
-----++!                              \|/
-----++!                               * partial metiling
-----++!                                 (j,i)
-----++!
-----++!                     |---wedge width---|
-----++! Two case:
-----++!  1.partial melting takes place above moho:
-----++!    diamond shape symmetry, jm=(j1+j2)/2
-----++!  2.partial melting takes place below moho:
-----++!    the maximum width of the diamond occurs on the moho surface
-----++
-----++dis = weaken_width*0.5*1.e+3
-----++
-----++!   find the z-index representing Moho in the x-direction
-----++do i = 1,nx
-----++  j=1
-----++  do while (iphase(j,i).eq.1 .or. iphase(j,i).eq.2 .or. &
-----++            iphase(j,i).eq.3 .or. iphase(j,i).eq.6 .or. &
-----++            iphase(j,i).eq.7 .or. iphase(j,i).eq.14)
-----++    moho(i)=j
-----++    j=j+1
-----++  end do
-----++end do
-----++
-----++do j = 1,nz-1
-----++do i = 1,nx-1
-----++    if (meltingmarker(j,i) .ne. 0) then
-----++
-----++      jm = (moho(i)+moho(i+1))/2
-----++      j1 = 1 ! diamond top is at the surface
-----++      j2 = j ! diamond bottom is at where the partial melting ouccred
-----++      if (jm .ge. j2-1) jm = int((j1+j2)/2) !distingush case 1 & 2
-----++      if (jm .le. 3) jm = 3
-----++
-----++!   find the i1,i2 based on the wedge width which is from inputfile
-----++      do ii=1,nx
-----++        dis2 = cord(jm,i,1) - cord(jm,ii,1)
-----++        if (dis2 >= dis)then
-----++            i1 = ii-1
-----++        else if (dis2 >= (-1*dis)) then
-----++            i2 = ii+1
-----++        end if
-----++      end do
-----++
-----++! find the total area(A) of LVW (km^2)
-----++! fluid effert = 1 * fliud_ratio/area ; fluid_ratio = 200
-----++        !find the area of this element
-----++        x1 = cord(j,i,1)
-----++        y1 = cord(j,i,2)
-----++        x2 = cord(j+1,i,1)   !xmesh[x_index,z_index+1]
-----++        y2 = cord(j+1,i,2)   !zmesh[x_index,z_index+1]
-----++        x3 = cord(j+1,i+1,1) !xmesh[x_index+1,z_index+1]
-----++        y3 = cord(j+1,i+1,2) !zmesh[x_index+1,z_index+1]
-----++        x4 = cord(j,i+1,1)   !xmesh[x_index+1,z_index]
-----++        y4 = cord(j,i+1,2)   !zmesh[x_index+1,z_index]
-----++        area_ele=1./(area(j,i,1)+area(j,i,2))
-----++        area_LVW=(cord(j1,i,2)-cord(j2,i,2))*(cord(jm,i2,1)-cord(jm,i1,1))*0.5
-----++
-----++        M_value=1
-----++        if( countmarker(j,i).eq.0) countmarker(j,i)=1
-----++        M_ratio =(countmarker(j,i)*area_LVW)/(meltingmarker(j,i)*area_ele*(1-rate_inject))!M_ratio=(1/ratio)
-----++        Mt=M_value/M_ratio
-----++
-----++!  make a record of the chamber value in the wedge range
-----++      if (modulo((j1+j2),2).eq.0) then
-----++        do jj=1,j
-----++        do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
-----++              min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
-----++             chamber(jj,ii)=chamber(jj,ii)+M_value/M_ratio
-----++        end do
-----++        end do
-----++
-----++      else
-----++        do jj=1,j
-----++        do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
-----++              min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
-----++             chamber(jj,ii)=chamber(jj,ii)+M_value/M_ratio
-----++        end do
-----++        end do
-----++      end if
-----++   endif
-----++end do
-----++end do
-----+ 
-----+ time_t = time
-----+ 
-----+diff --git a/src/matprops.f90 b/src/matprops.f90
-----+index 960757c..b6cf432 100644
-----+--- a/src/matprops.f90
-----++++ b/src/matprops.f90
-----+@@ -240,6 +240,10 @@ elseif (i .ge.nx-4) then
-----+     return
-----+ endif
-----+ 
-----++if (zcord < -200e3) then
-----++    chamber(j,i)=0
-----++endif
-----++
-----+ srat = e2sr(j,i)
-----+ if( srat .eq. 0 ) srat = vbc/rxbo
-----+ 
-----+diff --git a/src/newphase2marker.f90 b/src/newphase2marker.f90
-----+index 8e2be58..c3308c6 100644
-----+--- a/src/newphase2marker.f90
-----++++ b/src/newphase2marker.f90
-----+@@ -57,6 +57,14 @@ real*8, parameter :: partial_melt_temp = 600.
-----+ ! thickness of new crust
-----+ real*8, parameter :: new_crust_thickness = 7.e3
-----+ 
-----++! open the file which recorded the location of partial melting
-----++open(2, file='D_melt.txt',status='unknown',access='append')
-----++
-----++do jj = 1,nz-1
-----++do ii = 1,nx-1
-----++        countmarker(jj,ii) = sum(nphase_counter(:,jj,ii))
-----++enddo
-----++enddo
-----+ 
-----+ ! search the element for melting
-----+ do jj = 1, nz-1
-----+@@ -74,8 +82,10 @@ do i = 1, nx-1
-----+       call newphase2marker(1,j-1,i,i,kocean1)
-----+     end if
-----+   end if
-----+-end do
-----+ 
-----++end do
-----++! data of melting element(chii)
-----++meltingmarker(:,:)=0
-----+ 
-----+ ! nelem_inject was used for magma injection, reused here for serpentization
-----+ nelem_serp = nelem_inject
-----+@@ -226,11 +236,15 @@ do kk = 1 , nmarkers
-----+         !$OMP end critical (change_phase1)
-----+         mark(kk)%phase = kmetased
-----+     case (khydmant)
-----+-        if (tmpr > ts(khydmant)) then
-----++        if (depth < 87.e3) then
-----++            tshydmant=(1100.-760.)*(depth-87.e3)/(0.e3-87.e3)+760.-(depth*3e-4)
-----++        else
-----++            tshydmant=(760.-875.)*(depth-175.e3)/(87.e3-175.e3)+875.-(depth*3e-4)
-----++        endif
-----++        if (tmpr > tshydmant) then
-----+             ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
-----+             quad_area = 1./(area(j,i,1)+area(j,i,2))
-----+             andesitic_melt_vol(i) = andesitic_melt_vol(i) + quad_area * vol_frac_melt / kinc
----- -
-------== Code modification (not checked-in) ==
-------diff --git a/src/Makefile b/src/Makefile
-------index 640af71..cc518a8 100644
---------- a/src/Makefile
-------+++ b/src/Makefile
-------@@ -187,7 +187,7 @@ OBJS = $(SRCS:.f90=.o)
------- EXE = flac
------- 
------- ## Is this a mercurial repository?
--------HAS_HG := $(shell hg log -r tip --template '{node}' 2>/dev/null)
-------+HAS_HG := $(shell git log -r --template '{node}' 2>/dev/null)
------- 
------- ########################################################################
------- ## actions
-------@@ -209,24 +209,24 @@ $(OBJS): %.o : %.f90 params.inc arrays.inc
------- take-snapshot:
------- 	@# snapshot of the code for building the executable
------- 	@echo Flags used to compile the code: > snapshot.diff
--------	@echo '  '  CXX=$(CXX) opt=$(opt) openmp=$(openmp) >> snapshot.diff
--------	@echo '  '  PATH=$(PATH) >> snapshot.diff
--------	@echo '  '  LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) >> snapshot.diff
-------+	@echo '  '  CXX=$(CXX) debug=$(debug) openmp=$(omp) >> snapshot.diff
-------+	@echo '  '  PATH=`pwd ${PATH}` >> snapshot.diff
-------+	@echo '  '  LD_LIBRARY_PATH=`pwd ${LD_LIBRARY_PATH}` >> snapshot.diff
------- ifneq (HAS_HG),)
------- 	@echo >> snapshot.diff
------- 	@echo >> snapshot.diff
------- 	@echo '==== Summary of the code ====' >> snapshot.diff
--------	@hg summary >> snapshot.diff
--------	@echo >> snapshot.diff
-------+	@git log >> snapshot.diff
-------+	@echo >>log snapshot.diff
------- 	@echo >> snapshot.diff
------- 	@echo '== Code modification (not checked-in) ==' >> snapshot.diff
--------	@hg diff >> snapshot.diff
-------+	@git diff >> snapshot.diff
------- 	@echo >> snapshot.diff
------- 	@echo >> snapshot.diff
------- 	@echo '== Code modification (checked-in but not public) ==' >> snapshot.diff
--------	@hg log --patch -r "draft()" >> snapshot.diff
-------+	@git log >> snapshot.diff
------- else
--------	@echo \'hg\' is not in path, cannot take code snapshot. >> snapshot.diff
-------+	@echo \'git\' is not in path, cannot take code snapshot. >> snapshot.diff
------- endif
------- 
------- 
-------diff --git a/src/arrays.inc b/src/arrays.inc
-------index a2c04cc..8ef189a 100644
---------- a/src/arrays.inc
-------+++ b/src/arrays.inc
-------@@ -1,7 +1,7 @@
------- ! -*- F90 -*-
------- 
------- !!! maximum number of ELEMENTS !!!
--------parameter(mnz=200, mnx=700)
-------+parameter(mnz=300, mnx=700)
------- parameter(max_markers_per_elem=32)
------- 
------- common /phase_arrays/ iphase(mnz,mnx), nphase_counter(20,mnz,mnx), phase_ratio(20,mnz,mnx)
-------diff --git a/src/bar2euler.f90 b/src/bar2euler.f90
-------index 74eccfc..f2d021f 100644
---------- a/src/bar2euler.f90
-------+++ b/src/bar2euler.f90
-------@@ -77,10 +77,48 @@ subroutine shape_functions(j, i, shp2)
------- end subroutine shape_functions
------- 
------- 
-------+subroutine shape_functions1(j, i, k, shp)
-------+  use arrays
-------+
-------+  include 'precision.inc'
-------+  include 'params.inc'
-------+  double precision, intent(out) :: shp(2,3)
-------+
-------+  if (k.eq.1) then
-------+     x1 = cord(j  ,i  ,1)
-------+     x2 = cord(j+1,i  ,1)
-------+     x3 = cord(j  ,i+1,1)
-------+     y1 = cord(j  ,i  ,2)
-------+     y2 = cord(j+1,i  ,2)
-------+     y3 = cord(j  ,i+1,2)
-------+  else  !if (k.eq.2) then
-------+     x1 = cord(j  ,i+1,1)
-------+     x2 = cord(j+1,i  ,1)
-------+     x3 = cord(j+1,i+1,1)
-------+     y1 = cord(j  ,i+1,2)
-------+     y2 = cord(j+1,i  ,2)
-------+     y3 = cord(j+1,i+1,2)
-------+  endif
-------+
-------+  ! Calculate triangle properties
-------+  det=( (x2*y3-y2*x3) - (x1*y3-y1*x3) + (x1*y2-y1*x2) )
-------+
-------+  !Find the parameters ONLY for 2 vertices
-------+  shp(1,1) = (x2*y3-y2*x3)/det
-------+  shp(1,2) = (y2-y3)/det
-------+  shp(1,3) = (x3-x2)/det
-------+  shp(2,1) = (x3*y1-y3*x1)/det
-------+  shp(2,2) = (y3-y1)/det
-------+  shp(2,3) = (x1-x3)/det
-------+
-------+end subroutine shape_functions1
-------+
-------+
------- ! For brevity shp(1,2) --> s12 etc
------- !
------- ! a1 = s11 + s12*x + s13*y
------- ! a2 = s21 + s22*x + s23*y
-------+
------- !
------- ! solve for x and y
------- subroutine bar2xy(ba1, ba2, shp, x, y)
-------diff --git a/src/euler2bar.f90 b/src/euler2bar.f90
-------index 353d2ec..ebca726 100644
---------- a/src/euler2bar.f90
-------+++ b/src/euler2bar.f90
-------@@ -55,8 +55,8 @@ do j = 1, nz-1
-------         if(inc .eq. 1) then
-------             ! If the marker is found, that means its current element is
-------             ! to far away from its original element
--------            write(msg,*) 'Found at (i,j)', i, j, ' Might need more frequent remeshing?'
--------            call SysMsg(msg)
-------+            !!!write(msg,*) 'Found at (i,j)', i, j, ' Might need more frequent remeshing?'
-------+            !!!call SysMsg(msg)
-------             ii = i
-------             jj = j
-------             return
-------diff --git a/src/fl_move.f90 b/src/fl_move.f90
-------index 7e3dbda..4d658c6 100644
---------- a/src/fl_move.f90
-------+++ b/src/fl_move.f90
-------@@ -262,7 +262,7 @@ subroutine resurface
-------           ! extrusion, add an arc marker
-------           n_to_add = ceiling(chgtopo2 / elz * kinc)
-------           dz = chgtopo2 / elz / (n_to_add+1)
--------          print *, 'add arc', i, chgtopo2, elz, n_to_add, dz
-------+          !print *, 'add arc', i, chgtopo2, elz, n_to_add, dz
-------           do ii = 1, n_to_add
-------               call add_marker_at_top(i, dz*ii, elz, karc1, nmarkers)
-------           enddo
-------diff --git a/src/functions.f90 b/src/functions.f90
-------index 0dd4192..c530044 100644
---------- a/src/functions.f90
-------+++ b/src/functions.f90
-------@@ -78,6 +78,19 @@ end function stressII
------- 
------- 
------- !==================================================
-------+! Get the largest eigenvalue and its eigenvector (with its x-component
-------+! fixed to 1) of the deviatoric of a symmetric 2x2 matrix
-------+subroutine eigen2x2(a11, a22, a12, eigval1, eigvecy1)
-------+include 'precision.inc'
-------+
-------+adif = 0.5 * (a11 - a22)
-------+eigval1 = sqrt(adif**2 + a12**2)
-------+eigvecy1 = (eigval1 - adif) / a12
-------+
-------+end subroutine eigen2x2
-------+
-------+
-------+!==================================================
------- subroutine SysMsg( message )
------- include 'precision.inc'
------- include 'params.inc'
-------diff --git a/src/newphase2marker.f90 b/src/newphase2marker.f90
-------index 845d619..8e2be58 100644
---------- a/src/newphase2marker.f90
-------+++ b/src/newphase2marker.f90
-------@@ -16,14 +16,14 @@ do kk = 1 , nmarkers
------- 
-------     if(j>=j1 .and. j<=j2 .and. i>=i1 .and. i<=i2) then
-------         nphase_counter(mark(kk)%phase,j,i) = nphase_counter(mark(kk)%phase,j,i) - 1
--------        iphase(j,i) = iph
-------         mark(kk)%phase = iph
-------         nphase_counter(iph,j,i) = nphase_counter(iph,j,i) + 1
-------     endif
------- enddo
------- 
--------phase_ratio(:,j,i) = 0.d0
--------phase_ratio(iph,j,i) = 1.d0
-------+iphase(j1:j2,i1:i2) = iph
-------+phase_ratio(:,j1:j2,i1:i2) = 0.d0
-------+phase_ratio(iph,j1:j2,i1:i2) = 1.d0
------- 
------- return
------- end subroutine newphase2marker
-------@@ -45,6 +45,7 @@ dimension ratio(20)
------- real*8, parameter :: max_basalt_depth = 150.e3
------- ! min. temperature (C) of eclogite phase transition
------- real*8, parameter :: min_eclogite_temp = 500.
-------+real*8, parameter :: min_eclogite_depth = 20e3
------- real*8, parameter :: mantle_density = 3000.
------- 
------- ! temperature (C) of serpentine phase transition
-------@@ -85,7 +86,7 @@ andesitic_melt_vol(1:nx-1) = 0
------- nchanged = 0
------- 
------- 
--------!$OMP parallel private(kk,i,j,k,n,tmpr,depth,iph,press,jbelow,trpres,trpres2,kinc,quad_area)
-------+!$OMP parallel private(kk,i,j,k,n,tmpr,depth,iph,press,jbelow,trpres,trpres2,kinc,quad_area,yy)
------- !$OMP do schedule(guided)
------- do kk = 1 , nmarkers
-------     if (mark(kk)%dead.eq.0) cycle
-------@@ -96,10 +97,17 @@ do kk = 1 , nmarkers
-------     j = mod((n - k) / 2, nz-1) + 1
-------     i = (n - k) / 2 / (nz - 1) + 1
------- 
--------    tmpr = 0.25*(temp(j,i)+temp(j+1,i)+temp(j,i+1)+temp(j+1,i+1))
-------+    if (k .eq. 1) then
-------+       yy = cord(j,i,2)*mark(kk)%a1 + cord(j+1,i,2)*mark(kk)%a2 + cord(j,i+1,2)*(1-mark(kk)%a1-mark(kk)%a2)
-------+       tmpr = temp(j,i)*mark(kk)%a1 + temp(j+1,i)*mark(kk)%a2 + temp(j,i+1)*(1-mark(kk)%a1-mark(kk)%a2)
-------+    else
-------+       yy = cord(j,i+1,2)*mark(kk)%a1 + cord(j+1,i,2)*mark(kk)%a2 + cord(j+1,i+1,2)*(1-mark(kk)%a1-mark(kk)%a2)
-------+       tmpr = temp(j,i+1)*mark(kk)%a1 + temp(j+1,i)*mark(kk)%a2 + temp(j+1,i+1)*(1-mark(kk)%a1-mark(kk)%a2)
-------+    endif
-------+
------- 
-------     ! depth below the surface in m
--------    depth = (cord(1,i,2) - 0.5*(cord(j,i,2)+cord(j+1,i,2)))
-------+    depth = 0.5*(cord(1,i,2)+cord(1,i+1,2)) - yy
------- 
-------     ! # of markers inside quad
-------     kinc = sum(nphase_counter(:,j,i))
-------@@ -109,7 +117,7 @@ do kk = 1 , nmarkers
------- 
-------     ! If location of this element is too deep, this marker is already
-------     ! too deep in the mantle, where there is no significant phase change.
--------    if (depth < -200.e3) cycle
-------+    if (depth > 200.e3) cycle
------- 
-------     iph = mark(kk)%phase
------- 
-------@@ -230,7 +238,7 @@ do kk = 1 , nmarkers
-------             ichanged(nchanged) = i
-------             jchanged(nchanged) = j
-------             !$OMP end critical (change_phase1)
--------            mark(kk)%phase = kmant1
-------+            mark(kk)%phase = kmant2
-------         endif
-------     end select
------- 
-------diff --git a/src/rsflac.f90 b/src/rsflac.f90
-------index 99a4751..57aee3a 100644
---------- a/src/rsflac.f90
-------+++ b/src/rsflac.f90
-------@@ -226,7 +226,7 @@ do n = 1, nmarkers
-------         endif
-------         ! recording the id of markers belonging to surface elements
-------         ntopmarker(i) = ntopmarker(i) + 1
--------        itopmarker(ntopmarker(i), i) = n + 1
-------+        itopmarker(ntopmarker(i), i) = n 
-------     end if
------- 
-------     nphase_counter(mark(n)%phase,j,i) = nphase_counter(mark(n)%phase,j,i) + 1
-------diff --git a/src/snapshot.diff b/src/snapshot.diff
-------index cb67406..f00d6c1 100644
---------- a/src/snapshot.diff
-------+++ b/src/snapshot.diff
-------@@ -1,1292 +1,81 @@
------- Flags used to compile the code:
--------   CXX=g++ opt= openmp=
--------   PATH=/home/chiilee/anaconda2/bin:/usr/bin:/usr/sbin:/usr/lib64/qt-3.3/bin:/opt/octave/bin:/cluster/intel/composer_xe_2013.1.117/bin/intel64:/cluster/intel/composer_xe_2013.1.117/mpirt/bin/intel64:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/cluster/mpich2/bin:/home/tan2/opt/bin:/home/chiilee/bin:/home/tan2/opt/bin
--------   LD_LIBRARY_PATH=/opt/octave/lib/octave/4.0.3:/cluster/intel/composer_xe_2013.1.117/compiler/lib/intel64:/opt/intel/mic/coi/host-linux-release/lib:/opt/intel/mic/myo/lib:/cluster/intel/composer_xe_2013.1.117/mpirt/lib/intel64:/cluster/intel/composer_xe_2013.1.117/ipp/../compiler/lib/intel64:/cluster/intel/composer_xe_2013.1.117/ipp/lib/intel64:/cluster/intel/composer_xe_2013.1.117/compiler/lib/intel64:/cluster/intel/composer_xe_2013.1.117/mkl/lib/intel64:/cluster/intel/composer_xe_2013.1.117/tbb/lib/intel64:/cluster/intel/mkl/lib/intel64:/cluster/intel/lib/intel64
-------+   CXX=g++ debug=0 openmp=1
-------+   PATH=/home/chiilee/git-flac/flac/src
-------+   LD_LIBRARY_PATH=/home/chiilee/git-flac/flac/src
------- 
------- 
------- ==== Summary of the code ====
--------parent: 524:edf727ed6d4b tip
-------- no cooling in fl_therm.f90
--------branch: default
--------commit: 6 modified, 183 unknown
--------update: (current)
-------+commit 89ab0eaa26ecdd95faa7f1a5cccb7d243a71d35f
-------+Author: chiilee <blackdeviljuliet@gmail.com>
-------+Date:   Thu Oct 24 16:32:04 2019 +0800
------- 
-------+    Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
------- 
------- == Code modification (not checked-in) ==
--------diff -r edf727ed6d4b src/arrays.f90
----------- a/src/arrays.f90	Mon Mar 19 15:21:22 2018 +0800
--------+++ b/src/arrays.f90	Tue Apr 10 07:43:09 2018 +0800
--------@@ -1,4 +1,4 @@
---------! -*- F90 -*-
--------+!-*- F90 -*-
-------- 
-------- module arrays
--------   implicit none
--------@@ -13,7 +13,7 @@
--------   ! temporary array
--------   real*8, pointer, save :: junk2(:,:)
--------   !array for arc melting
---------  real*8, pointer, save :: meltingmarker(:,:,:)
--------+  real*8, pointer, save :: meltingmarker(:,:,:),chamber(:,:)
-------- contains
-------- 
--------   subroutine allocate_arrays(nz, nx)
--------@@ -38,6 +38,7 @@
-------- 
--------     allocate(junk2(nz, nx))
--------     allocate(meltingmarker(nz, nx, 2))
--------+    allocate(chamber(nz, nx))
-------- 
--------   end subroutine allocate_arrays
-------- 
--------diff -r edf727ed6d4b src/fl_therm.f90
----------- a/src/fl_therm.f90	Mon Mar 19 15:21:22 2018 +0800
--------+++ b/src/fl_therm.f90	Tue Apr 10 07:43:09 2018 +0800
--------@@ -11,7 +11,7 @@
-------- 
-------- heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
-------- MOR_heat = 0.     !9.e2
---------heat_latent =7.e3  !7.e6
--------+heat_latent =1.e4 !7.e6
-------- 
-------- ! real_area = 0.5* (1./area(n,t))
-------- ! Calculate Fluxes in every triangle
--------@@ -29,7 +29,6 @@
-------- !  | /         / |
-------- !  2         2---3
-------- 
---------print*, 'do fl_therm'
-------- ntherm = ntherm+1
-------- 
-------- ! saving old temperature
--------@@ -265,11 +264,22 @@
-------- !$OMP end parallel
-------- 
-------- !add temp for melting (chii)
---------do j= 1,nz
--------+
--------+!test
--------+!meltingmarker(30,30,:)=4
--------+!meltingmarker(50,50,:)=6
--------+if (nloop .eq. 0) then
--------+   chamber(:,:)=0.
--------+endif
--------+
--------+print*,"time",time,"nloop",loop, "max melting history",maxval(chamber)
--------+
--------+
--------+do j = 1,nz
-------- do i = 1,nx
--------     if (meltingmarker(j,i,1) .ne. 0) then
---------        kinc=meltingmarker(j,i,2)   
---------        print* , i,j,kinc   
--------+        kinc = meltingmarker(j,i,2)   
--------+        !iprint*,i,j,meltingmarker(j,i,1),kinc   
-------- 
--------         do jj=1,j
--------           depth = cord(1,i,2) - cord(jj,i,2)
--------@@ -299,36 +309,39 @@
--------         
--------      if (modulo((j1+j2),2).eq.0) then
-------- 
---------        do jj=1,j
--------+      do jj=1,j
--------         do ii= max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
--------                min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
---------               nodes=nodes+1 
--------+           nodes=nodes+1
--------+           chamber(jj,ii)=chamber(jj,ii)+1.
--------         end do
---------        end do   
---------        do jj=1,j
--------+      end do   
--------+      do jj=1,j
--------         do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
--------               min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
---------              temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
---------       end do
---------       end do
--------+           temp(jj,ii)=min(1100.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
--------+           !print *,"nodes=",nodes,"add=",heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes
--------+        end do
--------+      end do
--------        !area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j1,i,2)-cord(j2,i,2)))/2
--------   
--------      else
--------       do jj=1,j
---------      do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
---------            min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
---------            nodes=nodes+1
---------      end do
--------+        do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
--------+              min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
--------+           nodes=nodes+1
--------+           chamber(jj,ii)=chamber(jj,ii)+1.
--------+        end do
--------       end do   
--------       do jj=1,j
--------       do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
--------             min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
---------            temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
--------+         temp(jj,ii)=min(1100.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
--------+         !print *,"nodes=",nodes,"add=",heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes
--------       end do
--------       end do  
--------       !area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j1,i,2)-cord(j2,i,2))+(cord(jm,i,1)-cord(jm+1,i,1))))/2    
--------      end if
---------
--------      !area_cooling=(cord(j,i+3,1)-cord(j,i-3,1))*(cord(j-3,i,2)-cord(j+3,i,2))
--------      !print*, area_cooling,area_heating
--------      !temp(j-3:j+3,i-3:i+3) = (temp(j-3:j+3,i-3:i+3)-heat_latent*area_heating/area_cooling/1000./49)
--------diff -r edf727ed6d4b src/newphase2marker.f90
----------- a/src/newphase2marker.f90	Mon Mar 19 15:21:22 2018 +0800
--------+++ b/src/newphase2marker.f90	Tue Apr 10 07:43:09 2018 +0800
--------@@ -59,9 +59,6 @@
-------- !real*8, parameter :: tshydmant
-------- 
-------- 
---------print*, 'do newphase2markers'
---------
---------
-------- ! search the element for melting
-------- do jj = 1, nz-1
--------    ! search for crustal depth
--------diff -r edf727ed6d4b src/par.f90
----------- a/src/par.f90	Mon Mar 19 15:21:22 2018 +0800
--------+++ b/src/par.f90	Tue Apr 10 07:43:09 2018 +0800
--------@@ -1,5 +1,3 @@
---------! -*- F90 -*-
---------
-------- program DREZINA
-------- use arrays
-------- include 'precision.inc'
--------diff -r edf727ed6d4b src/rsflac.f90
----------- a/src/rsflac.f90	Mon Mar 19 15:21:22 2018 +0800
--------+++ b/src/rsflac.f90	Tue Apr 10 07:43:09 2018 +0800
--------@@ -80,6 +80,11 @@
-------- read (1,rec=nrec) temp
-------- close (1)
-------- 
--------+!melting history
--------+open (1,file='chamber.rs',access='direct',recl=nwords*kindr)
--------+read (1,rec=nrec) chamber
--------+close (1)
--------+
-------- 
-------- ! 2-D (nx-1)*(nz-1) arrays - elements defined
-------- allocate( dum2(nz-1,nx-1) )
--------@@ -118,6 +123,7 @@
-------- deallocate( dum2 )
-------- 
-------- 
--------+
-------- if (iint_marker.eq.1) then
-------- 
-------- 
--------diff -r edf727ed6d4b src/saveflac.f90
----------- a/src/saveflac.f90	Mon Mar 19 15:21:22 2018 +0800
--------+++ b/src/saveflac.f90	Tue Apr 10 07:43:09 2018 +0800
--------@@ -49,7 +49,6 @@
-------- write (1,rec=nrec) vel
-------- close (1)
-------- 
---------
-------- ! Strain
-------- nwords = 3*(nz-1)*(nx-1)
-------- open (1,file='strain.rs',access='direct',recl=nwords*kindr) 
--------@@ -72,6 +71,10 @@
-------- write (1,rec=nrec) temp
-------- close (1)
-------- 
--------+!melting history(chii)
--------+open (1,file='chamber.rs',access='direct',recl=nwords*kindr)
--------+write (1,rec=nrec) chamber
--------+close (1)
-------- 
-------- ! 2-D (nx-1)*(nz-1) arrays - elements defined
-------- allocate( dum2(nz-1,nx-1) )
--------
--------
--------== Code modification (checked-in but not public) ==
--------changeset:   518:ae5fa0fdac1d
--------user:        chii <chiilee1995@gmail.com>
--------date:        Mon Jan 22 15:26:08 2018 +0800
--------summary:     heat due to the magma beneath the src (heat only near the suface)
--------
--------diff -r ebf9b25e80ad -r ae5fa0fdac1d src/arrays.f90
----------- a/src/arrays.f90	Fri Aug 04 09:34:21 2017 +0800
--------+++ b/src/arrays.f90	Mon Jan 22 15:26:08 2018 +0800
--------@@ -13,7 +13,8 @@
--------   ! temporary array
--------   real*8, pointer, save :: junk2(:,:)
-------- 
---------
--------+  !array for arc melting
--------+  real*8, pointer, save :: meltingmarker(:,:)
-------- contains
-------- 
--------   subroutine allocate_arrays(nz, nx)
--------@@ -37,6 +38,7 @@
--------     allocate(ncod(nz, nx, 2))
-------- 
--------     allocate(junk2(nz, nx))
--------+    allocate(meltingmarker(10000000,4))
-------- 
--------   end subroutine allocate_arrays
-------- 
--------diff -r ebf9b25e80ad -r ae5fa0fdac1d src/fl_therm.f90
----------- a/src/fl_therm.f90	Fri Aug 04 09:34:21 2017 +0800
--------+++ b/src/fl_therm.f90	Mon Jan 22 15:26:08 2018 +0800
--------@@ -9,7 +9,9 @@
-------- 
-------- dimension flux(mnz,mnx,2,2), add_source(mnz,mnx)
-------- 
---------heat_latent_magma = 4.2d5  ! J/kg, latent heat of freezing magma
--------+heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
--------+MOR_heat = 0.     !9.e2
--------+heat_latent = 5.e4   !7.e6
-------- 
-------- ! real_area = 0.5* (1./area(n,t))
-------- ! Calculate Fluxes in every triangle
--------@@ -27,7 +29,7 @@
-------- !  | /         / |
-------- !  2         2---3
-------- 
---------
--------+print*, 'do fl_therm'
-------- ntherm = ntherm+1
-------- 
-------- ! saving old temperature
--------@@ -48,12 +50,12 @@
-------- !$OMP                  qs,real_area13,area_n,rhs)
-------- !$OMP do
-------- do i = 1,nx-1
---------    j = 1  ! top
--------+    j = 2  ! top
--------     !iph = iphase(j,i)
--------     cp_eff = Eff_cp( j,i )
-------- 
--------     ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
---------    quad_area = 1./(area(j,i,1)+area(j,i,2))
--------+    quad_area = 1./area(j,i,1) + 1./area(j,i,2)
-------- 
--------     temp(j,i  ) = temp(j,i  ) + andesitic_melt_vol(i  ) * heat_latent_magma / quad_area / cp_eff
--------     temp(j,i+1) = temp(j,i+1) + andesitic_melt_vol(i+1) * heat_latent_magma / quad_area / cp_eff
--------@@ -262,9 +264,28 @@
-------- !$OMP end do
-------- !$OMP end parallel
-------- 
--------+!MOR heating
--------+temp(15:20,216:218) = temp(15:20,216:218) + MOR_heat/1000.
--------+
--------+!add temp for melting
--------+do kk= 1,nmarkers
--------+   !if (kk==2)then
--------+   !   print*,'loop'
--------+   !end if
--------+   if( meltingmarker(kk,3).eq.1) then
--------+        i=meltingmarker(kk,1)
--------+        j=meltingmarker(kk,2)
--------+        kinc=meltingmarker(kk,4)
--------+        !temp(2:j,i) = 2000.
--------+        !print*,'threm: kk=',kk,'  i=',i,'  j=',j ,' kinc=', kinc
--------+        temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
--------+        temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
--------+   endif
--------+end do
--------+
--------+
-------- time_t = time
-------- 
---------
-------- ! HOOK
-------- ! Intrusions - see user_ab.f90
-------- if( if_intrus.eq.1 ) call MakeIntrusions
--------diff -r ebf9b25e80ad -r ae5fa0fdac1d src/init_bc.f90
----------- a/src/init_bc.f90	Fri Aug 04 09:34:21 2017 +0800
--------+++ b/src/init_bc.f90	Mon Jan 22 15:26:08 2018 +0800
--------@@ -151,8 +151,10 @@
-------- 
--------               if ((nbc(i).eq.1.or.nbc(i).eq.10).and.bca(i).lt.0) then
--------                   incoming_right = 1
--------+ 
--------               endif
--------           enddo
--------+         print*,incoming_right
--------       endif
--------       !-------------------------------------------------------------
--------       !        top
--------@@ -179,6 +181,36 @@
-------- 
--------           enddo
--------       endif
--------+      !-------------------------------------------------------------
--------+      !        middel
--------+      !-------------------------------------------------------------
--------+
--------+      if ( nofside(i) .eq. 5 ) then
--------+          
--------+          do mid_nx=190,195  ! where velocity set on
--------+            x1 = cord ( nbc1(i),mid_nx, 2)
--------+            x2 = cord ( nbc2(i),mid_nx, 2)
--------+
--------+             do n = 1,ndbc
--------+                 numbp = n + nbc1(i) - 1
--------+                 x  = (cord (numbp,nx,2) - x1)/(x2-x1)
--------+ 
--------+                 if (nbc(i).eq.1.or.nbc(i).eq.10.or.nbc(i).eq.30)  &
--------+                      call velbc_mid (i,numbp,x,mid_nx)
--------+ 
--------+                 if (nbc(i).eq.2.or.nbc(i).eq. 20.or.nbc(i).eq.40) then
--------+                     nnop = nnop + 1
--------+                     numbp1 = numbp + 1
--------+                     xn = (cord (numbp1,nx,2) - x1)/(x2-x1)
--------+                     xa = 0.5 * (x+xn)
--------+                     call stressbc (i,nnop,numbp,numbp1,xa)
--------+                 endif
--------+             enddo
--------+ 
--------+         enddo
--------+      endif
--------+  
--------+
-------- 
--------       ! viscosity-dependent velocity profile
--------       if (nbc(i).eq.50) call velbc_visc(i)
--------@@ -313,6 +345,67 @@
--------   return
-------- end subroutine velbc
-------- 
--------+subroutine velbc_mid (i,numbp,x,mid_nx)
--------+
--------+  use arrays
--------+  include 'precision.inc'
--------+  include 'arrays.inc'
--------+  include 'params.inc'
--------+
--------+  pi2 = 2. * 3.14159
--------+
--------+  fun =  bca(i) + bcb(i)*x + bcc(i)*x*x   &
--------+       + (bcd(i)*cos (pi2*bce(i)*x) + bcf(i)*sin (pi2*bcg(i)*x))    &
--------+       *exp(-((x-bci(i))*bch(i))**2)
--------+
--------+  if (nofside(i).eq.1) then
--------+      ii1 = 1
--------+      jj1 = numbp
--------+  endif
--------+  if (nofside(i).eq.2) then
--------+      ii1 = numbp
--------+      jj1 = nz
--------+  endif
--------+  if (nofside(i).eq.3) then
--------+      ii1 = nx
--------+      jj1 = numbp
--------+  endif
--------+  if (nofside(i).eq.4) then
--------+      ii1 = numbp
--------+      jj1 = 1
--------+  endif
--------+  if (nofside(i).eq.5) then
--------+      ii1= mid_nx
--------+      jj1= numbp
--------+  endif
--------+  ! - x component
--------+  if (nbc(i) .eq. 10 ) then
--------+      ncod(jj1,ii1,1) = 1
--------+      if (abs(bc(jj1,ii1,1)).gt.0.) then
--------+          fun = bc(jj1,ii1,1)
--------+      endif
--------+      bc(jj1,ii1,1) = fun
--------+  endif
--------+
--------+  ! - z component
--------+  if (nbc(i) .eq. 1 ) then
--------+      ncod(jj1,ii1,2) = 1
--------+      bc  (jj1,ii1,2) = fun
--------+      !       write(*,*) ncod(jj1,ii1,2),bc(jj1,ii1,2)
--------+  endif
--------+
--------+  ! - y component
--------+
--------+  !            if (nbc(i) .eq. 30 ) then
--------+  !       ncod(numbp,3) = 1
--------+  !       bc  (numbp,3) = fun
--------+  !        write(*,*) numbp,ncod(numbp,3),bc(numbp,3)
--------+  !             endif
--------+
--------+  return
--------+end subroutine velbc_mid
--------+
--------+
-------- 
-------- subroutine velbc_visc(i)
-------- 
--------diff -r ebf9b25e80ad -r ae5fa0fdac1d src/matprops.f90
----------- a/src/matprops.f90	Fri Aug 04 09:34:21 2017 +0800
--------+++ b/src/matprops.f90	Mon Jan 22 15:26:08 2018 +0800
--------@@ -226,10 +226,10 @@
-------- if (zcord < -660e3) then
--------     ! T-dep. viscosity
--------     ! eta=1e22 when T=1330 Celsius, inc. 10x when T is 200 deg lower
---------    Eff_visc = 1e22 * exp( -0.0115 * (tmpr - 1330))
--------+    Eff_visc = 1e22 * exp( -0.0110 * (tmpr - 1330))
--------     return
-------- elseif (zcord < -410e3) then
---------    Eff_visc = 1e21 * exp( -0.0115 * (tmpr - 1330))
--------+    Eff_visc = 1e20 * exp( -0.0110 * (tmpr - 1330))
--------     return
-------+diff --git a/src/Makefile b/src/Makefile
-------+index 640af71..cc518a8 100644
-------+--- a/src/Makefile
-------++++ b/src/Makefile
-------+@@ -187,7 +187,7 @@ OBJS = $(SRCS:.f90=.o)
-------+ EXE = flac
-------+ 
-------+ ## Is this a mercurial repository?
-------+-HAS_HG := $(shell hg log -r tip --template '{node}' 2>/dev/null)
-------++HAS_HG := $(shell git log -r --template '{node}' 2>/dev/null)
-------+ 
-------+ ########################################################################
-------+ ## actions
-------+@@ -209,24 +209,24 @@ $(OBJS): %.o : %.f90 params.inc arrays.inc
-------+ take-snapshot:
-------+ 	@# snapshot of the code for building the executable
-------+ 	@echo Flags used to compile the code: > snapshot.diff
-------+-	@echo '  '  CXX=$(CXX) opt=$(opt) openmp=$(openmp) >> snapshot.diff
-------+-	@echo '  '  PATH=$(PATH) >> snapshot.diff
-------+-	@echo '  '  LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) >> snapshot.diff
-------++	@echo '  '  CXX=$(CXX) debug=$(debug) openmp=$(omp) >> snapshot.diff
-------++	@echo '  '  PATH=`pwd ${PATH}` >> snapshot.diff
-------++	@echo '  '  LD_LIBRARY_PATH=`pwd ${LD_LIBRARY_PATH}` >> snapshot.diff
-------+ ifneq (HAS_HG),)
-------+ 	@echo >> snapshot.diff
-------+ 	@echo >> snapshot.diff
-------+ 	@echo '==== Summary of the code ====' >> snapshot.diff
-------+-	@hg summary >> snapshot.diff
-------+-	@echo >> snapshot.diff
-------++	@git log >> snapshot.diff
-------++	@echo >>log snapshot.diff
-------+ 	@echo >> snapshot.diff
-------+ 	@echo '== Code modification (not checked-in) ==' >> snapshot.diff
-------+-	@hg diff >> snapshot.diff
-------++	@git diff >> snapshot.diff
-------+ 	@echo >> snapshot.diff
-------+ 	@echo >> snapshot.diff
-------+ 	@echo '== Code modification (checked-in but not public) ==' >> snapshot.diff
-------+-	@hg log --patch -r "draft()" >> snapshot.diff
-------++	@git log >> snapshot.diff
-------+ else
-------+-	@echo \'hg\' is not in path, cannot take code snapshot. >> snapshot.diff
-------++	@echo \'git\' is not in path, cannot take code snapshot. >> snapshot.diff
-------  endif
-------  
--------diff -r ebf9b25e80ad -r ae5fa0fdac1d src/newphase2marker.f90
----------- a/src/newphase2marker.f90	Fri Aug 04 09:34:21 2017 +0800
--------+++ b/src/newphase2marker.f90	Mon Jan 22 15:26:08 2018 +0800
--------@@ -13,13 +13,13 @@
--------     k = mod(n - 1, 2) + 1
--------     j = mod((n - k) / 2, nz-1) + 1
--------     i = (n - k) / 2 / (nz - 1) + 1
---------
--------+    
--------     if(j>=j1 .and. j<=j2 .and. i>=i1 .and. i<=i2) then
--------         nphase_counter(mark(kk)%phase,j,i) = nphase_counter(mark(kk)%phase,j,i) - 1
--------         iphase(j,i) = iph
--------         mark(kk)%phase = iph
--------         nphase_counter(iph,j,i) = nphase_counter(iph,j,i) + 1
---------    endif
--------+    endif 
-------- enddo
-------- 
-------- phase_ratio(:,j,i) = 0.d0
--------@@ -39,6 +39,7 @@
-------- 
-------- integer ichanged(100*mnx), jchanged(100*mnx)
-------- integer kph(1)
--------+!real heat_latent
-------- dimension ratio(20)
-------- 
-------- ! max. depth (m) of eclogite phase transition
--------@@ -49,13 +50,16 @@
-------- 
-------- ! temperature (C) of serpentine phase transition
-------- real*8, parameter :: serpentine_temp = 550.
---------
--------+!by the deep-penetrating faults
-------- ! temperature (C) and depth (m) of 10% partial melting of upper mantle.
-------- real*8, parameter :: partial_melt_temp = 600.
-------- !real*8, parameter :: partial_melt_depth = -70.e3
-------- ! thickness of new crust
-------- real*8, parameter :: new_crust_thickness = 7.e3
-------- 
--------+!heat_latent=7.e6
--------+print*, 'do newphase2markers'
--------+
-------- 
-------- ! search the element for melting
-------- do jj = 1, nz-1
--------@@ -88,6 +92,7 @@
-------- !$OMP parallel private(kk,i,j,k,n,tmpr,depth,iph,press,jbelow,trpres,trpres2,kinc,quad_area)
-------- !$OMP do schedule(guided)
-------- do kk = 1 , nmarkers
--------+ 
--------     if (mark(kk)%dead.eq.0) cycle
-------- 
--------     ! from ntriag, get element number
--------@@ -103,6 +108,15 @@
-------- 
--------     ! # of markers inside quad
--------     kinc = sum(nphase_counter(:,j,i))
--------+    
--------+    ! record the melting marker for adding temp
--------+    meltingmarker(kk,1) = i
--------+    meltingmarker(kk,2) = j
--------+    meltingmarker(kk,3) = 0 ! 0= no melting ; 1= melting
--------+    meltingmarker(kk,4) = 0    
--------+    !if (kk==4444) then
--------+    !   meltingmarker(kk,3)=1
--------+    !end if
-------- 
--------     !XXX: Some quick checks to skip markers that won't change phase. Might
--------     !     not be accurate!
--------@@ -149,7 +163,7 @@
--------         !    mark(kk)%phase = kweakmc
--------         !endif
-------- 
---------    case (kmant1, kmant2)
--------+    case (kmant1)
--------         ! subuducted oceanic crust below mantle, mantle is serpentinized
--------         if(depth > max_basalt_depth) cycle
--------         ! Phase diagram taken from Ulmer and Trommsdorff, Nature, 1995
--------@@ -193,7 +207,7 @@
--------         ! Phase diagram taken from Ulmer and Trommsdorff, Nature, 1995
--------         ! Fixed points (730 C, 2.1 GPa) (500 C, 7.5 GPa)
--------         trpres = 2.1e9 + (7.5e9 - 2.1e9) * (tmpr - 730.) / (500. - 730.)
---------        ! Fixed points (730 C, 2.1 GPa) (650 C, 0.2 GPa)
--------+        ! = Fixed pointsting faults (730 C, 2.1 GPa) (650 C, 0.2 GPa)
--------         trpres2 = 2.1e9 + (0.2e9 - 2.1e9) * (tmpr - 730.) / (650. - 730.)
--------         press = mantle_density * g * depth
--------         if (tmpr < serpentine_temp .or. (press < trpres .and. press > trpres2)) cycle
--------@@ -220,9 +234,8 @@
--------     case (khydmant)
--------         if (tmpr > ts(khydmant)) then
--------             ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
---------            quad_area = 1./(area(j,i,1)+area(j,i,2))
--------+            quad_area = 1./area(j,i,1) + 1./area(j,i,2)
--------             andesitic_melt_vol(i) = andesitic_melt_vol(i) + quad_area * vol_frac_melt / kinc
---------
--------             !$OMP critical (change_phase1)
--------             nphase_counter(iph,j,i) = nphase_counter(iph,j,i) - 1
--------             nphase_counter(kmant1,j,i) = nphase_counter(kmant1,j,i) + 1
--------@@ -230,11 +243,22 @@
--------             ichanged(nchanged) = i
--------             jchanged(nchanged) = j
--------             !$OMP end critical (change_phase1)
---------            mark(kk)%phase = kmant1
--------+            mark(kk)%phase = kmant2
--------+
--------+            !add temp for melting         
--------+              !kinc = sum(nphase_counter(:,j,i))
--------+              !$OMP critical (melting_temp) 
--------+              !temp(2:j,i)   = temp(2:j,i)  + heat_latent/kinc/1000/(2*(j-2+1))
--------+              !temp(2:j,i+1) = temp(2:j,i+1)+ heat_latent/kinc/1000/(2*(j-2+1))
--------+              !$OMP end critical (melting_temp)
--------+            meltingmarker(kk,3) = 1
--------+            meltingmarker(kk,4) = sum(nphase_counter(:,j,i))
--------+            print* ,kk,meltingmarker(kk,1),meltingmarker(kk,2),meltingmarker(kk,3),meltingmarker(kk,4)  
--------         endif
--------     end select
---------
---------    if(nchanged >= 100*mnx) stop 38
--------+    if(nchanged >= 100*mnx) then
--------+        stop 38
--------+    end if
-------- enddo
-------- !$OMP end do
-------- !$OMP end parallel
--------@@ -266,5 +290,7 @@
-------- 
-------- enddo
-------- 
---------return
--------+! accumulate andesitic_melt_vol
--------+acc_melt_vol = acc_melt_vol + sum(andesitic_melt_vol(1:nx-1))
--------+
-------- end subroutine change_phase
--------diff -r ebf9b25e80ad -r ae5fa0fdac1d util/flacmarker2vtk.py
----------- a/util/flacmarker2vtk.py	Fri Aug 04 09:34:21 2017 +0800
--------+++ b/util/flacmarker2vtk.py	Mon Jan 22 15:26:08 2018 +0800
--------@@ -11,10 +11,10 @@
-------- 
-------- # filtering markers to only those within the domain bounds (in km)
-------- filtering = True
---------xmin = 300
---------xmax = 700
---------zmin = -50
---------zmax = 100
--------+xmin = 500
--------+xmax = 1000
--------+zmin = -500
--------+zmax = 50
-------- 
-------  
-------- def filter_marker(x, z, age, phase, ID):
--------
--------changeset:   519:1f5533e6f8fe
--------user:        chii <chiilee1995@gmail.com>
--------date:        Tue Jan 23 02:20:26 2018 +0800
--------summary:     heat due to the magma beneath the arc (10-25km depth,triangle)
--------
--------diff -r ae5fa0fdac1d -r 1f5533e6f8fe src/fl_therm.f90
----------- a/src/fl_therm.f90	Mon Jan 22 15:26:08 2018 +0800
--------+++ b/src/fl_therm.f90	Tue Jan 23 02:20:26 2018 +0800
--------@@ -267,6 +267,11 @@
-------- !MOR heating
-------- temp(15:20,216:218) = temp(15:20,216:218) + MOR_heat/1000.
-------- 
--------+!test
--------+meltingmarker(100,1)=100
--------+meltingmarker(100,2)=100
--------+meltingmarker(100,3) = 1
--------+
-------- !add temp for melting
-------- do kk= 1,nmarkers
--------    !if (kk==2)then
--------@@ -276,14 +281,77 @@
--------         i=meltingmarker(kk,1)
--------         j=meltingmarker(kk,2)
--------         kinc=meltingmarker(kk,4)
--------+        print*,kk,i,j        
--------+
--------+        do jj=1,j
--------+        depth = cord(1,i,2) - cord(jj,i,2)
--------+          if (depth<=10000)then 
--------+              j1 = jj
--------+          else if (depth<=25000) then
--------+              j2=jj
--------+          end if 
--------+        end do       
--------+        print*,j2
--------+        print *,'j1=',j1, cord(j1,i,1),cord(j1,i,2)
--------+        print *,'j2=',j2, cord(j2,i,1),cord(j2,i,2)
--------+
--------+        jL=j2-j1+1
--------+        iitemp=-1
--------+        nodetotal=0
--------+        if (modulo(jL,2).eq.1) then
--------+          do item=1,jL/2        
--------+             iitemp=iitemp+2
--------+             nodetotal=nodetotal+iitemp
--------+          end do
--------+          nodetotal=2*nodetotal+jL
--------+          print*,nodetotal
--------+
--------+          do m=0,jL/2
--------+             do n=-m,m
--------+             temp(j1+m,i+n)= min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
--------+             !temp(j1+m,i+n)=2000
--------+             print*,"(",j1+m,',',i+n,')'
--------+             end do
--------+          end do
--------+        print*,'----'
--------+          do m=0,jL/2-1
--------+             do n=-m,m
--------+             temp(j2-m,i+n)= min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
--------+             !temp(j2-m,i+n)=2000
--------+             print*,"(",j2-m,',',i+n,')',i,n
--------+             end do
--------+          end do
--------+ 
--------+       else 
--------+          do item=1,jL/2
--------+             iitemp=iitemp+2
--------+             nodetotal=nodetotal+iitemp
--------+          end do
--------+          nodetotal=2*nodetotal
--------+          print*,nodetotal 
--------+
--------+          do m=0,jL/2-1
--------+             do n=-m,m
--------+             temp(j1+m,i+n)=min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
--------+             !temp(j1+m,i+n)=2000
--------+             print*,"(",j1+m,',',i+n,')'
--------+             end do
--------+          end do
--------+          do m=0,L/2-1
--------+             do n=-m,m
--------+             temp(j2-m,i+n)=min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
--------+             !temp(j2-m,i+n)=2000
--------+             print*,"(",j2-m,',',i+n,')',i,n
--------+             end do
--------+          end do
--------+        end if
--------         !temp(2:j,i) = 2000.
--------         !print*,'threm: kk=',kk,'  i=',i,'  j=',j ,' kinc=', kinc
---------        temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
---------        temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
--------+        !temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
--------+        !temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
--------    endif
-------- end do
-------- 
---------
-------- time_t = time
-------- 
-------- ! HOOK
--------
--------changeset:   520:d4ffd43f3259
--------user:        chii <chiilee1995@gmail.com>
--------date:        Mon Jan 29 01:11:21 2018 +0800
--------summary:     Heating due to magma rise up beneath the arc (square)
--------
--------diff -r 1f5533e6f8fe -r d4ffd43f3259 src/fl_therm.f90
----------- a/src/fl_therm.f90	Tue Jan 23 02:20:26 2018 +0800
--------+++ b/src/fl_therm.f90	Mon Jan 29 01:11:21 2018 +0800
--------@@ -11,7 +11,7 @@
-------- 
-------- heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
-------- MOR_heat = 0.     !9.e2
---------heat_latent = 5.e4   !7.e6
--------+heat_latent =0.e4   !7.e6
-------- 
-------- ! real_area = 0.5* (1./area(n,t))
-------- ! Calculate Fluxes in every triangle
--------@@ -268,15 +268,12 @@
-------- temp(15:20,216:218) = temp(15:20,216:218) + MOR_heat/1000.
-------- 
-------- !test
---------meltingmarker(100,1)=100
---------meltingmarker(100,2)=100
---------meltingmarker(100,3) = 1
--------+!meltingmarker(100,1)=100
--------+!meltingmarker(100,2)=100
--------+!meltingmarker(100,3) = 1
-------- 
-------- !add temp for melting
-------- do kk= 1,nmarkers
---------   !if (kk==2)then
---------   !   print*,'loop'
---------   !end if
--------    if( meltingmarker(kk,3).eq.1) then
--------         i=meltingmarker(kk,1)
--------         j=meltingmarker(kk,2)
--------@@ -284,71 +281,127 @@
--------         print*,kk,i,j        
-------- 
--------         do jj=1,j
---------        depth = cord(1,i,2) - cord(jj,i,2)
--------+          depth = cord(1,i,2) - cord(jj,i,2)
--------           if (depth<=10000)then 
--------               j1 = jj
--------           else if (depth<=25000) then
---------              j2=jj
--------+              j2 = jj
--------           end if 
---------        end do       
---------        print*,j2
---------        print *,'j1=',j1, cord(j1,i,1),cord(j1,i,2)
---------        print *,'j2=',j2, cord(j2,i,1),cord(j2,i,2)
--------+        end do     
--------+        
--------+        jm=int((j1+j2)/2)
-------- 
---------        jL=j2-j1+1
---------        iitemp=-1
---------        nodetotal=0
---------        if (modulo(jL,2).eq.1) then
---------          do item=1,jL/2        
---------             iitemp=iitemp+2
---------             nodetotal=nodetotal+iitemp
---------          end do
---------          nodetotal=2*nodetotal+jL
---------          print*,nodetotal
--------+        do ii=1,nx
--------+          dis = cord(jm,i,1) - cord(jm,ii,1)
--------+          if (dis >=7500)then
--------+              i1 = ii-1
--------+          else if (dis>=-7500) then
--------+              i2 = ii+1
--------+          end if
--------+        end do
-------- 
---------          do m=0,jL/2
---------             do n=-m,m
---------             temp(j1+m,i+n)= min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
---------             !temp(j1+m,i+n)=2000
---------             print*,"(",j1+m,',',i+n,')'
---------             end do
---------          end do
---------        print*,'----'
---------          do m=0,jL/2-1
---------             do n=-m,m
---------             temp(j2-m,i+n)= min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
---------             !temp(j2-m,i+n)=2000
---------             print*,"(",j2-m,',',i+n,')',i,n
---------             end do
---------          end do
--------- 
---------       else 
---------          do item=1,jL/2
---------             iitemp=iitemp+2
---------             nodetotal=nodetotal+iitemp
---------          end do
---------          nodetotal=2*nodetotal
---------          print*,nodetotal 
--------+        print*,jm
--------+        print *,'p1=',i ,j1, cord(j1,i ,1)/1000,cord(j1,i ,2)
--------+        print *,'p2=',i1,jm, cord(jm,i1,1)/1000,cord(jm,i1,2)
--------+        print *,'p3=',i ,j2, cord(j2,i ,1)/1000,cord(j2,i ,2)
--------+        print *,'p4=',i2,jm, cord(jm,i2,1)/1000,cord(jm,i2,2)
--------+        
--------+     if (modulo((j1+j2),2).eq.0) then
--------+        do ii=1,nx
--------+        do jj=1,nz
--------+          if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
--------+              ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
--------+          nodes=nodes+1
--------+          end if 
--------+        end do
--------+        end do   
--------+        do ii=1,nx
--------+        do jj=1,nz
--------+          if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
--------+              ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
--------+          temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent/kinc/1000./nodes))
--------+          !temp(jj,ii)=2000.
--------+          end if 
--------+       end do
--------+       end do
--------+       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j2,i,2)-cord(j1,i,2)))/2
--------+  
--------+     else
--------+      do ii=1,nx
--------+      do jj=1,nz
--------+        if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
--------+            ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
--------+         nodes=nodes+1
--------+        end if 
--------+      end do
--------+      end do   
--------+      do ii=1,nx
--------+      do jj=1,nz
--------+        if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
--------+            ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
--------+        temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent/kinc/1000./nodes))
--------+        !temp(jj,ii)=2000.
--------+        end if 
--------+      end do
--------+      end do  
--------+      area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j2,i,2)-cord(j1,i,2))+(cord(jm+1,i,1)-cord(jm,i,1))))/2    
--------+     end if
-------- 
---------          do m=0,jL/2-1
---------             do n=-m,m
---------             temp(j1+m,i+n)=min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
---------             !temp(j1+m,i+n)=2000
---------             print*,"(",j1+m,',',i+n,')'
---------             end do
---------          end do
---------          do m=0,L/2-1
---------             do n=-m,m
---------             temp(j2-m,i+n)=min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
---------             !temp(j2-m,i+n)=2000
---------             print*,"(",j2-m,',',i+n,')',i,n
---------             end do
---------          end do
---------        end if
---------        !temp(2:j,i) = 2000.
---------        !print*,'threm: kk=',kk,'  i=',i,'  j=',j ,' kinc=', kinc
---------        !temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
---------        !temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
--------+        !jL=j2-j1+1
--------+        !iitemp=-1
--------+        !nodetotal=0
--------+        !if (modulo(jL,2).eq.1) then
--------+        !  do item=1,jL/2        
--------+        !     iitemp=iitemp+2
--------+        !     nodetotal=nodetotal+iitemp
--------+        !  end do
--------+        !  nodetotal=2*nodetotal+jL
--------+        !  print*,nodetotal
--------+!
--------+!          do m=0,jL/2
--------+!             do n=-m,m
--------+!             temp(j1+m,i+n)= min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
--------+!             !temp(j1+m,i+n)=2000
--------+!             print*,"(",j1+m,',',i+n,')'
--------+!             end do
--------+!          end do
--------+!        print*,'----'
--------+!          do m=0,jL/2-1
--------+!             do n=-m,m
--------+!             temp(j2-m,i+n)= min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
--------+!             !temp(j2-m,i+n)=2000
--------+!             print*,"(",j2-m,',',i+n,')',i,n
--------+!             end do
--------+!          end do
--------+! 
--------+!       else 
--------+!          do item=1,jL/2
--------+!             iitemp=iitemp+2
--------+!             nodetotal=nodetotal+iitemp
--------+!          end do
--------+!          nodetotal=2*nodetotal
--------+!          print*,nodetotal 
--------+!
--------+!          do m=0,jL/2-1
--------+!             do n=-m,m
--------+!             temp(j1+m,i+n)=min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
--------+!             !temp(j1+m,i+n)=2000
--------+!             print*,"(",j1+m,',',i+n,')'
--------+!             end do
--------+!          end do
--------+!          do m=0,L/2-1
--------+!             do n=-m,m
--------+!             temp(j2-m,i+n)=min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
--------+!             !temp(j2-m,i+n)=2000
--------+!             print*,"(",j2-m,',',i+n,')',i,n
--------+!             end do
--------+!          end do
--------+!        end if
--------+
--------+!        !temp(2:j,i) = 2000.
--------+!        !print*,'threm: kk=',kk,'  i=',i,'  j=',j ,' kinc=', kinc
--------+!        !temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
--------+!        !temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
--------    endif
-------- end do
-------- 
--------
--------changeset:   521:88ba521a42fa
--------user:        chii <chiilee1995@gmail.com>
--------date:        Mon Feb 05 10:31:53 2018 +0800
--------summary:     Optimization last version
--------
--------diff -r d4ffd43f3259 -r 88ba521a42fa src/arrays.f90
----------- a/src/arrays.f90	Mon Jan 29 01:11:21 2018 +0800
--------+++ b/src/arrays.f90	Mon Feb 05 10:31:53 2018 +0800
--------@@ -14,7 +14,7 @@
--------   real*8, pointer, save :: junk2(:,:)
-------- 
--------   !array for arc melting
---------  real*8, pointer, save :: meltingmarker(:,:)
--------+  real*8, pointer, save :: meltingmarker(:,:,:)
-------- contains
-------- 
--------   subroutine allocate_arrays(nz, nx)
--------@@ -38,7 +38,7 @@
--------     allocate(ncod(nz, nx, 2))
-------- 
--------     allocate(junk2(nz, nx))
---------    allocate(meltingmarker(10000000,4))
--------+    allocate(meltingmarker(nz, nx, 2))
-------- 
--------   end subroutine allocate_arrays
-------- 
--------diff -r d4ffd43f3259 -r 88ba521a42fa src/fl_therm.f90
----------- a/src/fl_therm.f90	Mon Jan 29 01:11:21 2018 +0800
--------+++ b/src/fl_therm.f90	Mon Feb 05 10:31:53 2018 +0800
--------@@ -11,7 +11,7 @@
-------- 
-------- heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
-------- MOR_heat = 0.     !9.e2
---------heat_latent =0.e4   !7.e6
--------+heat_latent =5.e6  !7.e6
-------- 
-------- ! real_area = 0.5* (1./area(n,t))
-------- ! Calculate Fluxes in every triangle
--------@@ -264,21 +264,18 @@
-------- !$OMP end do
-------- !$OMP end parallel
-------- 
---------!MOR heating
--------+!MOR heating (chii)
-------- temp(15:20,216:218) = temp(15:20,216:218) + MOR_heat/1000.
-------- 
-------- !test
---------!meltingmarker(100,1)=100
---------!meltingmarker(100,2)=100
---------!meltingmarker(100,3) = 1
--------+!meltingmarker(30,90,1)=10
-------- 
---------!add temp for melting
---------do kk= 1,nmarkers
---------   if( meltingmarker(kk,3).eq.1) then
---------        i=meltingmarker(kk,1)
---------        j=meltingmarker(kk,2)
---------        kinc=meltingmarker(kk,4)
---------        print*,kk,i,j        
--------+!add temp for melting (chii)
--------+do j= 1,nz
--------+do i = 1,nx
--------+    if (meltingmarker(j,i,1) .ne. 0) then
--------+        kinc=meltingmarker(j,i,2)   
--------+        print* , i,j,kinc   
-------- 
--------         do jj=1,j
--------           depth = cord(1,i,2) - cord(jj,i,2)
--------@@ -300,110 +297,69 @@
--------           end if
--------         end do
-------- 
---------        print*,jm
--------         print *,'p1=',i ,j1, cord(j1,i ,1)/1000,cord(j1,i ,2)
--------         print *,'p2=',i1,jm, cord(jm,i1,1)/1000,cord(jm,i1,2)
--------         print *,'p3=',i ,j2, cord(j2,i ,1)/1000,cord(j2,i ,2)
--------         print *,'p4=',i2,jm, cord(jm,i2,1)/1000,cord(jm,i2,2)
--------         
--------      if (modulo((j1+j2),2).eq.0) then
---------        do ii=1,nx
---------        do jj=1,nz
---------          if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
---------              ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
--------+
--------+        do jj=1,j
--------+        do ii= max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
--------+               min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
--------+
--------+
--------+        !do ii=1,nx
--------+        !do jj=1,nz
--------+          !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
--------+              !ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
--------           nodes=nodes+1
---------          end if 
--------+          !end if 
--------         end do
--------         end do   
---------        do ii=1,nx
---------        do jj=1,nz
---------          if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
---------              ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
---------          temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent/kinc/1000./nodes))
--------+        do jj=1,j
--------+        do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
--------+              min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
--------+
--------+
--------+          !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
--------+          !    ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
--------+          temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,2)/kinc/1000./nodes))
--------           !temp(jj,ii)=2000.
---------          end if 
--------+          !end if 
--------        end do
--------        end do
--------        area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j2,i,2)-cord(j1,i,2)))/2
--------   
--------      else
---------      do ii=1,nx
---------      do jj=1,nz
---------        if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
---------            ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
--------+      do jj=1,j
--------+      do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
--------+            min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
--------+
--------+        !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1         .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
--------+        !    ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
--------          nodes=nodes+1
---------        end if 
--------+        !end if 
--------       end do
--------       end do   
---------      do ii=1,nx
---------      do jj=1,nz
---------        if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
---------            ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
---------        temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent/kinc/1000./nodes))
--------+      do jj=1,j
--------+      do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
--------+            min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
--------+
--------+        !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1         .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
--------+        !    ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
--------+        temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
--------         !temp(jj,ii)=2000.
---------        end if 
--------+        !end if 
--------       end do
--------       end do  
--------       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j2,i,2)-cord(j1,i,2))+(cord(jm+1,i,1)-cord(jm,i,1))))/2    
--------      end if
-------- 
---------        !jL=j2-j1+1
---------        !iitemp=-1
---------        !nodetotal=0
---------        !if (modulo(jL,2).eq.1) then
---------        !  do item=1,jL/2        
---------        !     iitemp=iitemp+2
---------        !     nodetotal=nodetotal+iitemp
---------        !  end do
---------        !  nodetotal=2*nodetotal+jL
---------        !  print*,nodetotal
---------!
---------!          do m=0,jL/2
---------!             do n=-m,m
---------!             temp(j1+m,i+n)= min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
---------!             !temp(j1+m,i+n)=2000
---------!             print*,"(",j1+m,',',i+n,')'
---------!             end do
---------!          end do
---------!        print*,'----'
---------!          do m=0,jL/2-1
---------!             do n=-m,m
---------!             temp(j2-m,i+n)= min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
---------!             !temp(j2-m,i+n)=2000
---------!             print*,"(",j2-m,',',i+n,')',i,n
---------!             end do
---------!          end do
---------! 
---------!       else 
---------!          do item=1,jL/2
---------!             iitemp=iitemp+2
---------!             nodetotal=nodetotal+iitemp
---------!          end do
---------!          nodetotal=2*nodetotal
---------!          print*,nodetotal 
---------!
---------!          do m=0,jL/2-1
---------!             do n=-m,m
---------!             temp(j1+m,i+n)=min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
---------!             !temp(j1+m,i+n)=2000
---------!             print*,"(",j1+m,',',i+n,')'
---------!             end do
---------!          end do
---------!          do m=0,L/2-1
---------!             do n=-m,m
---------!             temp(j2-m,i+n)=min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
---------!             !temp(j2-m,i+n)=2000
---------!             print*,"(",j2-m,',',i+n,')',i,n
---------!             end do
---------!          end do
---------!        end if
-------- 
---------!        !temp(2:j,i) = 2000.
---------!        !print*,'threm: kk=',kk,'  i=',i,'  j=',j ,' kinc=', kinc
---------!        !temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
---------!        !temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
--------    endif
-------- end do
--------+end do
-------- 
-------- time_t = time
-------- 
--------@@ -412,4 +368,5 @@
-------- if( if_intrus.eq.1 ) call MakeIntrusions
-------- 
-------- return
--------+
-------- end 
--------diff -r d4ffd43f3259 -r 88ba521a42fa src/newphase2marker.f90
----------- a/src/newphase2marker.f90	Mon Jan 29 01:11:21 2018 +0800
--------+++ b/src/newphase2marker.f90	Mon Feb 05 10:31:53 2018 +0800
--------@@ -79,6 +79,8 @@
--------   end if
-------- end do
-------- 
--------+! data of melting element(chii)
--------+meltingmarker(:,:,1)=0
-------- 
-------- ! nelem_inject was used for magma injection, reused here for serpentization
-------- nelem_serp = nelem_inject
--------@@ -91,6 +93,7 @@
-------- 
-------- !$OMP parallel private(kk,i,j,k,n,tmpr,depth,iph,press,jbelow,trpres,trpres2,kinc,quad_area)
-------- !$OMP do schedule(guided)
--------+
-------- do kk = 1 , nmarkers
--------  
--------     if (mark(kk)%dead.eq.0) cycle
--------@@ -108,15 +111,6 @@
-------- 
--------     ! # of markers inside quad
--------     kinc = sum(nphase_counter(:,j,i))
---------    
---------    ! record the melting marker for adding temp
---------    meltingmarker(kk,1) = i
---------    meltingmarker(kk,2) = j
---------    meltingmarker(kk,3) = 0 ! 0= no melting ; 1= melting
---------    meltingmarker(kk,4) = 0    
---------    !if (kk==4444) then
---------    !   meltingmarker(kk,3)=1
---------    !end if
-------- 
--------     !XXX: Some quick checks to skip markers that won't change phase. Might
--------     !     not be accurate!
--------@@ -232,6 +226,7 @@
--------         !$OMP end critical (change_phase1)
--------         mark(kk)%phase = kmetased
--------     case (khydmant)
--------+
--------         if (tmpr > ts(khydmant)) then
--------             ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
--------             quad_area = 1./area(j,i,1) + 1./area(j,i,2)
--------@@ -245,15 +240,10 @@
--------             !$OMP end critical (change_phase1)
--------             mark(kk)%phase = kmant2
-------- 
---------            !add temp for melting         
---------              !kinc = sum(nphase_counter(:,j,i))
---------              !$OMP critical (melting_temp) 
---------              !temp(2:j,i)   = temp(2:j,i)  + heat_latent/kinc/1000/(2*(j-2+1))
---------              !temp(2:j,i+1) = temp(2:j,i+1)+ heat_latent/kinc/1000/(2*(j-2+1))
---------              !$OMP end critical (melting_temp)
---------            meltingmarker(kk,3) = 1
---------            meltingmarker(kk,4) = sum(nphase_counter(:,j,i))
---------            print* ,kk,meltingmarker(kk,1),meltingmarker(kk,2),meltingmarker(kk,3),meltingmarker(kk,4)  
--------+            !record the data for melting element(chii)        
--------+            meltingmarker(j,i,1)=meltingmarker(j,i,1)+1
--------+            meltingmarker(j,i,2)=kinc            
--------+ 
--------         endif
--------     end select
--------     if(nchanged >= 100*mnx) then
--------
--------changeset:   522:d5ebbf14c1d2
--------user:        chii <chiilee1995@gmail.com>
--------date:        Sat Feb 17 22:10:21 2018 +0800
--------summary:     debugs(with cool area 5x5 nodes /solidus of hydmant mentle changed /heat area 15x15km)
--------
--------diff -r 88ba521a42fa -r d5ebbf14c1d2 src/fl_therm.f90
----------- a/src/fl_therm.f90	Mon Feb 05 10:31:53 2018 +0800
--------+++ b/src/fl_therm.f90	Sat Feb 17 22:10:21 2018 +0800
--------@@ -11,7 +11,7 @@
-------- 
-------- heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
-------- MOR_heat = 0.     !9.e2
---------heat_latent =5.e6  !7.e6
--------+heat_latent =5.e5  !7.e6
-------- 
-------- ! real_area = 0.5* (1./area(n,t))
-------- ! Calculate Fluxes in every triangle
--------@@ -307,8 +307,6 @@
--------         do jj=1,j
--------         do ii= max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
--------                min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
---------
---------
--------         !do ii=1,nx
--------         !do jj=1,nz
--------           !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
--------@@ -356,7 +354,10 @@
--------       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j2,i,2)-cord(j1,i,2))+(cord(jm+1,i,1)-cord(jm,i,1))))/2    
--------      end if
-------- 
---------
--------+     area_cooling=(cord(j,i+2,1)-cord(j,i-2,1))*(cord(j-2,i,2)-cord(j+2,i,2))
--------+     temp(j-2:j+2,i-2:i+2) = (temp(j-2:j+2,i-2:i+2)-heat_latent*area_heating/area_cooling/1000./25)
--------+     
--------+     nodes=0
--------    endif
-------- end do
-------- end do
--------diff -r 88ba521a42fa -r d5ebbf14c1d2 src/newphase2marker.f90
----------- a/src/newphase2marker.f90	Mon Feb 05 10:31:53 2018 +0800
--------+++ b/src/newphase2marker.f90	Sat Feb 17 22:10:21 2018 +0800
--------@@ -56,6 +56,9 @@
-------- !real*8, parameter :: partial_melt_depth = -70.e3
-------- ! thickness of new crust
-------- real*8, parameter :: new_crust_thickness = 7.e3
--------+! soildus of hydmant mantle
--------+!real*8, parameter :: tshydmant
--------+
-------- 
-------- !heat_latent=7.e6
-------- print*, 'do newphase2markers'
--------@@ -226,8 +229,12 @@
--------         !$OMP end critical (change_phase1)
--------         mark(kk)%phase = kmetased
--------     case (khydmant)
---------
---------        if (tmpr > ts(khydmant)) then
--------+        if (depth > -50e3)then
--------+            tshydmant=ts(khydmant)
--------+        else
--------+            tshydmant=(depth+50e3)*(180.)/(-50e3)+ts(khydmant)
--------+        endif
--------+        if (tmpr > tshydmant) then
--------             ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
--------             quad_area = 1./area(j,i,1) + 1./area(j,i,2)
--------             andesitic_melt_vol(i) = andesitic_melt_vol(i) + quad_area * vol_frac_melt / kinc
--------
--------changeset:   523:0ad996b69eb4
--------user:        chii <chiilee1995@gmail.com>
--------date:        Tue Mar 06 12:18:04 2018 +0800
--------summary:     update by tan2's version
--------
--------diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/arrays.f90
----------- a/src/arrays.f90	Sat Feb 17 22:10:21 2018 +0800
--------+++ b/src/arrays.f90	Tue Mar 06 12:18:04 2018 +0800
--------@@ -12,7 +12,6 @@
-------- 
--------   ! temporary array
--------   real*8, pointer, save :: junk2(:,:)
---------
--------   !array for arc melting
--------   real*8, pointer, save :: meltingmarker(:,:,:)
-------- contains
--------diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/bar2euler.f90
----------- a/src/bar2euler.f90	Sat Feb 17 22:10:21 2018 +0800
--------+++ b/src/bar2euler.f90	Tue Mar 06 12:18:04 2018 +0800
--------@@ -77,6 +77,43 @@
-------+diff --git a/src/arrays.inc b/src/arrays.inc
-------+index a2c04cc..8ef189a 100644
-------+--- a/src/arrays.inc
-------++++ b/src/arrays.inc
-------+@@ -1,7 +1,7 @@
-------+ ! -*- F90 -*-
-------+ 
-------+ !!! maximum number of ELEMENTS !!!
-------+-parameter(mnz=200, mnx=700)
-------++parameter(mnz=300, mnx=700)
-------+ parameter(max_markers_per_elem=32)
-------+ 
-------+ common /phase_arrays/ iphase(mnz,mnx), nphase_counter(20,mnz,mnx), phase_ratio(20,mnz,mnx)
-------+diff --git a/src/bar2euler.f90 b/src/bar2euler.f90
-------+index 74eccfc..f2d021f 100644
-------+--- a/src/bar2euler.f90
-------++++ b/src/bar2euler.f90
-------+@@ -77,10 +77,48 @@ subroutine shape_functions(j, i, shp2)
-------  end subroutine shape_functions
-------  
-------  
-------@@ -1330,96 +119,44 @@ diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/bar2euler.f90
-------  ! For brevity shp(1,2) --> s12 etc
-------  !
-------  ! a1 = s11 + s12*x + s13*y
--------diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/fl_therm.f90
----------- a/src/fl_therm.f90	Sat Feb 17 22:10:21 2018 +0800
--------+++ b/src/fl_therm.f90	Tue Mar 06 12:18:04 2018 +0800
--------@@ -11,7 +11,7 @@
-------- 
-------- heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
-------- MOR_heat = 0.     !9.e2
---------heat_latent =5.e5  !7.e6
--------+heat_latent =1.e4  !7.e6
-------- 
-------- ! real_area = 0.5* (1./area(n,t))
-------- ! Calculate Fluxes in every triangle
--------@@ -50,12 +50,12 @@
-------- !$OMP                  qs,real_area13,area_n,rhs)
-------- !$OMP do
-------- do i = 1,nx-1
---------    j = 2  ! top
--------+    j = 1  ! top
--------     !iph = iphase(j,i)
--------     cp_eff = Eff_cp( j,i )
-------- 
--------     ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
---------    quad_area = 1./area(j,i,1) + 1./area(j,i,2)
--------+    quad_area = 1./(area(j,i,1)+area(j,i,2))
-------- 
--------     temp(j,i  ) = temp(j,i  ) + andesitic_melt_vol(i  ) * heat_latent_magma / quad_area / cp_eff
--------     temp(j,i+1) = temp(j,i+1) + andesitic_melt_vol(i+1) * heat_latent_magma / quad_area / cp_eff
--------@@ -279,9 +279,9 @@
-------- 
--------         do jj=1,j
--------           depth = cord(1,i,2) - cord(jj,i,2)
---------          if (depth<=10000)then 
--------+          if (depth<=1.e4)then 
--------               j1 = jj
---------          else if (depth<=25000) then
--------+          else if (depth<=4e4) then
--------               j2 = jj
--------           end if 
--------         end do     
--------@@ -290,9 +290,9 @@
-------- 
--------         do ii=1,nx
--------           dis = cord(jm,i,1) - cord(jm,ii,1)
---------          if (dis >=7500)then
--------+          if (dis >=7.5e3)then
--------               i1 = ii-1
---------          else if (dis>=-7500) then
--------+          else if (dis>=-7.5e3) then
--------               i2 = ii+1
--------           end if
--------         end do
--------@@ -301,6 +301,7 @@
--------         print *,'p2=',i1,jm, cord(jm,i1,1)/1000,cord(jm,i1,2)
--------         print *,'p3=',i ,j2, cord(j2,i ,1)/1000,cord(j2,i ,2)
--------         print *,'p4=',i2,jm, cord(jm,i2,1)/1000,cord(jm,i2,2)
--------+        nodes=0.
--------         
--------      if (modulo((j1+j2),2).eq.0) then
-------- 
--------@@ -327,7 +328,7 @@
--------           !end if 
--------        end do
--------        end do
---------       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j2,i,2)-cord(j1,i,2)))/2
--------+       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j1,i,2)-cord(j2,i,2)))/2
--------   
--------      else
--------       do jj=1,j
--------@@ -351,13 +352,13 @@
--------         !end if 
--------       end do
--------       end do  
---------      area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j2,i,2)-cord(j1,i,2))+(cord(jm+1,i,1)-cord(jm,i,1))))/2    
--------+      area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j1,i,2)-cord(j2,i,2))+(cord(jm,i,1)-cord(jm+1,i,1))))/2    
--------      end if
-------- 
---------     area_cooling=(cord(j,i+2,1)-cord(j,i-2,1))*(cord(j-2,i,2)-cord(j+2,i,2))
---------     temp(j-2:j+2,i-2:i+2) = (temp(j-2:j+2,i-2:i+2)-heat_latent*area_heating/area_cooling/1000./25)
--------+     area_cooling=(cord(j,i+3,1)-cord(j,i-3,1))*(cord(j-3,i,2)-cord(j+3,i,2))
--------+     print*, area_cooling,area_heating
--------+     !temp(j-3:j+3,i-3:i+3) = (temp(j-3:j+3,i-3:i+3)-heat_latent*area_heating/area_cooling/1000./49)
--------      
---------     nodes=0
--------    endif
-------- end do
-------- end do
--------diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/functions.f90
----------- a/src/functions.f90	Sat Feb 17 22:10:21 2018 +0800
--------+++ b/src/functions.f90	Tue Mar 06 12:18:04 2018 +0800
--------@@ -78,6 +78,19 @@
-------+ ! a2 = s21 + s22*x + s23*y
-------++
-------+ !
-------+ ! solve for x and y
-------+ subroutine bar2xy(ba1, ba2, shp, x, y)
-------+diff --git a/src/euler2bar.f90 b/src/euler2bar.f90
-------+index 353d2ec..ebca726 100644
-------+--- a/src/euler2bar.f90
-------++++ b/src/euler2bar.f90
-------+@@ -55,8 +55,8 @@ do j = 1, nz-1
-------+         if(inc .eq. 1) then
-------+             ! If the marker is found, that means its current element is
-------+             ! to far away from its original element
-------+-            write(msg,*) 'Found at (i,j)', i, j, ' Might need more frequent remeshing?'
-------+-            call SysMsg(msg)
-------++            !!!write(msg,*) 'Found at (i,j)', i, j, ' Might need more frequent remeshing?'
-------++            !!!call SysMsg(msg)
-------+             ii = i
-------+             jj = j
-------+             return
-------+diff --git a/src/fl_move.f90 b/src/fl_move.f90
-------+index 7e3dbda..4d658c6 100644
-------+--- a/src/fl_move.f90
-------++++ b/src/fl_move.f90
-------+@@ -262,7 +262,7 @@ subroutine resurface
-------+           ! extrusion, add an arc marker
-------+           n_to_add = ceiling(chgtopo2 / elz * kinc)
-------+           dz = chgtopo2 / elz / (n_to_add+1)
-------+-          print *, 'add arc', i, chgtopo2, elz, n_to_add, dz
-------++          !print *, 'add arc', i, chgtopo2, elz, n_to_add, dz
-------+           do ii = 1, n_to_add
-------+               call add_marker_at_top(i, dz*ii, elz, karc1, nmarkers)
-------+           enddo
-------+diff --git a/src/functions.f90 b/src/functions.f90
-------+index 0dd4192..c530044 100644
-------+--- a/src/functions.f90
-------++++ b/src/functions.f90
-------+@@ -78,6 +78,19 @@ end function stressII
-------  
-------  
-------  !==================================================
-------@@ -1435,59 +172,70 @@ diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/functions.f90
------- +end subroutine eigen2x2
------- +
------- +
--------+  !==================================================
-------++!==================================================
-------  subroutine SysMsg( message )
-------  include 'precision.inc'
-------  include 'params.inc'
--------diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/newphase2marker.f90
----------- a/src/newphase2marker.f90	Sat Feb 17 22:10:21 2018 +0800
--------+++ b/src/newphase2marker.f90	Tue Mar 06 12:18:04 2018 +0800
--------@@ -39,7 +39,6 @@
-------- 
-------- integer ichanged(100*mnx), jchanged(100*mnx)
-------- integer kph(1)
---------!real heat_latent
-------- dimension ratio(20)
-------- 
-------- ! max. depth (m) of eclogite phase transition
--------@@ -60,7 +59,6 @@
-------- !real*8, parameter :: tshydmant
-------+diff --git a/src/newphase2marker.f90 b/src/newphase2marker.f90
-------+index 845d619..8e2be58 100644
-------+--- a/src/newphase2marker.f90
-------++++ b/src/newphase2marker.f90
-------+@@ -16,14 +16,14 @@ do kk = 1 , nmarkers
-------  
-------+     if(j>=j1 .and. j<=j2 .and. i>=i1 .and. i<=i2) then
-------+         nphase_counter(mark(kk)%phase,j,i) = nphase_counter(mark(kk)%phase,j,i) - 1
-------+-        iphase(j,i) = iph
-------+         mark(kk)%phase = iph
-------+         nphase_counter(iph,j,i) = nphase_counter(iph,j,i) + 1
-------+     endif
-------+ enddo
-------  
---------!heat_latent=7.e6
-------- print*, 'do newphase2markers'
-------+-phase_ratio(:,j,i) = 0.d0
-------+-phase_ratio(iph,j,i) = 1.d0
-------++iphase(j1:j2,i1:i2) = iph
-------++phase_ratio(:,j1:j2,i1:i2) = 0.d0
-------++phase_ratio(iph,j1:j2,i1:i2) = 1.d0
-------  
-------+ return
-------+ end subroutine newphase2marker
-------+@@ -45,6 +45,7 @@ dimension ratio(20)
-------+ real*8, parameter :: max_basalt_depth = 150.e3
-------+ ! min. temperature (C) of eclogite phase transition
-------+ real*8, parameter :: min_eclogite_temp = 500.
-------++real*8, parameter :: min_eclogite_depth = 20e3
-------+ real*8, parameter :: mantle_density = 3000.
-------  
--------@@ -94,7 +92,7 @@
-------+ ! temperature (C) of serpentine phase transition
-------+@@ -85,7 +86,7 @@ andesitic_melt_vol(1:nx-1) = 0
-------  nchanged = 0
-------  
-------  
------- -!$OMP parallel private(kk,i,j,k,n,tmpr,depth,iph,press,jbelow,trpres,trpres2,kinc,quad_area)
------- +!$OMP parallel private(kk,i,j,k,n,tmpr,depth,iph,press,jbelow,trpres,trpres2,kinc,quad_area,yy)
-------  !$OMP do schedule(guided)
-------- 
-------  do kk = 1 , nmarkers
--------@@ -107,10 +105,17 @@
-------+     if (mark(kk)%dead.eq.0) cycle
-------+@@ -96,10 +97,17 @@ do kk = 1 , nmarkers
-------      j = mod((n - k) / 2, nz-1) + 1
-------      i = (n - k) / 2 / (nz - 1) + 1
-------  
------- -    tmpr = 0.25*(temp(j,i)+temp(j+1,i)+temp(j,i+1)+temp(j+1,i+1))
------- +    if (k .eq. 1) then
--------+       yy = cord(j,i,2)*mark(kk)%a1 + cord(j+1,i,2)*mark(kk)%a2 +cord(j,i+1,2)*(1-mark(kk)%a1-mark(kk)%a2)
--------+       tmpr = temp(j,i)*mark(kk)%a1 + temp(j+1,i)*mark(kk)%a2 +temp(j,i+1)*(1-mark(kk)%a1-mark(kk)%a2)
-------++       yy = cord(j,i,2)*mark(kk)%a1 + cord(j+1,i,2)*mark(kk)%a2 + cord(j,i+1,2)*(1-mark(kk)%a1-mark(kk)%a2)
-------++       tmpr = temp(j,i)*mark(kk)%a1 + temp(j+1,i)*mark(kk)%a2 + temp(j,i+1)*(1-mark(kk)%a1-mark(kk)%a2)
------- +    else
--------+       yy = cord(j,i+1,2)*mark(kk)%a1 + cord(j+1,i,2)*mark(kk)%a2 +cord(j+1,i+1,2)*(1-mark(kk)%a1-mark(kk)%a2)
--------+       tmpr = temp(j,i+1)*mark(kk)%a1 + temp(j+1,i)*mark(kk)%a2 +temp(j+1,i+1)*(1-mark(kk)%a1-mark(kk)%a2)
-------++       yy = cord(j,i+1,2)*mark(kk)%a1 + cord(j+1,i,2)*mark(kk)%a2 + cord(j+1,i+1,2)*(1-mark(kk)%a1-mark(kk)%a2)
-------++       tmpr = temp(j,i+1)*mark(kk)%a1 + temp(j+1,i)*mark(kk)%a2 + temp(j+1,i+1)*(1-mark(kk)%a1-mark(kk)%a2)
------- +    endif
------- +
-------  
-------      ! depth below the surface in m
------- -    depth = (cord(1,i,2) - 0.5*(cord(j,i,2)+cord(j+1,i,2)))
--------+    depth = -yy
-------++    depth = 0.5*(cord(1,i,2)+cord(1,i+1,2)) - yy
-------  
-------      ! # of markers inside quad
-------      kinc = sum(nphase_counter(:,j,i))
--------@@ -120,7 +125,7 @@
-------+@@ -109,7 +117,7 @@ do kk = 1 , nmarkers
-------  
-------      ! If location of this element is too deep, this marker is already
-------      ! too deep in the mantle, where there is no significant phase change.
-------@@ -1496,209 +244,18 @@ diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/newphase2marker.f90
-------  
-------      iph = mark(kk)%phase
-------  
--------@@ -160,7 +165,7 @@
--------         !    mark(kk)%phase = kweakmc
--------         !endif
-------- 
---------    case (kmant1)
--------+    case (kmant1, kmant2)
--------         ! subuducted oceanic crust below mantle, mantle is serpentinized
--------         if(depth > max_basalt_depth) cycle
--------         ! Phase diagram taken from Ulmer and Trommsdorff, Nature, 1995
--------@@ -204,7 +209,7 @@
--------         ! Phase diagram taken from Ulmer and Trommsdorff, Nature, 1995
--------         ! Fixed points (730 C, 2.1 GPa) (500 C, 7.5 GPa)
--------         trpres = 2.1e9 + (7.5e9 - 2.1e9) * (tmpr - 730.) / (500. - 730.)
---------        ! = Fixed pointsting faults (730 C, 2.1 GPa) (650 C, 0.2 GPa)
--------+        ! Fixed points (730 C, 2.1 GPa) (650 C, 0.2 GPa)
--------         trpres2 = 2.1e9 + (0.2e9 - 2.1e9) * (tmpr - 730.) / (650. - 730.)
--------         press = mantle_density * g * depth
--------         if (tmpr < serpentine_temp .or. (press < trpres .and. press > trpres2)) cycle
--------@@ -229,14 +234,14 @@
--------         !$OMP end critical (change_phase1)
--------         mark(kk)%phase = kmetased
--------     case (khydmant)
---------        if (depth > -50e3)then
--------+        if (depth < 50.e3)then
--------             tshydmant=ts(khydmant)
--------         else
---------            tshydmant=(depth+50e3)*(180.)/(-50e3)+ts(khydmant)
--------+            tshydmant=(depth-50.e3)*(180.)/(50.e3)+ts(khydmant)
--------         endif
--------         if (tmpr > tshydmant) then
--------             ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
---------            quad_area = 1./area(j,i,1) + 1./area(j,i,2)
--------+            quad_area = 1./(area(j,i,1)+area(j,i,2))
--------             andesitic_melt_vol(i) = andesitic_melt_vol(i) + quad_area * vol_frac_melt / kinc
--------             !$OMP critical (change_phase1)
--------             nphase_counter(iph,j,i) = nphase_counter(iph,j,i) - 1
--------@@ -253,9 +258,7 @@
--------  
-------+@@ -230,7 +238,7 @@ do kk = 1 , nmarkers
-------+             ichanged(nchanged) = i
-------+             jchanged(nchanged) = j
-------+             !$OMP end critical (change_phase1)
-------+-            mark(kk)%phase = kmant1
-------++            mark(kk)%phase = kmant2
-------          endif
-------      end select
---------    if(nchanged >= 100*mnx) then
---------        stop 38
---------    end if
--------+    if(nchanged >= 100*mnx) stop 38
-------- enddo
-------- !$OMP end do
-------- !$OMP end parallel
--------diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/outflac.f90
----------- a/src/outflac.f90	Sat Feb 17 22:10:21 2018 +0800
--------+++ b/src/outflac.f90	Tue Mar 06 12:18:04 2018 +0800
--------@@ -101,7 +101,6 @@
--------     open (1,file='eII.0',access='direct',recl=nwords*kindr) 
--------     write (1,rec=nrec) De
--------     close (1)
---------endif
-------- 
--------     do i = 1, nx-1
--------         do j = 1, nz-1
--------@@ -112,6 +111,35 @@
--------     write (1,rec=nrec) De
--------     close (1)
-------- 
--------+    do i = 1, nx-1
--------+        do j = 1, nz-1
--------+            De(j,i) = real(strain(j,i,1))
--------+        end do
--------+    end do
--------+    open (1,file='exx.0',access='direct',recl=nwords*kindr) 
--------+    write (1,rec=nrec) De
--------+    close (1)
--------+
--------+    do i = 1, nx-1
--------+        do j = 1, nz-1
--------+            De(j,i) = real(strain(j,i,2))
--------+        end do
--------+    end do
--------+    open (1,file='ezz.0',access='direct',recl=nwords*kindr) 
--------+    write (1,rec=nrec) De
--------+    close (1)
--------+
--------+    do i = 1, nx-1
--------+        do j = 1, nz-1
--------+            De(j,i) = real(strain(j,i,3))
--------+        end do
--------+    end do
--------+    open (1,file='exz.0',access='direct',recl=nwords*kindr) 
--------+    write (1,rec=nrec) De
--------+    close (1)
--------+
--------+endif
--------+
-------- ! Density 
-------- if( io_mark.eq.1 ) then
--------    do i = 1, nx-1
--------
--------changeset:   524:edf727ed6d4b
--------tag:         tip
--------user:        chii <chiilee1995@gmail.com>
--------date:        Mon Mar 19 15:21:22 2018 +0800
--------summary:     no cooling in fl_therm.f90
--------
--------diff -r 0ad996b69eb4 -r edf727ed6d4b src/fl_therm.f90
----------- a/src/fl_therm.f90	Tue Mar 06 12:18:04 2018 +0800
--------+++ b/src/fl_therm.f90	Mon Mar 19 15:21:22 2018 +0800
--------@@ -11,7 +11,7 @@
-------- 
-------- heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
-------- MOR_heat = 0.     !9.e2
---------heat_latent =1.e4  !7.e6
--------+heat_latent =7.e3  !7.e6
-------- 
-------- ! real_area = 0.5* (1./area(n,t))
-------- ! Calculate Fluxes in every triangle
--------@@ -264,12 +264,6 @@
-------- !$OMP end do
-------- !$OMP end parallel
-------  
---------!MOR heating (chii)
---------temp(15:20,216:218) = temp(15:20,216:218) + MOR_heat/1000.
---------
---------!test
---------!meltingmarker(30,90,1)=10
---------
-------- !add temp for melting (chii)
-------- do j= 1,nz
-------- do i = 1,nx
--------@@ -297,10 +291,10 @@
--------           end if
--------         end do
-------- 
---------        print *,'p1=',i ,j1, cord(j1,i ,1)/1000,cord(j1,i ,2)
---------        print *,'p2=',i1,jm, cord(jm,i1,1)/1000,cord(jm,i1,2)
---------        print *,'p3=',i ,j2, cord(j2,i ,1)/1000,cord(j2,i ,2)
---------        print *,'p4=',i2,jm, cord(jm,i2,1)/1000,cord(jm,i2,2)
--------+        !print *,'p1=',i ,j1, cord(j1,i ,1)/1000,cord(j1,i ,2)
--------+        !print *,'p2=',i1,jm, cord(jm,i1,1)/1000,cord(jm,i1,2)
--------+        !print *,'p3=',i ,j2, cord(j2,i ,1)/1000,cord(j2,i ,2)
--------+        !print *,'p4=',i2,jm, cord(jm,i2,1)/1000,cord(jm,i2,2)
--------         nodes=0.
--------         
--------      if (modulo((j1+j2),2).eq.0) then
--------@@ -308,55 +302,35 @@
--------         do jj=1,j
--------         do ii= max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
--------                min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
---------        !do ii=1,nx
---------        !do jj=1,nz
---------          !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
---------              !ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
---------          nodes=nodes+1
---------          !end if 
--------+               nodes=nodes+1 
--------         end do
--------         end do   
--------         do jj=1,j
--------         do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
--------               min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
---------
---------
---------          !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
---------          !    ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
---------          temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,2)/kinc/1000./nodes))
---------          !temp(jj,ii)=2000.
---------          !end if 
--------+              temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
--------        end do
--------        end do
---------       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j1,i,2)-cord(j2,i,2)))/2
--------+       !area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j1,i,2)-cord(j2,i,2)))/2
--------   
--------      else
--------       do jj=1,j
--------       do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
--------             min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
---------
---------        !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1         .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
---------        !    ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
---------         nodes=nodes+1
---------        !end if 
--------+            nodes=nodes+1
--------       end do
--------       end do   
--------       do jj=1,j
--------       do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
--------             min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
---------
---------        !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1         .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
---------        !    ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
---------        temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
---------        !temp(jj,ii)=2000.
---------        !end if 
--------+            temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
--------       end do
--------       end do  
---------      area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j1,i,2)-cord(j2,i,2))+(cord(jm,i,1)-cord(jm+1,i,1))))/2    
--------+      !area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j1,i,2)-cord(j2,i,2))+(cord(jm,i,1)-cord(jm+1,i,1))))/2    
--------      end if
-------- 
---------     area_cooling=(cord(j,i+3,1)-cord(j,i-3,1))*(cord(j-3,i,2)-cord(j+3,i,2))
---------     print*, area_cooling,area_heating
--------+     !area_cooling=(cord(j,i+3,1)-cord(j,i-3,1))*(cord(j-3,i,2)-cord(j+3,i,2))
--------+     !print*, area_cooling,area_heating
--------      !temp(j-3:j+3,i-3:i+3) = (temp(j-3:j+3,i-3:i+3)-heat_latent*area_heating/area_cooling/1000./49)
--------      
--------    endif
--------
-------+diff --git a/src/rsflac.f90 b/src/rsflac.f90
-------+index 99a4751..57aee3a 100644
-------+--- a/src/rsflac.f90
-------++++ b/src/rsflac.f90
-------+@@ -226,7 +226,7 @@ do n = 1, nmarkers
-------+   
-------\ No newline at end of file
-------diff --git a/util/flac_gravity3.py b/util/flac_gravity3.py
-------index f1c249f..2d55442 100755
---------- a/util/flac_gravity3.py
-------+++ b/util/flac_gravity3.py
-------@@ -95,7 +95,7 @@ def compute_gravity(frame):
-------     px = np.linspace(xmin, xmax, num=5*fl.nx)
-------     # pz is a few km above the highest topography to avoid high frequency oscillation
-------     pz_height = max(0, np.max(zz)) + 4e3
--------    print 'gravity evaluated at %f km' % pz_height
-------+    print ('gravity evaluated at %f km' % pz_height)
-------     pz = np.ones(px.shape) * pz_height
------- 
-------     # original topography defined in px grid
------+Date:   Fri Oct 25 15:47:53 2019 +0800
-----+             !$OMP critical (change_phase1)
-----+             nphase_counter(iph,j,i) = nphase_counter(iph,j,i) - 1
-----+             nphase_counter(kmant1,j,i) = nphase_counter(kmant1,j,i) + 1
-----+@@ -239,6 +253,9 @@ do kk = 1 , nmarkers
-----+             jchanged(nchanged) = j
-----+             !$OMP end critical (change_phase1)
-----+             mark(kk)%phase = kmant2
-----++            !record the data for melting element(chii)
-----++            meltingmarker(j,i)=meltingmarker(j,i)+1
-----++            write(2,*) mark(kk)%ID, mark(kk)%x,mark(kk)%y,time/sec_year/1.e6,i,j,'3',depth
-----+         endif
-----+     end select
-----  
------+    Sysment adjusments from Eh Tan
------+    
------+    src/.. & util/..
-----+@@ -274,5 +291,8 @@ do k = 1, nchanged
-----  
-------== Code modification (checked-in but not public) ==
------ commit 89ab0eaa26ecdd95faa7f1a5cccb7d243a71d35f
------ Author: chiilee <blackdeviljuliet@gmail.com>
------ Date:   Thu Oct 24 16:32:04 2019 +0800
-----+ enddo
-----  
------     Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
-----++close(2)
----- +
------+== Code modification (not checked-in) ==
------
------
------== Code modification (checked-in but not public) ==
------commit d21e63ebbccca41124cf8f5278292855c1bf78b6
------Author: chiilee <blackdeviljuliet@gmail.com>
------Date:   Fri Oct 25 15:47:53 2019 +0800
------
------    Sysment adjusments from Eh Tan
------    
------    src/.. & util/..
------
------commit 89ab0eaa26ecdd95faa7f1a5cccb7d243a71d35f
------Author: chiilee <blackdeviljuliet@gmail.com>
------Date:   Thu Oct 24 16:32:04 2019 +0800
------
------    Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
-----++
-----+ return
-----+ end subroutine change_phase
-----+diff --git a/src/outflac.f90 b/src/outflac.f90
-----+index 10860b4..d185fe2 100644
-----+--- a/src/outflac.f90
-----++++ b/src/outflac.f90
-----+@@ -98,20 +98,48 @@ if( io_eII.eq.1 ) then
-----+             De(j,i) = real(strainII(j,i))
-----+         end do
-----+     end do
-----+-    open (1,file='eII.0',access='direct',recl=nwords*kindr) 
-----++    open (1,file='eII.0',access='direct',recl=nwords*kindr)
-----+     write (1,rec=nrec) De
-----+     close (1)
-----+-endif
-----+ 
-----+     do i = 1, nx-1
-----+         do j = 1, nz-1
-----+             De(j,i) = real(strainI(j,i))
-----+         end do
-----+     end do
-----+-    open (1,file='eI.0',access='direct',recl=nwords*kindr) 
-----++    open (1,file='eI.0',access='direct',recl=nwords*kindr)
-----+     write (1,rec=nrec) De
-----+     close (1)
-----+ 
-----++    do i = 1, nx-1
-----++        do j = 1, nz-1
-----++            De(j,i) = real(strain(j,i,1))
-----++        end do
-----++    end do
-----++    open (1,file='exx.0',access='direct',recl=nwords*kindr)
-----++    write (1,rec=nrec) De
-----++    close (1)
-----++
-----++    do i = 1, nx-1
-----++        do j = 1, nz-1
-----++            De(j,i) = real(strain(j,i,2))
-----++        end do
-----++    end do
-----++    open (1,file='ezz.0',access='direct',recl=nwords*kindr)
-----++    write (1,rec=nrec) De
-----++    close (1)
-----++
-----++    do i = 1, nx-1
-----++        do j = 1, nz-1
-----++            De(j,i) = real(strain(j,i,3))
-----++        end do
-----++    end do
-----++    open (1,file='exz.0',access='direct',recl=nwords*kindr)
-----++    write (1,rec=nrec) De
-----++    close (1)
-----++
-----++endif
-----++
-----+ ! Density 
-----+ if( io_mark.eq.1 ) then
-----+    do i = 1, nx-1
-----+@@ -124,6 +152,41 @@ if( io_mark.eq.1 ) then
-----+     close (1)
-----+ endif
-----+ 
-----++! Chamber (chii)
-----++if( io_mark.eq.1 ) then
-----++   do i = 1, nx-1
-----++   do j = 1, nz-1
-----++          De(j,i) = real(chamber(j,i))
-----++   enddo
-----++   enddo
-----++    open (1,file='chamber.0',access='direct',recl=nwords*kindr)
-----++    write (1,rec=nrec) De
-----++    close (1)
-----++endif
-----++
-----++! Countmarker (chii)
-----++if( io_mark.eq.1 ) then
-----++   do i = 1, nx-1
-----++   do j = 1, nz-1
-----++          De(j,i) = real(countmarker(j,i))
-----++   enddo
-----++   enddo
-----++    open (1,file='countmarker.0',access='direct',recl=nwords*kindr)
-----++    write (1,rec=nrec) De
-----++    close (1)
-----++endif
-----++
-----++! Meltingmarker (chii)
-----++if( io_mark.eq.1 ) then
-----++   do i = 1, nx-1
-----++   do j = 1, nz-1
-----++          De(j,i) = real(meltingmarker(j,i))
-----++   enddo
-----++   enddo
-----++    open (1,file='meltingmarker.0',access='direct',recl=nwords*kindr)
-----++    write (1,rec=nrec) De
-----++    close (1)
-----++endif
-----+ 
-----+ ! APS
-----+ if( io_aps.eq.1 ) then
-----+diff --git a/src/params.inc b/src/params.inc
-----+index cfde873..66d4231 100644
-----+--- a/src/params.inc
-----++++ b/src/params.inc
-----+@@ -35,7 +35,8 @@ common /rheol/ visc(20),den(20),alfa(20),beta(20),pln(20),acoef(20),eactiv(20),r
-----+      ltop(20),lbottom(20),lphase(20), &
-----+      imx1(20),imx2(20),imy1(20),imy2(20), &
-----+      itx1(20),itx2(20),ity1(20),ity2(20), &
-----+-     nphasl,nzone_marker,nmarkers, iint_marker,iint_tracer,nzone_tracer
-----++     nphasl,nzone_marker,nmarkers, iint_marker,iint_tracer,nzone_tracer, &
-----++     weaken_width, weaken_decay
-----+ 
-----+ common /inhomog/ ix1(50),ix2(50),iy1(50),iy2(50),inphase(50),igeom(50), &
-----+      xinitaps(50), inhom
-----+diff --git a/src/read_params.f90 b/src/read_params.f90
-----+index 7b1ca95..ef1c398 100644
-----+--- a/src/read_params.f90
-----++++ b/src/read_params.f90
-----+@@ -242,6 +242,10 @@ call AdvanceToNextInputLine( 4 )
-----+ read(4,*)igeotherm,g_x0,g_y0c, g_amplitude,g_width 
-----+ call AdvanceToNextInputLine( 4 )
-----+ read(4,*) ny_inject, nelem_inject, rate_inject 
-----++call AdvanceToNextInputLine( 4 )
-----++read(4,*) weaken_width
-----++call AdvanceToNextInputLine( 4 )
-----++read(4,*) weaken_decay
-----+ 
-----+ ! REMESHING
-----+ call AdvanceToNextInputLine( 4 )
-----+diff --git a/src/remesh.f90 b/src/remesh.f90
-----+index 8dd75d7..f851446 100644
-----+--- a/src/remesh.f90
-----++++ b/src/remesh.f90
-----+@@ -241,6 +241,12 @@ end do
-----+ dummy(1:nzt,1:nxt) = temp(1:nzt,1:nxt)
-----+ call rem_interpolate( dummy )
-----+ temp(1:nzt,1:nxt) = dummy(1:nzt,1:nxt)
-----++
-----++! Melting history (in nodes)(chii)
-----++dummy(1:nzt,1:nxt) = chamber(1:nzt,1:nxt)
-----++call rem_interpolate( dummy )
-----++chamber(1:nzt,1:nxt) = dummy(1:nzt,1:nxt)
-----++
-----+ deallocate( dummy )
-----+ 
-----+ ! Changing the temperature of left-/right- most elements
-----+diff --git a/src/rsflac.f90 b/src/rsflac.f90
-----+index 57aee3a..038c7a1 100644
-----+--- a/src/rsflac.f90
-----++++ b/src/rsflac.f90
-----+@@ -80,6 +80,10 @@ open (1,file='temp.rs',access='direct',recl=nwords*kindr)
-----+ read (1,rec=nrec) temp
-----+ close (1)
-----+ 
-----++!melting history (chii)
-----++open (1,file='chamber.rs',access='direct',recl=nwords*kindr)
-----++read (1,rec=nrec) chamber
-----++close (1)
-----+ 
-----+ ! 2-D (nx-1)*(nz-1) arrays - elements defined
-----+ allocate( dum2(nz-1,nx-1) )
-----+diff --git a/src/saveflac.f90 b/src/saveflac.f90
-----+index 47da06b..8bc634b 100644
-----+--- a/src/saveflac.f90
-----++++ b/src/saveflac.f90
-----+@@ -72,6 +72,10 @@ open (1,file
-----\ No newline at end of file
-----diff --git a/util/flac.py b/util/flac.py
-----index 73cf3ab..b23f459 100755
-------- a/util/flac.py
-----+++ b/util/flac.py
-----@@ -91,6 +91,33 @@ class Flac(object):
-----         self._reshape_nodal_fields(T)
-----         return T
----- 
-----+    def read_chamber(self, frame):
-----+        columns = 1
-----+        f = open('chamber.0')
-----+        offset = (frame-1) * columns * self.nelements * sizeoffloat
-----+        f.seek(offset)
-----+        chamber = self._read_data(f, columns, count=self.nelements)
-----+        self._reshape_elemental_fields(chamber)
-----+        return chamber
-----+
-----+
-----+    def read_countmarker(self, frame):
-----+        columns = 1
-----+        f = open('countmarker.0')
-----+        offset = (frame-1) * columns * self.nelements * sizeoffloat
-----+        f.seek(offset)
-----+        countmarker = self._read_data(f, columns, count=self.nelements)
-----+        self._reshape_elemental_fields(countmarker)
-----+        return countmarker
-----+
-----+    def read_meltingmarker(self, frame):
-----+        columns = 1
-----+        f = open('meltingmarker.0')
-----+        offset = (frame-1) * columns * self.nelements * sizeoffloat
-----+        f.seek(offset)
-----+        meltingmarker = self._read_data(f, columns, count=self.nelements)
-----+        self._reshape_elemental_fields(meltingmarker)
-----+        return meltingmarker
----- 
-----     def read_aps(self, frame):
-----         columns = 1
-----diff --git a/util/flac2vtk.py b/util/flac2vtk.py
-----index 1bd5abb..997842c 100755
-------- a/util/flac2vtk.py
-----+++ b/util/flac2vtk.py
-----@@ -66,6 +66,15 @@ def main(path, start=1, end=-1):
-----         a = fl.read_density(i)
-----         vts_dataarray(fvts, a.swapaxes(0,1), 'Density')
----- 
-----+        a = fl.read_chamber(i)
-----+        vts_dataarray(fvts, a.swapaxes(0,1), 'Melting history')
-----+
-----+        a = fl.read_countmarker(i)
-----+        vts_dataarray(fvts, a.swapaxes(0,1), 'Count of markers')
-----+
-----+        a = fl.read_meltingmarker(i)
-----+        vts_dataarray(fvts, a.swapaxes(0,1), 'Melting marker')
-----+
-----         exx, ezz, exz = fl.read_strain(i)
-----         e1 = compute_p_axis(exx, ezz, exz)
-----         vts_dataarray(fvts, e1.swapaxes(0,1), 'Strain 1-axis', 3)
-----diff --git a/util/flac_interpolate.py b/util/flac_interpolate.py
-----index 019a823..4a33fb5 100755
-------- a/util/flac_interpolate.py
-----+++ b/util/flac_interpolate.py
-----@@ -58,7 +58,7 @@ def interpolate(frame, field):
-----         ph = flac.nearest_neighbor_interpolation2d(mx, mz, mphase, x, z)
-----         f = ph.astype(np.float32)
-----     elif field in ('temperature', 'aps', 'density', 'eII', 'sII',
------                   'sxx', 'szz', 'sxz', 'srII', 'pres', 'diss', 'visc'):
-----+                   'sxx', 'szz', 'sxz', 'srII', 'pres', 'diss', 'visc','chamber'):
-----         # read field
-----         cf = getattr(fl, 'read_'+field)(frame)
-----         cx, cz = flac.elem_coord(xx, zz)
-----
-----
-----== Code modification (checked-in but not public) ==
---- commit 89669f030dd2388b8cfa151b1ba3196fff0808f4
---- Author: chiilee <blackdeviljuliet@gmail.com>
---- Date:   Fri Oct 25 17:22:48 2019 +0800
----@@ -3119,3 +48,5 @@ Author: chiilee <blackdeviljuliet@gmail.com>
---- Date:   Thu Oct 24 16:32:04 2019 +0800
---+@@ -267,25 +268,55 @@ hardn = 0
---+ do iph = 1, nphase
---+     if(phase_ratio(iph,j,i) .lt. 0.01) cycle
---  
----     Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
---+-    if(pls_curr < plstrain1(iph)) then
---+-        ! no weakening yet
---+-        f = fric1(iph)
---+-        c = cohesion1(iph)
---+-        d = dilat1(iph)
---+-        h = 0
---+-    else if (pls_curr < plstrain2(iph)) then
---+-        ! Find current properties from linear interpolation
---+-        dpl = (pls_curr - plstrain1(iph)) / (plstrain2(iph) - plstrain1(iph))
---+-        f =  fric1(iph) + (fric2(iph) - fric1(iph)) * dpl
---+-        d = dilat1(iph) + (dilat2(iph) - dilat1(iph)) * dpl
---+-        c = cohesion1(iph) + (cohesion2(iph) - cohesion1(iph)) * dpl
---+-        h = (cohesion2(iph) - cohesion1(iph)) / (plstrain2(iph) - plstrain1(iph))
---++    if (chamber(j,i) < ys_weaken_launch .or. time/sec_year/1.e6 < 3.) then
---++        if(pls_curr < plstrain1(iph)) then
---++            ! no weakening yet
---++            f = fric1(iph)
---++            c = cohesion1(iph)
---++            d = dilat1(iph)
---++            h = 0
---++        else if (pls_curr < plstrain2(iph)) then
---++            ! Find current properties from linear interpolation
---++            dpl = (pls_curr - plstrain1(iph)) / (plstrain2(iph) - plstrain1(iph))
---++            f = fric1(iph) + (fric2(iph) - fric1(iph)) * dpl
---++            d = dilat1(iph) + (dilat2(iph) - dilat1(iph)) * dpl
---++            c = cohesion1(iph) + (cohesion2(iph) - cohesion1(iph)) * dpl
---++            h = (cohesion2(iph) - cohesion1(iph)) / (plstrain2(iph) - plstrain1(iph))
---++        else
---++            ! saturated weakening
---++            f = fric2(iph)
---++            c = cohesion2(iph)
---++            d = dilat2(iph)
---++            h = 0
---++        endif
---++    !weakening due to melting (chii)
---+     else
---+-        ! saturated weakening
---+-        f = fric2(iph)
---+-        c = cohesion2(iph)
---+-        d = dilat2(iph)
---+-        h = 0
---++        f1 = atan(tan(fric1(iph)*pi/180)*ys_weaken_ratio)*180/pi
---++        f2 = atan(tan(fric2(iph)*pi/180)*ys_weaken_ratio)*180/pi
---++        c1=cohesion1(iph)
---++        c2=cohesion2(iph)
--- +
----+== Code modification (not checked-in) ==
----
----
----== Code modification (checked-in but not public) ==
----commit c557d25b18149eab47ef7f76177b9524ea5d47b9
----Author: chiilee <blackdeviljuliet@gmail.com>
----Date:   Mon Oct 28 12:05:30 2019 +0800
----
----    Calculate the melting markers and melting vol. of rocks
----    
----    <src/newphase2marker> find melting markers based on the melting conditions of hydrated mantle
----                          print out the position of melting markers
----    <src/fl_therm> calculate the volume melting ratio in each elements
----                   melting vol. decay
----    <src/arrays> new arrays: chamber(melting vol.), meltingmarker, countmarker
----    <src/matprop> marker will not be melted below 200km
----    <src/params.inc><src/read_params> read new parameter: LVW width, melting vol. decay
----    <src/remesh> do chamber remesh
----    <src/outflac><src/saveflac><src/rsflac> save/read data melting marker and melt vol.
----    <util/flac> functions for reading new arrays
----    <util/flac2vtk> make vtk data for new arrays
----    <util/flac_interpolate> do chamber interploate
----
----commit 89669f030dd2388b8cfa151b1ba3196fff0808f4
----Author: chiilee <blackdeviljuliet@gmail.com>
----Date:   Fri Oct 25 17:22:48 2019 +0800
----
----    Add new boundary condition & MOR on the right
----    
----    <src/fl_therm> MOR: high temperature on the right side
----    <src/matprops> MOR: low viscosity on the right side
----                   Calculation method of mantle viscosity for 410 and 660
----    <src/init_bc> Allow velocity to occur in the middle of the model
----
----commit d21e63ebbccca41124cf8f5278292855c1bf78b6
----Author: chiilee <blackdeviljuliet@gmail.com>
----Date:   Fri Oct 25 15:47:53 2019 +0800
----
----    Sysment adjusments from Eh Tan
----    
----    src/.. & util/..
----
----commit 89ab0eaa26ecdd95faa7f1a5cccb7d243a71d35f
----Author: chiilee <blackdeviljuliet@gmail.com>
----Date:   Thu Oct 24 16:32:04 2019 +0800
----
----    Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
---++        if(pls_curr < plstrain1(iph)) then
---++            ! no weakening yet
---++            f = f1
---++            c = c1
---++            d = dilat1(iph)
---++            h = 0
---++        else if (pls_curr < plstrain2(iph)) then
---++            ! Find current properties from linear interpolation
---++            dpl = (pls_curr - plstrain1(iph)) / (plstrain2(iph) - plstrain1(iph))
---++            f =  f1 + f2 - f1 * dpl
---++            d = dilat1(iph) + (dilat2(iph) - dilat1(iph)) * dpl
---++            c = c1 + (c2 - c1)* dpl
---++            h = (c2 - c1) / (plstrain2(iph) -plstrain1(iph))
---++        else
---++            ! saturated weakening
---++            f = f2
---++            c = c2
---++            d = dilat2
---\ No newline at end of file
---
---
---== Code modification (checked-in but not public) ==
-- commit ec93779480556830584136bfb9f48d2627f08a6f
-- Author: chiilee <blackdeviljuliet@gmail.com>
-- Date:   Mon Oct 28 13:57:29 2019 +0800
--@@ -3531,3 +65,5 @@ Author: chiilee <blackdeviljuliet@gmail.com>
-- Date:   Thu Oct 24 16:32:04 2019 +0800
-- 
--     Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
--+
--+== Code modification (not checked-in) ==
--
--
--== Code modification (checked-in but not public) ==
- commit 2e555b1806c5bc37d20e5250260b5be548ebf33d
- Author: chiilee <blackdeviljuliet@gmail.com>
- Date:   Mon Oct 28 14:12:51 2019 +0800
-@@ -3627,3 +76,5 @@ Author: chiilee <blackdeviljuliet@gmail.com>
- Date:   Thu Oct 24 16:32:04 2019 +0800
- 
-     Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
-+
-+== Code modification (not checked-in) ==
-
-
-== Code modification (checked-in but not public) ==
 commit d9c5d1f77cdb21ac5c46f54afa4072151e02be8e
 Author: chiilee <blackdeviljuliet@gmail.com>
 Date:   Mon Oct 28 14:53:56 2019 +0800
@@ -3798,3 +95,5 @@ Author: chiilee <blackdeviljuliet@gmail.com>
 Date:   Thu Oct 24 16:32:04 2019 +0800
 
     Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
+
+== Code modification (not checked-in) ==


== Code modification (checked-in but not public) ==
commit dab1914766f697482523d365cb727737bb8598a2
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 16:15:13 2019 +0800

    Set the element for melting as a constant
    
    Avoid sudden generation of basalt due to mesh moving up
    <src/newphase2marker> set the element for melting as a constant

commit 03ea71ee6cbe0aa06de43813d579bf034ceb9f30
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 16:07:45 2019 +0800

    Add a new phase (OC3)
    
    to separate the overriding crust, downgoing crust and crust of back-arc basin
    <src/phase.inc> new phase: ocean3
    <src/newphase2markers><src/init_stress> adjustment related to new phase (ocean3)

commit d9c5d1f77cdb21ac5c46f54afa4072151e02be8e
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 14:53:56 2019 +0800

    Consider partial melting caused by eclogites and sediments
    
    <src/newphase2marker> partial melting caused by eclogites (Yaxley and Green, 1994)
                          partial melting caused by sediments (Nichols et al., 1994)
                          print out the position of melting markers
    <src/phase.inc> new phase: sediment3, dehydrated eclogite

commit 2e555b1806c5bc37d20e5250260b5be548ebf33d
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 14:12:51 2019 +0800

    Fixed bugs of reading parameters & yield stress decrease according to melt vol.
    
    <src/rh_plastic> yield stress decrease according to melt vol.
    <src/params.inc><src/read_params> read new parameter: weaken_max, weaken_launch, weaken_saturated, ys_weaken_launch, ys_weaken_ratio

commit ec93779480556830584136bfb9f48d2627f08a6f
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 13:57:29 2019 +0800

    Viscosity decrease according to melt vol.
    
    <src/matprop>  viscosity decrease according to melt vol.

commit c557d25b18149eab47ef7f76177b9524ea5d47b9
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Mon Oct 28 12:05:30 2019 +0800

    Calculate the melting markers and melting vol. of rocks
    
    <src/newphase2marker> find melting markers based on the melting conditions of hydrated mantle
                          print out the position of melting markers
    <src/fl_therm> calculate the volume melting ratio in each elements
                   melting vol. decay
    <src/arrays> new arrays: chamber(melting vol.), meltingmarker, countmarker
    <src/matprop> marker will not be melted below 200km
    <src/params.inc><src/read_params> read new parameter: LVW width, melting vol. decay
    <src/remesh> do chamber remesh
    <src/outflac><src/saveflac><src/rsflac> save/read data melting marker and melt vol.
    <util/flac> functions for reading new arrays
    <util/flac2vtk> make vtk data for new arrays
    <util/flac_interpolate> do chamber interploate

commit 89669f030dd2388b8cfa151b1ba3196fff0808f4
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Fri Oct 25 17:22:48 2019 +0800

    Add new boundary condition & MOR on the right
    
    <src/fl_therm> MOR: high temperature on the right side
    <src/matprops> MOR: low viscosity on the right side
                   Calculation method of mantle viscosity for 410 and 660
    <src/init_bc> Allow velocity to occur in the middle of the model

commit d21e63ebbccca41124cf8f5278292855c1bf78b6
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Fri Oct 25 15:47:53 2019 +0800

    Sysment adjusments from Eh Tan
    
    src/.. & util/..

commit 89ab0eaa26ecdd95faa7f1a5cccb7d243a71d35f
Author: chiilee <blackdeviljuliet@gmail.com>
Date:   Thu Oct 24 16:32:04 2019 +0800

    Copy from version dbc0a0c which is published bt Tan Eh. (https://bitbucket.org/tan2/flac/src/default)
