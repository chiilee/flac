Flags used to compile the code:
   CXX=g++ opt= openmp=
   PATH=/home/chiilee/anaconda2/bin:/usr/bin:/usr/sbin:/usr/lib64/qt-3.3/bin:/opt/octave/bin:/cluster/intel/composer_xe_2013.1.117/bin/intel64:/cluster/intel/composer_xe_2013.1.117/mpirt/bin/intel64:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/cluster/mpich2/bin:/home/tan2/opt/bin:/home/chiilee/bin:/home/tan2/opt/bin
   LD_LIBRARY_PATH=/opt/octave/lib/octave/4.0.3:/cluster/intel/composer_xe_2013.1.117/compiler/lib/intel64:/opt/intel/mic/coi/host-linux-release/lib:/opt/intel/mic/myo/lib:/cluster/intel/composer_xe_2013.1.117/mpirt/lib/intel64:/cluster/intel/composer_xe_2013.1.117/ipp/../compiler/lib/intel64:/cluster/intel/composer_xe_2013.1.117/ipp/lib/intel64:/cluster/intel/composer_xe_2013.1.117/compiler/lib/intel64:/cluster/intel/composer_xe_2013.1.117/mkl/lib/intel64:/cluster/intel/composer_xe_2013.1.117/tbb/lib/intel64:/cluster/intel/mkl/lib/intel64:/cluster/intel/lib/intel64


==== Summary of the code ====
parent: 524:edf727ed6d4b tip
 no cooling in fl_therm.f90
branch: default
commit: 6 modified, 183 unknown
update: (current)


== Code modification (not checked-in) ==
diff -r edf727ed6d4b src/arrays.f90
--- a/src/arrays.f90	Mon Mar 19 15:21:22 2018 +0800
+++ b/src/arrays.f90	Tue Apr 10 07:43:09 2018 +0800
@@ -1,4 +1,4 @@
-! -*- F90 -*-
+!-*- F90 -*-
 
 module arrays
   implicit none
@@ -13,7 +13,7 @@
   ! temporary array
   real*8, pointer, save :: junk2(:,:)
   !array for arc melting
-  real*8, pointer, save :: meltingmarker(:,:,:)
+  real*8, pointer, save :: meltingmarker(:,:,:),chamber(:,:)
 contains
 
   subroutine allocate_arrays(nz, nx)
@@ -38,6 +38,7 @@
 
     allocate(junk2(nz, nx))
     allocate(meltingmarker(nz, nx, 2))
+    allocate(chamber(nz, nx))
 
   end subroutine allocate_arrays
 
diff -r edf727ed6d4b src/fl_therm.f90
--- a/src/fl_therm.f90	Mon Mar 19 15:21:22 2018 +0800
+++ b/src/fl_therm.f90	Tue Apr 10 07:43:09 2018 +0800
@@ -11,7 +11,7 @@
 
 heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
 MOR_heat = 0.     !9.e2
-heat_latent =7.e3  !7.e6
+heat_latent =1.e4 !7.e6
 
 ! real_area = 0.5* (1./area(n,t))
 ! Calculate Fluxes in every triangle
@@ -29,7 +29,6 @@
 !  | /         / |
 !  2         2---3
 
-print*, 'do fl_therm'
 ntherm = ntherm+1
 
 ! saving old temperature
@@ -265,11 +264,22 @@
 !$OMP end parallel
 
 !add temp for melting (chii)
-do j= 1,nz
+
+!test
+!meltingmarker(30,30,:)=4
+!meltingmarker(50,50,:)=6
+if (nloop .eq. 0) then
+   chamber(:,:)=0.
+endif
+
+print*,"time",time,"nloop",loop, "max melting history",maxval(chamber)
+
+
+do j = 1,nz
 do i = 1,nx
     if (meltingmarker(j,i,1) .ne. 0) then
-        kinc=meltingmarker(j,i,2)   
-        print* , i,j,kinc   
+        kinc = meltingmarker(j,i,2)   
+        !iprint*,i,j,meltingmarker(j,i,1),kinc   
 
         do jj=1,j
           depth = cord(1,i,2) - cord(jj,i,2)
@@ -299,36 +309,39 @@
         
      if (modulo((j1+j2),2).eq.0) then
 
-        do jj=1,j
+      do jj=1,j
         do ii= max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
                min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
-               nodes=nodes+1 
+           nodes=nodes+1
+           chamber(jj,ii)=chamber(jj,ii)+1.
         end do
-        end do   
-        do jj=1,j
+      end do   
+      do jj=1,j
         do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
               min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
-              temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
-       end do
-       end do
+           temp(jj,ii)=min(1100.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
+           !print *,"nodes=",nodes,"add=",heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes
+        end do
+      end do
        !area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j1,i,2)-cord(j2,i,2)))/2
   
      else
       do jj=1,j
-      do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
-            min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
-            nodes=nodes+1
-      end do
+        do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
+              min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
+           nodes=nodes+1
+           chamber(jj,ii)=chamber(jj,ii)+1.
+        end do
       end do   
       do jj=1,j
       do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
             min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
-            temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
+         temp(jj,ii)=min(1100.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
+         !print *,"nodes=",nodes,"add=",heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes
       end do
       end do  
       !area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j1,i,2)-cord(j2,i,2))+(cord(jm,i,1)-cord(jm+1,i,1))))/2    
      end if
-
      !area_cooling=(cord(j,i+3,1)-cord(j,i-3,1))*(cord(j-3,i,2)-cord(j+3,i,2))
      !print*, area_cooling,area_heating
      !temp(j-3:j+3,i-3:i+3) = (temp(j-3:j+3,i-3:i+3)-heat_latent*area_heating/area_cooling/1000./49)
diff -r edf727ed6d4b src/newphase2marker.f90
--- a/src/newphase2marker.f90	Mon Mar 19 15:21:22 2018 +0800
+++ b/src/newphase2marker.f90	Tue Apr 10 07:43:09 2018 +0800
@@ -59,9 +59,6 @@
 !real*8, parameter :: tshydmant
 
 
-print*, 'do newphase2markers'
-
-
 ! search the element for melting
 do jj = 1, nz-1
    ! search for crustal depth
diff -r edf727ed6d4b src/par.f90
--- a/src/par.f90	Mon Mar 19 15:21:22 2018 +0800
+++ b/src/par.f90	Tue Apr 10 07:43:09 2018 +0800
@@ -1,5 +1,3 @@
-! -*- F90 -*-
-
 program DREZINA
 use arrays
 include 'precision.inc'
diff -r edf727ed6d4b src/rsflac.f90
--- a/src/rsflac.f90	Mon Mar 19 15:21:22 2018 +0800
+++ b/src/rsflac.f90	Tue Apr 10 07:43:09 2018 +0800
@@ -80,6 +80,11 @@
 read (1,rec=nrec) temp
 close (1)
 
+!melting history
+open (1,file='chamber.rs',access='direct',recl=nwords*kindr)
+read (1,rec=nrec) chamber
+close (1)
+
 
 ! 2-D (nx-1)*(nz-1) arrays - elements defined
 allocate( dum2(nz-1,nx-1) )
@@ -118,6 +123,7 @@
 deallocate( dum2 )
 
 
+
 if (iint_marker.eq.1) then
 
 
diff -r edf727ed6d4b src/saveflac.f90
--- a/src/saveflac.f90	Mon Mar 19 15:21:22 2018 +0800
+++ b/src/saveflac.f90	Tue Apr 10 07:43:09 2018 +0800
@@ -49,7 +49,6 @@
 write (1,rec=nrec) vel
 close (1)
 
-
 ! Strain
 nwords = 3*(nz-1)*(nx-1)
 open (1,file='strain.rs',access='direct',recl=nwords*kindr) 
@@ -72,6 +71,10 @@
 write (1,rec=nrec) temp
 close (1)
 
+!melting history(chii)
+open (1,file='chamber.rs',access='direct',recl=nwords*kindr)
+write (1,rec=nrec) chamber
+close (1)
 
 ! 2-D (nx-1)*(nz-1) arrays - elements defined
 allocate( dum2(nz-1,nx-1) )


== Code modification (checked-in but not public) ==
changeset:   518:ae5fa0fdac1d
user:        chii <chiilee1995@gmail.com>
date:        Mon Jan 22 15:26:08 2018 +0800
summary:     heat due to the magma beneath the src (heat only near the suface)

diff -r ebf9b25e80ad -r ae5fa0fdac1d src/arrays.f90
--- a/src/arrays.f90	Fri Aug 04 09:34:21 2017 +0800
+++ b/src/arrays.f90	Mon Jan 22 15:26:08 2018 +0800
@@ -13,7 +13,8 @@
   ! temporary array
   real*8, pointer, save :: junk2(:,:)
 
-
+  !array for arc melting
+  real*8, pointer, save :: meltingmarker(:,:)
 contains
 
   subroutine allocate_arrays(nz, nx)
@@ -37,6 +38,7 @@
     allocate(ncod(nz, nx, 2))
 
     allocate(junk2(nz, nx))
+    allocate(meltingmarker(10000000,4))
 
   end subroutine allocate_arrays
 
diff -r ebf9b25e80ad -r ae5fa0fdac1d src/fl_therm.f90
--- a/src/fl_therm.f90	Fri Aug 04 09:34:21 2017 +0800
+++ b/src/fl_therm.f90	Mon Jan 22 15:26:08 2018 +0800
@@ -9,7 +9,9 @@
 
 dimension flux(mnz,mnx,2,2), add_source(mnz,mnx)
 
-heat_latent_magma = 4.2d5  ! J/kg, latent heat of freezing magma
+heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
+MOR_heat = 0.     !9.e2
+heat_latent = 5.e4   !7.e6
 
 ! real_area = 0.5* (1./area(n,t))
 ! Calculate Fluxes in every triangle
@@ -27,7 +29,7 @@
 !  | /         / |
 !  2         2---3
 
-
+print*, 'do fl_therm'
 ntherm = ntherm+1
 
 ! saving old temperature
@@ -48,12 +50,12 @@
 !$OMP                  qs,real_area13,area_n,rhs)
 !$OMP do
 do i = 1,nx-1
-    j = 1  ! top
+    j = 2  ! top
     !iph = iphase(j,i)
     cp_eff = Eff_cp( j,i )
 
     ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
-    quad_area = 1./(area(j,i,1)+area(j,i,2))
+    quad_area = 1./area(j,i,1) + 1./area(j,i,2)
 
     temp(j,i  ) = temp(j,i  ) + andesitic_melt_vol(i  ) * heat_latent_magma / quad_area / cp_eff
     temp(j,i+1) = temp(j,i+1) + andesitic_melt_vol(i+1) * heat_latent_magma / quad_area / cp_eff
@@ -262,9 +264,28 @@
 !$OMP end do
 !$OMP end parallel
 
+!MOR heating
+temp(15:20,216:218) = temp(15:20,216:218) + MOR_heat/1000.
+
+!add temp for melting
+do kk= 1,nmarkers
+   !if (kk==2)then
+   !   print*,'loop'
+   !end if
+   if( meltingmarker(kk,3).eq.1) then
+        i=meltingmarker(kk,1)
+        j=meltingmarker(kk,2)
+        kinc=meltingmarker(kk,4)
+        !temp(2:j,i) = 2000.
+        !print*,'threm: kk=',kk,'  i=',i,'  j=',j ,' kinc=', kinc
+        temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
+        temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
+   endif
+end do
+
+
 time_t = time
 
-
 ! HOOK
 ! Intrusions - see user_ab.f90
 if( if_intrus.eq.1 ) call MakeIntrusions
diff -r ebf9b25e80ad -r ae5fa0fdac1d src/init_bc.f90
--- a/src/init_bc.f90	Fri Aug 04 09:34:21 2017 +0800
+++ b/src/init_bc.f90	Mon Jan 22 15:26:08 2018 +0800
@@ -151,8 +151,10 @@
 
               if ((nbc(i).eq.1.or.nbc(i).eq.10).and.bca(i).lt.0) then
                   incoming_right = 1
+ 
               endif
           enddo
+         print*,incoming_right
       endif
       !-------------------------------------------------------------
       !        top
@@ -179,6 +181,36 @@
 
           enddo
       endif
+      !-------------------------------------------------------------
+      !        middel
+      !-------------------------------------------------------------
+
+      if ( nofside(i) .eq. 5 ) then
+          
+          do mid_nx=190,195  ! where velocity set on
+            x1 = cord ( nbc1(i),mid_nx, 2)
+            x2 = cord ( nbc2(i),mid_nx, 2)
+
+             do n = 1,ndbc
+                 numbp = n + nbc1(i) - 1
+                 x  = (cord (numbp,nx,2) - x1)/(x2-x1)
+ 
+                 if (nbc(i).eq.1.or.nbc(i).eq.10.or.nbc(i).eq.30)  &
+                      call velbc_mid (i,numbp,x,mid_nx)
+ 
+                 if (nbc(i).eq.2.or.nbc(i).eq. 20.or.nbc(i).eq.40) then
+                     nnop = nnop + 1
+                     numbp1 = numbp + 1
+                     xn = (cord (numbp1,nx,2) - x1)/(x2-x1)
+                     xa = 0.5 * (x+xn)
+                     call stressbc (i,nnop,numbp,numbp1,xa)
+                 endif
+             enddo
+ 
+         enddo
+      endif
+  
+
 
       ! viscosity-dependent velocity profile
       if (nbc(i).eq.50) call velbc_visc(i)
@@ -313,6 +345,67 @@
   return
 end subroutine velbc
 
+subroutine velbc_mid (i,numbp,x,mid_nx)
+
+  use arrays
+  include 'precision.inc'
+  include 'arrays.inc'
+  include 'params.inc'
+
+  pi2 = 2. * 3.14159
+
+  fun =  bca(i) + bcb(i)*x + bcc(i)*x*x   &
+       + (bcd(i)*cos (pi2*bce(i)*x) + bcf(i)*sin (pi2*bcg(i)*x))    &
+       *exp(-((x-bci(i))*bch(i))**2)
+
+  if (nofside(i).eq.1) then
+      ii1 = 1
+      jj1 = numbp
+  endif
+  if (nofside(i).eq.2) then
+      ii1 = numbp
+      jj1 = nz
+  endif
+  if (nofside(i).eq.3) then
+      ii1 = nx
+      jj1 = numbp
+  endif
+  if (nofside(i).eq.4) then
+      ii1 = numbp
+      jj1 = 1
+  endif
+  if (nofside(i).eq.5) then
+      ii1= mid_nx
+      jj1= numbp
+  endif
+  ! - x component
+  if (nbc(i) .eq. 10 ) then
+      ncod(jj1,ii1,1) = 1
+      if (abs(bc(jj1,ii1,1)).gt.0.) then
+          fun = bc(jj1,ii1,1)
+      endif
+      bc(jj1,ii1,1) = fun
+  endif
+
+  ! - z component
+  if (nbc(i) .eq. 1 ) then
+      ncod(jj1,ii1,2) = 1
+      bc  (jj1,ii1,2) = fun
+      !       write(*,*) ncod(jj1,ii1,2),bc(jj1,ii1,2)
+  endif
+
+  ! - y component
+
+  !            if (nbc(i) .eq. 30 ) then
+  !       ncod(numbp,3) = 1
+  !       bc  (numbp,3) = fun
+  !        write(*,*) numbp,ncod(numbp,3),bc(numbp,3)
+  !             endif
+
+  return
+end subroutine velbc_mid
+
+
 
 subroutine velbc_visc(i)
 
diff -r ebf9b25e80ad -r ae5fa0fdac1d src/matprops.f90
--- a/src/matprops.f90	Fri Aug 04 09:34:21 2017 +0800
+++ b/src/matprops.f90	Mon Jan 22 15:26:08 2018 +0800
@@ -226,10 +226,10 @@
 if (zcord < -660e3) then
     ! T-dep. viscosity
     ! eta=1e22 when T=1330 Celsius, inc. 10x when T is 200 deg lower
-    Eff_visc = 1e22 * exp( -0.0115 * (tmpr - 1330))
+    Eff_visc = 1e22 * exp( -0.0110 * (tmpr - 1330))
     return
 elseif (zcord < -410e3) then
-    Eff_visc = 1e21 * exp( -0.0115 * (tmpr - 1330))
+    Eff_visc = 1e20 * exp( -0.0110 * (tmpr - 1330))
     return
 endif
 
diff -r ebf9b25e80ad -r ae5fa0fdac1d src/newphase2marker.f90
--- a/src/newphase2marker.f90	Fri Aug 04 09:34:21 2017 +0800
+++ b/src/newphase2marker.f90	Mon Jan 22 15:26:08 2018 +0800
@@ -13,13 +13,13 @@
     k = mod(n - 1, 2) + 1
     j = mod((n - k) / 2, nz-1) + 1
     i = (n - k) / 2 / (nz - 1) + 1
-
+    
     if(j>=j1 .and. j<=j2 .and. i>=i1 .and. i<=i2) then
         nphase_counter(mark(kk)%phase,j,i) = nphase_counter(mark(kk)%phase,j,i) - 1
         iphase(j,i) = iph
         mark(kk)%phase = iph
         nphase_counter(iph,j,i) = nphase_counter(iph,j,i) + 1
-    endif
+    endif 
 enddo
 
 phase_ratio(:,j,i) = 0.d0
@@ -39,6 +39,7 @@
 
 integer ichanged(100*mnx), jchanged(100*mnx)
 integer kph(1)
+!real heat_latent
 dimension ratio(20)
 
 ! max. depth (m) of eclogite phase transition
@@ -49,13 +50,16 @@
 
 ! temperature (C) of serpentine phase transition
 real*8, parameter :: serpentine_temp = 550.
-
+!by the deep-penetrating faults
 ! temperature (C) and depth (m) of 10% partial melting of upper mantle.
 real*8, parameter :: partial_melt_temp = 600.
 !real*8, parameter :: partial_melt_depth = -70.e3
 ! thickness of new crust
 real*8, parameter :: new_crust_thickness = 7.e3
 
+!heat_latent=7.e6
+print*, 'do newphase2markers'
+
 
 ! search the element for melting
 do jj = 1, nz-1
@@ -88,6 +92,7 @@
 !$OMP parallel private(kk,i,j,k,n,tmpr,depth,iph,press,jbelow,trpres,trpres2,kinc,quad_area)
 !$OMP do schedule(guided)
 do kk = 1 , nmarkers
+ 
     if (mark(kk)%dead.eq.0) cycle
 
     ! from ntriag, get element number
@@ -103,6 +108,15 @@
 
     ! # of markers inside quad
     kinc = sum(nphase_counter(:,j,i))
+    
+    ! record the melting marker for adding temp
+    meltingmarker(kk,1) = i
+    meltingmarker(kk,2) = j
+    meltingmarker(kk,3) = 0 ! 0= no melting ; 1= melting
+    meltingmarker(kk,4) = 0    
+    !if (kk==4444) then
+    !   meltingmarker(kk,3)=1
+    !end if
 
     !XXX: Some quick checks to skip markers that won't change phase. Might
     !     not be accurate!
@@ -149,7 +163,7 @@
         !    mark(kk)%phase = kweakmc
         !endif
 
-    case (kmant1, kmant2)
+    case (kmant1)
         ! subuducted oceanic crust below mantle, mantle is serpentinized
         if(depth > max_basalt_depth) cycle
         ! Phase diagram taken from Ulmer and Trommsdorff, Nature, 1995
@@ -193,7 +207,7 @@
         ! Phase diagram taken from Ulmer and Trommsdorff, Nature, 1995
         ! Fixed points (730 C, 2.1 GPa) (500 C, 7.5 GPa)
         trpres = 2.1e9 + (7.5e9 - 2.1e9) * (tmpr - 730.) / (500. - 730.)
-        ! Fixed points (730 C, 2.1 GPa) (650 C, 0.2 GPa)
+        ! = Fixed pointsting faults (730 C, 2.1 GPa) (650 C, 0.2 GPa)
         trpres2 = 2.1e9 + (0.2e9 - 2.1e9) * (tmpr - 730.) / (650. - 730.)
         press = mantle_density * g * depth
         if (tmpr < serpentine_temp .or. (press < trpres .and. press > trpres2)) cycle
@@ -220,9 +234,8 @@
     case (khydmant)
         if (tmpr > ts(khydmant)) then
             ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
-            quad_area = 1./(area(j,i,1)+area(j,i,2))
+            quad_area = 1./area(j,i,1) + 1./area(j,i,2)
             andesitic_melt_vol(i) = andesitic_melt_vol(i) + quad_area * vol_frac_melt / kinc
-
             !$OMP critical (change_phase1)
             nphase_counter(iph,j,i) = nphase_counter(iph,j,i) - 1
             nphase_counter(kmant1,j,i) = nphase_counter(kmant1,j,i) + 1
@@ -230,11 +243,22 @@
             ichanged(nchanged) = i
             jchanged(nchanged) = j
             !$OMP end critical (change_phase1)
-            mark(kk)%phase = kmant1
+            mark(kk)%phase = kmant2
+
+            !add temp for melting         
+              !kinc = sum(nphase_counter(:,j,i))
+              !$OMP critical (melting_temp) 
+              !temp(2:j,i)   = temp(2:j,i)  + heat_latent/kinc/1000/(2*(j-2+1))
+              !temp(2:j,i+1) = temp(2:j,i+1)+ heat_latent/kinc/1000/(2*(j-2+1))
+              !$OMP end critical (melting_temp)
+            meltingmarker(kk,3) = 1
+            meltingmarker(kk,4) = sum(nphase_counter(:,j,i))
+            print* ,kk,meltingmarker(kk,1),meltingmarker(kk,2),meltingmarker(kk,3),meltingmarker(kk,4)  
         endif
     end select
-
-    if(nchanged >= 100*mnx) stop 38
+    if(nchanged >= 100*mnx) then
+        stop 38
+    end if
 enddo
 !$OMP end do
 !$OMP end parallel
@@ -266,5 +290,7 @@
 
 enddo
 
-return
+! accumulate andesitic_melt_vol
+acc_melt_vol = acc_melt_vol + sum(andesitic_melt_vol(1:nx-1))
+
 end subroutine change_phase
diff -r ebf9b25e80ad -r ae5fa0fdac1d util/flacmarker2vtk.py
--- a/util/flacmarker2vtk.py	Fri Aug 04 09:34:21 2017 +0800
+++ b/util/flacmarker2vtk.py	Mon Jan 22 15:26:08 2018 +0800
@@ -11,10 +11,10 @@
 
 # filtering markers to only those within the domain bounds (in km)
 filtering = True
-xmin = 300
-xmax = 700
-zmin = -50
-zmax = 100
+xmin = 500
+xmax = 1000
+zmin = -500
+zmax = 50
 
 
 def filter_marker(x, z, age, phase, ID):

changeset:   519:1f5533e6f8fe
user:        chii <chiilee1995@gmail.com>
date:        Tue Jan 23 02:20:26 2018 +0800
summary:     heat due to the magma beneath the arc (10-25km depth,triangle)

diff -r ae5fa0fdac1d -r 1f5533e6f8fe src/fl_therm.f90
--- a/src/fl_therm.f90	Mon Jan 22 15:26:08 2018 +0800
+++ b/src/fl_therm.f90	Tue Jan 23 02:20:26 2018 +0800
@@ -267,6 +267,11 @@
 !MOR heating
 temp(15:20,216:218) = temp(15:20,216:218) + MOR_heat/1000.
 
+!test
+meltingmarker(100,1)=100
+meltingmarker(100,2)=100
+meltingmarker(100,3) = 1
+
 !add temp for melting
 do kk= 1,nmarkers
    !if (kk==2)then
@@ -276,14 +281,77 @@
         i=meltingmarker(kk,1)
         j=meltingmarker(kk,2)
         kinc=meltingmarker(kk,4)
+        print*,kk,i,j        
+
+        do jj=1,j
+        depth = cord(1,i,2) - cord(jj,i,2)
+          if (depth<=10000)then 
+              j1 = jj
+          else if (depth<=25000) then
+              j2=jj
+          end if 
+        end do       
+        print*,j2
+        print *,'j1=',j1, cord(j1,i,1),cord(j1,i,2)
+        print *,'j2=',j2, cord(j2,i,1),cord(j2,i,2)
+
+        jL=j2-j1+1
+        iitemp=-1
+        nodetotal=0
+        if (modulo(jL,2).eq.1) then
+          do item=1,jL/2        
+             iitemp=iitemp+2
+             nodetotal=nodetotal+iitemp
+          end do
+          nodetotal=2*nodetotal+jL
+          print*,nodetotal
+
+          do m=0,jL/2
+             do n=-m,m
+             temp(j1+m,i+n)= min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
+             !temp(j1+m,i+n)=2000
+             print*,"(",j1+m,',',i+n,')'
+             end do
+          end do
+        print*,'----'
+          do m=0,jL/2-1
+             do n=-m,m
+             temp(j2-m,i+n)= min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
+             !temp(j2-m,i+n)=2000
+             print*,"(",j2-m,',',i+n,')',i,n
+             end do
+          end do
+ 
+       else 
+          do item=1,jL/2
+             iitemp=iitemp+2
+             nodetotal=nodetotal+iitemp
+          end do
+          nodetotal=2*nodetotal
+          print*,nodetotal 
+
+          do m=0,jL/2-1
+             do n=-m,m
+             temp(j1+m,i+n)=min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
+             !temp(j1+m,i+n)=2000
+             print*,"(",j1+m,',',i+n,')'
+             end do
+          end do
+          do m=0,L/2-1
+             do n=-m,m
+             temp(j2-m,i+n)=min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
+             !temp(j2-m,i+n)=2000
+             print*,"(",j2-m,',',i+n,')',i,n
+             end do
+          end do
+        end if
         !temp(2:j,i) = 2000.
         !print*,'threm: kk=',kk,'  i=',i,'  j=',j ,' kinc=', kinc
-        temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
-        temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
+        !temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
+        !temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
    endif
 end do
 
-
 time_t = time
 
 ! HOOK

changeset:   520:d4ffd43f3259
user:        chii <chiilee1995@gmail.com>
date:        Mon Jan 29 01:11:21 2018 +0800
summary:     Heating due to magma rise up beneath the arc (square)

diff -r 1f5533e6f8fe -r d4ffd43f3259 src/fl_therm.f90
--- a/src/fl_therm.f90	Tue Jan 23 02:20:26 2018 +0800
+++ b/src/fl_therm.f90	Mon Jan 29 01:11:21 2018 +0800
@@ -11,7 +11,7 @@
 
 heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
 MOR_heat = 0.     !9.e2
-heat_latent = 5.e4   !7.e6
+heat_latent =0.e4   !7.e6
 
 ! real_area = 0.5* (1./area(n,t))
 ! Calculate Fluxes in every triangle
@@ -268,15 +268,12 @@
 temp(15:20,216:218) = temp(15:20,216:218) + MOR_heat/1000.
 
 !test
-meltingmarker(100,1)=100
-meltingmarker(100,2)=100
-meltingmarker(100,3) = 1
+!meltingmarker(100,1)=100
+!meltingmarker(100,2)=100
+!meltingmarker(100,3) = 1
 
 !add temp for melting
 do kk= 1,nmarkers
-   !if (kk==2)then
-   !   print*,'loop'
-   !end if
    if( meltingmarker(kk,3).eq.1) then
         i=meltingmarker(kk,1)
         j=meltingmarker(kk,2)
@@ -284,71 +281,127 @@
         print*,kk,i,j        
 
         do jj=1,j
-        depth = cord(1,i,2) - cord(jj,i,2)
+          depth = cord(1,i,2) - cord(jj,i,2)
           if (depth<=10000)then 
               j1 = jj
           else if (depth<=25000) then
-              j2=jj
+              j2 = jj
           end if 
-        end do       
-        print*,j2
-        print *,'j1=',j1, cord(j1,i,1),cord(j1,i,2)
-        print *,'j2=',j2, cord(j2,i,1),cord(j2,i,2)
+        end do     
+        
+        jm=int((j1+j2)/2)
 
-        jL=j2-j1+1
-        iitemp=-1
-        nodetotal=0
-        if (modulo(jL,2).eq.1) then
-          do item=1,jL/2        
-             iitemp=iitemp+2
-             nodetotal=nodetotal+iitemp
-          end do
-          nodetotal=2*nodetotal+jL
-          print*,nodetotal
+        do ii=1,nx
+          dis = cord(jm,i,1) - cord(jm,ii,1)
+          if (dis >=7500)then
+              i1 = ii-1
+          else if (dis>=-7500) then
+              i2 = ii+1
+          end if
+        end do
 
-          do m=0,jL/2
-             do n=-m,m
-             temp(j1+m,i+n)= min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
-             !temp(j1+m,i+n)=2000
-             print*,"(",j1+m,',',i+n,')'
-             end do
-          end do
-        print*,'----'
-          do m=0,jL/2-1
-             do n=-m,m
-             temp(j2-m,i+n)= min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
-             !temp(j2-m,i+n)=2000
-             print*,"(",j2-m,',',i+n,')',i,n
-             end do
-          end do
- 
-       else 
-          do item=1,jL/2
-             iitemp=iitemp+2
-             nodetotal=nodetotal+iitemp
-          end do
-          nodetotal=2*nodetotal
-          print*,nodetotal 
+        print*,jm
+        print *,'p1=',i ,j1, cord(j1,i ,1)/1000,cord(j1,i ,2)
+        print *,'p2=',i1,jm, cord(jm,i1,1)/1000,cord(jm,i1,2)
+        print *,'p3=',i ,j2, cord(j2,i ,1)/1000,cord(j2,i ,2)
+        print *,'p4=',i2,jm, cord(jm,i2,1)/1000,cord(jm,i2,2)
+        
+     if (modulo((j1+j2),2).eq.0) then
+        do ii=1,nx
+        do jj=1,nz
+          if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
+              ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
+          nodes=nodes+1
+          end if 
+        end do
+        end do   
+        do ii=1,nx
+        do jj=1,nz
+          if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
+              ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
+          temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent/kinc/1000./nodes))
+          !temp(jj,ii)=2000.
+          end if 
+       end do
+       end do
+       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j2,i,2)-cord(j1,i,2)))/2
+  
+     else
+      do ii=1,nx
+      do jj=1,nz
+        if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
+            ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
+         nodes=nodes+1
+        end if 
+      end do
+      end do   
+      do ii=1,nx
+      do jj=1,nz
+        if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
+            ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
+        temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent/kinc/1000./nodes))
+        !temp(jj,ii)=2000.
+        end if 
+      end do
+      end do  
+      area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j2,i,2)-cord(j1,i,2))+(cord(jm+1,i,1)-cord(jm,i,1))))/2    
+     end if
 
-          do m=0,jL/2-1
-             do n=-m,m
-             temp(j1+m,i+n)=min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
-             !temp(j1+m,i+n)=2000
-             print*,"(",j1+m,',',i+n,')'
-             end do
-          end do
-          do m=0,L/2-1
-             do n=-m,m
-             temp(j2-m,i+n)=min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
-             !temp(j2-m,i+n)=2000
-             print*,"(",j2-m,',',i+n,')',i,n
-             end do
-          end do
-        end if
-        !temp(2:j,i) = 2000.
-        !print*,'threm: kk=',kk,'  i=',i,'  j=',j ,' kinc=', kinc
-        !temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
-        !temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
+        !jL=j2-j1+1
+        !iitemp=-1
+        !nodetotal=0
+        !if (modulo(jL,2).eq.1) then
+        !  do item=1,jL/2        
+        !     iitemp=iitemp+2
+        !     nodetotal=nodetotal+iitemp
+        !  end do
+        !  nodetotal=2*nodetotal+jL
+        !  print*,nodetotal
+!
+!          do m=0,jL/2
+!             do n=-m,m
+!             temp(j1+m,i+n)= min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
+!             !temp(j1+m,i+n)=2000
+!             print*,"(",j1+m,',',i+n,')'
+!             end do
+!          end do
+!        print*,'----'
+!          do m=0,jL/2-1
+!             do n=-m,m
+!             temp(j2-m,i+n)= min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
+!             !temp(j2-m,i+n)=2000
+!             print*,"(",j2-m,',',i+n,')',i,n
+!             end do
+!          end do
+! 
+!       else 
+!          do item=1,jL/2
+!             iitemp=iitemp+2
+!             nodetotal=nodetotal+iitemp
+!          end do
+!          nodetotal=2*nodetotal
+!          print*,nodetotal 
+!
+!          do m=0,jL/2-1
+!             do n=-m,m
+!             temp(j1+m,i+n)=min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
+!             !temp(j1+m,i+n)=2000
+!             print*,"(",j1+m,',',i+n,')'
+!             end do
+!          end do
+!          do m=0,L/2-1
+!             do n=-m,m
+!             temp(j2-m,i+n)=min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
+!             !temp(j2-m,i+n)=2000
+!             print*,"(",j2-m,',',i+n,')',i,n
+!             end do
+!          end do
+!        end if
+
+!        !temp(2:j,i) = 2000.
+!        !print*,'threm: kk=',kk,'  i=',i,'  j=',j ,' kinc=', kinc
+!        !temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
+!        !temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
    endif
 end do
 

changeset:   521:88ba521a42fa
user:        chii <chiilee1995@gmail.com>
date:        Mon Feb 05 10:31:53 2018 +0800
summary:     Optimization last version

diff -r d4ffd43f3259 -r 88ba521a42fa src/arrays.f90
--- a/src/arrays.f90	Mon Jan 29 01:11:21 2018 +0800
+++ b/src/arrays.f90	Mon Feb 05 10:31:53 2018 +0800
@@ -14,7 +14,7 @@
   real*8, pointer, save :: junk2(:,:)
 
   !array for arc melting
-  real*8, pointer, save :: meltingmarker(:,:)
+  real*8, pointer, save :: meltingmarker(:,:,:)
 contains
 
   subroutine allocate_arrays(nz, nx)
@@ -38,7 +38,7 @@
     allocate(ncod(nz, nx, 2))
 
     allocate(junk2(nz, nx))
-    allocate(meltingmarker(10000000,4))
+    allocate(meltingmarker(nz, nx, 2))
 
   end subroutine allocate_arrays
 
diff -r d4ffd43f3259 -r 88ba521a42fa src/fl_therm.f90
--- a/src/fl_therm.f90	Mon Jan 29 01:11:21 2018 +0800
+++ b/src/fl_therm.f90	Mon Feb 05 10:31:53 2018 +0800
@@ -11,7 +11,7 @@
 
 heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
 MOR_heat = 0.     !9.e2
-heat_latent =0.e4   !7.e6
+heat_latent =5.e6  !7.e6
 
 ! real_area = 0.5* (1./area(n,t))
 ! Calculate Fluxes in every triangle
@@ -264,21 +264,18 @@
 !$OMP end do
 !$OMP end parallel
 
-!MOR heating
+!MOR heating (chii)
 temp(15:20,216:218) = temp(15:20,216:218) + MOR_heat/1000.
 
 !test
-!meltingmarker(100,1)=100
-!meltingmarker(100,2)=100
-!meltingmarker(100,3) = 1
+!meltingmarker(30,90,1)=10
 
-!add temp for melting
-do kk= 1,nmarkers
-   if( meltingmarker(kk,3).eq.1) then
-        i=meltingmarker(kk,1)
-        j=meltingmarker(kk,2)
-        kinc=meltingmarker(kk,4)
-        print*,kk,i,j        
+!add temp for melting (chii)
+do j= 1,nz
+do i = 1,nx
+    if (meltingmarker(j,i,1) .ne. 0) then
+        kinc=meltingmarker(j,i,2)   
+        print* , i,j,kinc   
 
         do jj=1,j
           depth = cord(1,i,2) - cord(jj,i,2)
@@ -300,110 +297,69 @@
           end if
         end do
 
-        print*,jm
         print *,'p1=',i ,j1, cord(j1,i ,1)/1000,cord(j1,i ,2)
         print *,'p2=',i1,jm, cord(jm,i1,1)/1000,cord(jm,i1,2)
         print *,'p3=',i ,j2, cord(j2,i ,1)/1000,cord(j2,i ,2)
         print *,'p4=',i2,jm, cord(jm,i2,1)/1000,cord(jm,i2,2)
         
      if (modulo((j1+j2),2).eq.0) then
-        do ii=1,nx
-        do jj=1,nz
-          if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
-              ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
+
+        do jj=1,j
+        do ii= max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
+               min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
+
+
+        !do ii=1,nx
+        !do jj=1,nz
+          !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
+              !ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
           nodes=nodes+1
-          end if 
+          !end if 
         end do
         end do   
-        do ii=1,nx
-        do jj=1,nz
-          if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
-              ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
-          temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent/kinc/1000./nodes))
+        do jj=1,j
+        do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
+              min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
+
+
+          !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
+          !    ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
+          temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,2)/kinc/1000./nodes))
           !temp(jj,ii)=2000.
-          end if 
+          !end if 
        end do
        end do
        area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j2,i,2)-cord(j1,i,2)))/2
   
      else
-      do ii=1,nx
-      do jj=1,nz
-        if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
-            ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
+      do jj=1,j
+      do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
+            min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
+
+        !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1         .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
+        !    ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
          nodes=nodes+1
-        end if 
+        !end if 
       end do
       end do   
-      do ii=1,nx
-      do jj=1,nz
-        if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
-            ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
-        temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent/kinc/1000./nodes))
+      do jj=1,j
+      do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
+            min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
+
+        !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1         .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
+        !    ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
+        temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
         !temp(jj,ii)=2000.
-        end if 
+        !end if 
       end do
       end do  
       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j2,i,2)-cord(j1,i,2))+(cord(jm+1,i,1)-cord(jm,i,1))))/2    
      end if
 
-        !jL=j2-j1+1
-        !iitemp=-1
-        !nodetotal=0
-        !if (modulo(jL,2).eq.1) then
-        !  do item=1,jL/2        
-        !     iitemp=iitemp+2
-        !     nodetotal=nodetotal+iitemp
-        !  end do
-        !  nodetotal=2*nodetotal+jL
-        !  print*,nodetotal
-!
-!          do m=0,jL/2
-!             do n=-m,m
-!             temp(j1+m,i+n)= min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
-!             !temp(j1+m,i+n)=2000
-!             print*,"(",j1+m,',',i+n,')'
-!             end do
-!          end do
-!        print*,'----'
-!          do m=0,jL/2-1
-!             do n=-m,m
-!             temp(j2-m,i+n)= min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
-!             !temp(j2-m,i+n)=2000
-!             print*,"(",j2-m,',',i+n,')',i,n
-!             end do
-!          end do
-! 
-!       else 
-!          do item=1,jL/2
-!             iitemp=iitemp+2
-!             nodetotal=nodetotal+iitemp
-!          end do
-!          nodetotal=2*nodetotal
-!          print*,nodetotal 
-!
-!          do m=0,jL/2-1
-!             do n=-m,m
-!             temp(j1+m,i+n)=min(1300.,(temp(j1+m,i+n)+heat_latent/kinc/1000./nodetotal))
-!             !temp(j1+m,i+n)=2000
-!             print*,"(",j1+m,',',i+n,')'
-!             end do
-!          end do
-!          do m=0,L/2-1
-!             do n=-m,m
-!             temp(j2-m,i+n)=min(1300.,(temp(j2-m,i+n)+heat_latent/kinc/1000./nodetotal))
-!             !temp(j2-m,i+n)=2000
-!             print*,"(",j2-m,',',i+n,')',i,n
-!             end do
-!          end do
-!        end if
 
-!        !temp(2:j,i) = 2000.
-!        !print*,'threm: kk=',kk,'  i=',i,'  j=',j ,' kinc=', kinc
-!        !temp(2:16,i)   = min(1300.,(temp(2:16,i)  + heat_latent/kinc/1000./(2*15)))
-!        !temp(2:16,i+1) = min(1300.,(temp(2:16,i+1)+ heat_latent/kinc/1000./(2*15)))
    endif
 end do
+end do
 
 time_t = time
 
@@ -412,4 +368,5 @@
 if( if_intrus.eq.1 ) call MakeIntrusions
 
 return
+
 end 
diff -r d4ffd43f3259 -r 88ba521a42fa src/newphase2marker.f90
--- a/src/newphase2marker.f90	Mon Jan 29 01:11:21 2018 +0800
+++ b/src/newphase2marker.f90	Mon Feb 05 10:31:53 2018 +0800
@@ -79,6 +79,8 @@
   end if
 end do
 
+! data of melting element(chii)
+meltingmarker(:,:,1)=0
 
 ! nelem_inject was used for magma injection, reused here for serpentization
 nelem_serp = nelem_inject
@@ -91,6 +93,7 @@
 
 !$OMP parallel private(kk,i,j,k,n,tmpr,depth,iph,press,jbelow,trpres,trpres2,kinc,quad_area)
 !$OMP do schedule(guided)
+
 do kk = 1 , nmarkers
  
     if (mark(kk)%dead.eq.0) cycle
@@ -108,15 +111,6 @@
 
     ! # of markers inside quad
     kinc = sum(nphase_counter(:,j,i))
-    
-    ! record the melting marker for adding temp
-    meltingmarker(kk,1) = i
-    meltingmarker(kk,2) = j
-    meltingmarker(kk,3) = 0 ! 0= no melting ; 1= melting
-    meltingmarker(kk,4) = 0    
-    !if (kk==4444) then
-    !   meltingmarker(kk,3)=1
-    !end if
 
     !XXX: Some quick checks to skip markers that won't change phase. Might
     !     not be accurate!
@@ -232,6 +226,7 @@
         !$OMP end critical (change_phase1)
         mark(kk)%phase = kmetased
     case (khydmant)
+
         if (tmpr > ts(khydmant)) then
             ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
             quad_area = 1./area(j,i,1) + 1./area(j,i,2)
@@ -245,15 +240,10 @@
             !$OMP end critical (change_phase1)
             mark(kk)%phase = kmant2
 
-            !add temp for melting         
-              !kinc = sum(nphase_counter(:,j,i))
-              !$OMP critical (melting_temp) 
-              !temp(2:j,i)   = temp(2:j,i)  + heat_latent/kinc/1000/(2*(j-2+1))
-              !temp(2:j,i+1) = temp(2:j,i+1)+ heat_latent/kinc/1000/(2*(j-2+1))
-              !$OMP end critical (melting_temp)
-            meltingmarker(kk,3) = 1
-            meltingmarker(kk,4) = sum(nphase_counter(:,j,i))
-            print* ,kk,meltingmarker(kk,1),meltingmarker(kk,2),meltingmarker(kk,3),meltingmarker(kk,4)  
+            !record the data for melting element(chii)        
+            meltingmarker(j,i,1)=meltingmarker(j,i,1)+1
+            meltingmarker(j,i,2)=kinc            
+ 
         endif
     end select
     if(nchanged >= 100*mnx) then

changeset:   522:d5ebbf14c1d2
user:        chii <chiilee1995@gmail.com>
date:        Sat Feb 17 22:10:21 2018 +0800
summary:     debugs(with cool area 5x5 nodes /solidus of hydmant mentle changed /heat area 15x15km)

diff -r 88ba521a42fa -r d5ebbf14c1d2 src/fl_therm.f90
--- a/src/fl_therm.f90	Mon Feb 05 10:31:53 2018 +0800
+++ b/src/fl_therm.f90	Sat Feb 17 22:10:21 2018 +0800
@@ -11,7 +11,7 @@
 
 heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
 MOR_heat = 0.     !9.e2
-heat_latent =5.e6  !7.e6
+heat_latent =5.e5  !7.e6
 
 ! real_area = 0.5* (1./area(n,t))
 ! Calculate Fluxes in every triangle
@@ -307,8 +307,6 @@
         do jj=1,j
         do ii= max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
                min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
-
-
         !do ii=1,nx
         !do jj=1,nz
           !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
@@ -356,7 +354,10 @@
       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j2,i,2)-cord(j1,i,2))+(cord(jm+1,i,1)-cord(jm,i,1))))/2    
      end if
 
-
+     area_cooling=(cord(j,i+2,1)-cord(j,i-2,1))*(cord(j-2,i,2)-cord(j+2,i,2))
+     temp(j-2:j+2,i-2:i+2) = (temp(j-2:j+2,i-2:i+2)-heat_latent*area_heating/area_cooling/1000./25)
+     
+     nodes=0
    endif
 end do
 end do
diff -r 88ba521a42fa -r d5ebbf14c1d2 src/newphase2marker.f90
--- a/src/newphase2marker.f90	Mon Feb 05 10:31:53 2018 +0800
+++ b/src/newphase2marker.f90	Sat Feb 17 22:10:21 2018 +0800
@@ -56,6 +56,9 @@
 !real*8, parameter :: partial_melt_depth = -70.e3
 ! thickness of new crust
 real*8, parameter :: new_crust_thickness = 7.e3
+! soildus of hydmant mantle
+!real*8, parameter :: tshydmant
+
 
 !heat_latent=7.e6
 print*, 'do newphase2markers'
@@ -226,8 +229,12 @@
         !$OMP end critical (change_phase1)
         mark(kk)%phase = kmetased
     case (khydmant)
-
-        if (tmpr > ts(khydmant)) then
+        if (depth > -50e3)then
+            tshydmant=ts(khydmant)
+        else
+            tshydmant=(depth+50e3)*(180.)/(-50e3)+ts(khydmant)
+        endif
+        if (tmpr > tshydmant) then
             ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
             quad_area = 1./area(j,i,1) + 1./area(j,i,2)
             andesitic_melt_vol(i) = andesitic_melt_vol(i) + quad_area * vol_frac_melt / kinc

changeset:   523:0ad996b69eb4
user:        chii <chiilee1995@gmail.com>
date:        Tue Mar 06 12:18:04 2018 +0800
summary:     update by tan2's version

diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/arrays.f90
--- a/src/arrays.f90	Sat Feb 17 22:10:21 2018 +0800
+++ b/src/arrays.f90	Tue Mar 06 12:18:04 2018 +0800
@@ -12,7 +12,6 @@
 
   ! temporary array
   real*8, pointer, save :: junk2(:,:)
-
   !array for arc melting
   real*8, pointer, save :: meltingmarker(:,:,:)
 contains
diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/bar2euler.f90
--- a/src/bar2euler.f90	Sat Feb 17 22:10:21 2018 +0800
+++ b/src/bar2euler.f90	Tue Mar 06 12:18:04 2018 +0800
@@ -77,6 +77,43 @@
 end subroutine shape_functions
 
 
+subroutine shape_functions1(j, i, k, shp)
+  use arrays
+
+  include 'precision.inc'
+  include 'params.inc'
+  double precision, intent(out) :: shp(2,3)
+
+  if (k.eq.1) then
+     x1 = cord(j  ,i  ,1)
+     x2 = cord(j+1,i  ,1)
+     x3 = cord(j  ,i+1,1)
+     y1 = cord(j  ,i  ,2)
+     y2 = cord(j+1,i  ,2)
+     y3 = cord(j  ,i+1,2)
+  else  !if (k.eq.2) then
+     x1 = cord(j  ,i+1,1)
+     x2 = cord(j+1,i  ,1)
+     x3 = cord(j+1,i+1,1)
+     y1 = cord(j  ,i+1,2)
+     y2 = cord(j+1,i  ,2)
+     y3 = cord(j+1,i+1,2)
+  endif
+
+  ! Calculate triangle properties
+  det=( (x2*y3-y2*x3) - (x1*y3-y1*x3) + (x1*y2-y1*x2) )
+
+  !Find the parameters ONLY for 2 vertices
+  shp(1,1) = (x2*y3-y2*x3)/det
+  shp(1,2) = (y2-y3)/det
+  shp(1,3) = (x3-x2)/det
+  shp(2,1) = (x3*y1-y3*x1)/det
+  shp(2,2) = (y3-y1)/det
+  shp(2,3) = (x1-x3)/det
+
+end subroutine shape_functions1
+
+
 ! For brevity shp(1,2) --> s12 etc
 !
 ! a1 = s11 + s12*x + s13*y
diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/fl_therm.f90
--- a/src/fl_therm.f90	Sat Feb 17 22:10:21 2018 +0800
+++ b/src/fl_therm.f90	Tue Mar 06 12:18:04 2018 +0800
@@ -11,7 +11,7 @@
 
 heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
 MOR_heat = 0.     !9.e2
-heat_latent =5.e5  !7.e6
+heat_latent =1.e4  !7.e6
 
 ! real_area = 0.5* (1./area(n,t))
 ! Calculate Fluxes in every triangle
@@ -50,12 +50,12 @@
 !$OMP                  qs,real_area13,area_n,rhs)
 !$OMP do
 do i = 1,nx-1
-    j = 2  ! top
+    j = 1  ! top
     !iph = iphase(j,i)
     cp_eff = Eff_cp( j,i )
 
     ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
-    quad_area = 1./area(j,i,1) + 1./area(j,i,2)
+    quad_area = 1./(area(j,i,1)+area(j,i,2))
 
     temp(j,i  ) = temp(j,i  ) + andesitic_melt_vol(i  ) * heat_latent_magma / quad_area / cp_eff
     temp(j,i+1) = temp(j,i+1) + andesitic_melt_vol(i+1) * heat_latent_magma / quad_area / cp_eff
@@ -279,9 +279,9 @@
 
         do jj=1,j
           depth = cord(1,i,2) - cord(jj,i,2)
-          if (depth<=10000)then 
+          if (depth<=1.e4)then 
               j1 = jj
-          else if (depth<=25000) then
+          else if (depth<=4e4) then
               j2 = jj
           end if 
         end do     
@@ -290,9 +290,9 @@
 
         do ii=1,nx
           dis = cord(jm,i,1) - cord(jm,ii,1)
-          if (dis >=7500)then
+          if (dis >=7.5e3)then
               i1 = ii-1
-          else if (dis>=-7500) then
+          else if (dis>=-7.5e3) then
               i2 = ii+1
           end if
         end do
@@ -301,6 +301,7 @@
         print *,'p2=',i1,jm, cord(jm,i1,1)/1000,cord(jm,i1,2)
         print *,'p3=',i ,j2, cord(j2,i ,1)/1000,cord(j2,i ,2)
         print *,'p4=',i2,jm, cord(jm,i2,1)/1000,cord(jm,i2,2)
+        nodes=0.
         
      if (modulo((j1+j2),2).eq.0) then
 
@@ -327,7 +328,7 @@
           !end if 
        end do
        end do
-       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j2,i,2)-cord(j1,i,2)))/2
+       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j1,i,2)-cord(j2,i,2)))/2
   
      else
       do jj=1,j
@@ -351,13 +352,13 @@
         !end if 
       end do
       end do  
-      area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j2,i,2)-cord(j1,i,2))+(cord(jm+1,i,1)-cord(jm,i,1))))/2    
+      area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j1,i,2)-cord(j2,i,2))+(cord(jm,i,1)-cord(jm+1,i,1))))/2    
      end if
 
-     area_cooling=(cord(j,i+2,1)-cord(j,i-2,1))*(cord(j-2,i,2)-cord(j+2,i,2))
-     temp(j-2:j+2,i-2:i+2) = (temp(j-2:j+2,i-2:i+2)-heat_latent*area_heating/area_cooling/1000./25)
+     area_cooling=(cord(j,i+3,1)-cord(j,i-3,1))*(cord(j-3,i,2)-cord(j+3,i,2))
+     print*, area_cooling,area_heating
+     !temp(j-3:j+3,i-3:i+3) = (temp(j-3:j+3,i-3:i+3)-heat_latent*area_heating/area_cooling/1000./49)
      
-     nodes=0
    endif
 end do
 end do
diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/functions.f90
--- a/src/functions.f90	Sat Feb 17 22:10:21 2018 +0800
+++ b/src/functions.f90	Tue Mar 06 12:18:04 2018 +0800
@@ -78,6 +78,19 @@
 
 
 !==================================================
+! Get the largest eigenvalue and its eigenvector (with its x-component
+! fixed to 1) of the deviatoric of a symmetric 2x2 matrix
+subroutine eigen2x2(a11, a22, a12, eigval1, eigvecy1)
+include 'precision.inc'
+
+adif = 0.5 * (a11 - a22)
+eigval1 = sqrt(adif**2 + a12**2)
+eigvecy1 = (eigval1 - adif) / a12
+
+end subroutine eigen2x2
+
+
+  !==================================================
 subroutine SysMsg( message )
 include 'precision.inc'
 include 'params.inc'
diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/newphase2marker.f90
--- a/src/newphase2marker.f90	Sat Feb 17 22:10:21 2018 +0800
+++ b/src/newphase2marker.f90	Tue Mar 06 12:18:04 2018 +0800
@@ -39,7 +39,6 @@
 
 integer ichanged(100*mnx), jchanged(100*mnx)
 integer kph(1)
-!real heat_latent
 dimension ratio(20)
 
 ! max. depth (m) of eclogite phase transition
@@ -60,7 +59,6 @@
 !real*8, parameter :: tshydmant
 
 
-!heat_latent=7.e6
 print*, 'do newphase2markers'
 
 
@@ -94,7 +92,7 @@
 nchanged = 0
 
 
-!$OMP parallel private(kk,i,j,k,n,tmpr,depth,iph,press,jbelow,trpres,trpres2,kinc,quad_area)
+!$OMP parallel private(kk,i,j,k,n,tmpr,depth,iph,press,jbelow,trpres,trpres2,kinc,quad_area,yy)
 !$OMP do schedule(guided)
 
 do kk = 1 , nmarkers
@@ -107,10 +105,17 @@
     j = mod((n - k) / 2, nz-1) + 1
     i = (n - k) / 2 / (nz - 1) + 1
 
-    tmpr = 0.25*(temp(j,i)+temp(j+1,i)+temp(j,i+1)+temp(j+1,i+1))
+    if (k .eq. 1) then
+       yy = cord(j,i,2)*mark(kk)%a1 + cord(j+1,i,2)*mark(kk)%a2 +cord(j,i+1,2)*(1-mark(kk)%a1-mark(kk)%a2)
+       tmpr = temp(j,i)*mark(kk)%a1 + temp(j+1,i)*mark(kk)%a2 +temp(j,i+1)*(1-mark(kk)%a1-mark(kk)%a2)
+    else
+       yy = cord(j,i+1,2)*mark(kk)%a1 + cord(j+1,i,2)*mark(kk)%a2 +cord(j+1,i+1,2)*(1-mark(kk)%a1-mark(kk)%a2)
+       tmpr = temp(j,i+1)*mark(kk)%a1 + temp(j+1,i)*mark(kk)%a2 +temp(j+1,i+1)*(1-mark(kk)%a1-mark(kk)%a2)
+    endif
+
 
     ! depth below the surface in m
-    depth = (cord(1,i,2) - 0.5*(cord(j,i,2)+cord(j+1,i,2)))
+    depth = -yy
 
     ! # of markers inside quad
     kinc = sum(nphase_counter(:,j,i))
@@ -120,7 +125,7 @@
 
     ! If location of this element is too deep, this marker is already
     ! too deep in the mantle, where there is no significant phase change.
-    if (depth < -200.e3) cycle
+    if (depth > 200.e3) cycle
 
     iph = mark(kk)%phase
 
@@ -160,7 +165,7 @@
         !    mark(kk)%phase = kweakmc
         !endif
 
-    case (kmant1)
+    case (kmant1, kmant2)
         ! subuducted oceanic crust below mantle, mantle is serpentinized
         if(depth > max_basalt_depth) cycle
         ! Phase diagram taken from Ulmer and Trommsdorff, Nature, 1995
@@ -204,7 +209,7 @@
         ! Phase diagram taken from Ulmer and Trommsdorff, Nature, 1995
         ! Fixed points (730 C, 2.1 GPa) (500 C, 7.5 GPa)
         trpres = 2.1e9 + (7.5e9 - 2.1e9) * (tmpr - 730.) / (500. - 730.)
-        ! = Fixed pointsting faults (730 C, 2.1 GPa) (650 C, 0.2 GPa)
+        ! Fixed points (730 C, 2.1 GPa) (650 C, 0.2 GPa)
         trpres2 = 2.1e9 + (0.2e9 - 2.1e9) * (tmpr - 730.) / (650. - 730.)
         press = mantle_density * g * depth
         if (tmpr < serpentine_temp .or. (press < trpres .and. press > trpres2)) cycle
@@ -229,14 +234,14 @@
         !$OMP end critical (change_phase1)
         mark(kk)%phase = kmetased
     case (khydmant)
-        if (depth > -50e3)then
+        if (depth < 50.e3)then
             tshydmant=ts(khydmant)
         else
-            tshydmant=(depth+50e3)*(180.)/(-50e3)+ts(khydmant)
+            tshydmant=(depth-50.e3)*(180.)/(50.e3)+ts(khydmant)
         endif
         if (tmpr > tshydmant) then
             ! area(j,i) is INVERSE of "real" DOUBLE area (=1./det)
-            quad_area = 1./area(j,i,1) + 1./area(j,i,2)
+            quad_area = 1./(area(j,i,1)+area(j,i,2))
             andesitic_melt_vol(i) = andesitic_melt_vol(i) + quad_area * vol_frac_melt / kinc
             !$OMP critical (change_phase1)
             nphase_counter(iph,j,i) = nphase_counter(iph,j,i) - 1
@@ -253,9 +258,7 @@
  
         endif
     end select
-    if(nchanged >= 100*mnx) then
-        stop 38
-    end if
+    if(nchanged >= 100*mnx) stop 38
 enddo
 !$OMP end do
 !$OMP end parallel
diff -r d5ebbf14c1d2 -r 0ad996b69eb4 src/outflac.f90
--- a/src/outflac.f90	Sat Feb 17 22:10:21 2018 +0800
+++ b/src/outflac.f90	Tue Mar 06 12:18:04 2018 +0800
@@ -101,7 +101,6 @@
     open (1,file='eII.0',access='direct',recl=nwords*kindr) 
     write (1,rec=nrec) De
     close (1)
-endif
 
     do i = 1, nx-1
         do j = 1, nz-1
@@ -112,6 +111,35 @@
     write (1,rec=nrec) De
     close (1)
 
+    do i = 1, nx-1
+        do j = 1, nz-1
+            De(j,i) = real(strain(j,i,1))
+        end do
+    end do
+    open (1,file='exx.0',access='direct',recl=nwords*kindr) 
+    write (1,rec=nrec) De
+    close (1)
+
+    do i = 1, nx-1
+        do j = 1, nz-1
+            De(j,i) = real(strain(j,i,2))
+        end do
+    end do
+    open (1,file='ezz.0',access='direct',recl=nwords*kindr) 
+    write (1,rec=nrec) De
+    close (1)
+
+    do i = 1, nx-1
+        do j = 1, nz-1
+            De(j,i) = real(strain(j,i,3))
+        end do
+    end do
+    open (1,file='exz.0',access='direct',recl=nwords*kindr) 
+    write (1,rec=nrec) De
+    close (1)
+
+endif
+
 ! Density 
 if( io_mark.eq.1 ) then
    do i = 1, nx-1

changeset:   524:edf727ed6d4b
tag:         tip
user:        chii <chiilee1995@gmail.com>
date:        Mon Mar 19 15:21:22 2018 +0800
summary:     no cooling in fl_therm.f90

diff -r 0ad996b69eb4 -r edf727ed6d4b src/fl_therm.f90
--- a/src/fl_therm.f90	Tue Mar 06 12:18:04 2018 +0800
+++ b/src/fl_therm.f90	Mon Mar 19 15:21:22 2018 +0800
@@ -11,7 +11,7 @@
 
 heat_latent_magma = 0.  ! J/kg, latent heat of freezing magma
 MOR_heat = 0.     !9.e2
-heat_latent =1.e4  !7.e6
+heat_latent =7.e3  !7.e6
 
 ! real_area = 0.5* (1./area(n,t))
 ! Calculate Fluxes in every triangle
@@ -264,12 +264,6 @@
 !$OMP end do
 !$OMP end parallel
 
-!MOR heating (chii)
-temp(15:20,216:218) = temp(15:20,216:218) + MOR_heat/1000.
-
-!test
-!meltingmarker(30,90,1)=10
-
 !add temp for melting (chii)
 do j= 1,nz
 do i = 1,nx
@@ -297,10 +291,10 @@
           end if
         end do
 
-        print *,'p1=',i ,j1, cord(j1,i ,1)/1000,cord(j1,i ,2)
-        print *,'p2=',i1,jm, cord(jm,i1,1)/1000,cord(jm,i1,2)
-        print *,'p3=',i ,j2, cord(j2,i ,1)/1000,cord(j2,i ,2)
-        print *,'p4=',i2,jm, cord(jm,i2,1)/1000,cord(jm,i2,2)
+        !print *,'p1=',i ,j1, cord(j1,i ,1)/1000,cord(j1,i ,2)
+        !print *,'p2=',i1,jm, cord(jm,i1,1)/1000,cord(jm,i1,2)
+        !print *,'p3=',i ,j2, cord(j2,i ,1)/1000,cord(j2,i ,2)
+        !print *,'p4=',i2,jm, cord(jm,i2,1)/1000,cord(jm,i2,2)
         nodes=0.
         
      if (modulo((j1+j2),2).eq.0) then
@@ -308,55 +302,35 @@
         do jj=1,j
         do ii= max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
                min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
-        !do ii=1,nx
-        !do jj=1,nz
-          !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
-              !ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
-          nodes=nodes+1
-          !end if 
+               nodes=nodes+1 
         end do
         end do   
         do jj=1,j
         do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/(jm-j2)+i), &
               min((jj-jm)*(i-i2)/(j2-jm)+i2,(jj-j1)*(i2-i)/(jm-j1)+i )
-
-
-          !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1 .and. ii>=(jj-j2)*(i1-i)/(jm-j2)+i .and. &
-          !    ii<=(jj-jm)*(i-i2)/(j2-jm)+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
-          temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,2)/kinc/1000./nodes))
-          !temp(jj,ii)=2000.
-          !end if 
+              temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
        end do
        end do
-       area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j1,i,2)-cord(j2,i,2)))/2
+       !area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*(cord(j1,i,2)-cord(j2,i,2)))/2
   
      else
       do jj=1,j
       do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
             min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
-
-        !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1         .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
-        !    ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
-         nodes=nodes+1
-        !end if 
+            nodes=nodes+1
       end do
       end do   
       do jj=1,j
       do ii=max((jj-jm)*(i-i1)/(j1-jm)+i1,(jj-j2)*(i1-i)/((jm+1)-j2)+i), &
             min((jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2,(jj-j1)*(i2-i)/(jm-j1)+i)
-
-        !if (ii>=(jj-jm)*(i-i1)/(j1-jm)+i1         .and. ii>=(jj-j2)*(i1-i)/((jm+1)-j2)+i .and. &
-        !    ii<=(jj-(jm+1))*(i-i2)/(j2-(jm+1))+i2 .and. ii<=(jj-j1)*(i2-i)/(jm-j1)+i)then
-        temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
-        !temp(jj,ii)=2000.
-        !end if 
+            temp(jj,ii)=min(1300.,(temp(jj,ii)+heat_latent*meltingmarker(j,i,1)/kinc/1000./nodes))
       end do
       end do  
-      area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j1,i,2)-cord(j2,i,2))+(cord(jm,i,1)-cord(jm+1,i,1))))/2    
+      !area_heating=((cord(jm,i2,1)-cord(jm,i1,1))*((cord(j1,i,2)-cord(j2,i,2))+(cord(jm,i,1)-cord(jm+1,i,1))))/2    
      end if
 
-     area_cooling=(cord(j,i+3,1)-cord(j,i-3,1))*(cord(j-3,i,2)-cord(j+3,i,2))
-     print*, area_cooling,area_heating
+     !area_cooling=(cord(j,i+3,1)-cord(j,i-3,1))*(cord(j-3,i,2)-cord(j+3,i,2))
+     !print*, area_cooling,area_heating
      !temp(j-3:j+3,i-3:i+3) = (temp(j-3:j+3,i-3:i+3)-heat_latent*area_heating/area_cooling/1000./49)
      
    endif

